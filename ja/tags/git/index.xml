<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Git on 向叔の手帳</title>
        <link>https://ttf248.life/ja/tags/git/</link>
        <description>Recent content in Git on 向叔の手帳</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja</language>
        <lastBuildDate>Mon, 02 Jun 2025 07:41:32 +0800</lastBuildDate><atom:link href="https://ttf248.life/ja/tags/git/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Git での履歴記録におけるコミット情報 (または、提交信息)</title>
        <link>https://ttf248.life/ja/p/git-modify-commit-message/</link>
        <pubDate>Wed, 07 May 2025 18:38:31 +0800</pubDate>
        
        <guid>https://ttf248.life/ja/p/git-modify-commit-message/</guid>
        <description>&lt;p&gt;スクリプトは、Git の履歴コミットの作者情報をまとめて変更し、&lt;code&gt;git filter-branch&lt;/code&gt; を使用して履歴コミット記録を書き換えます。&lt;/p&gt;
&lt;p&gt;ご提供いただいたスクリプトは、Git リポジトリの履歴コミット中の作者情報をまとめて修正するものであり、全体的な思路は正しいですが、&lt;code&gt;git filter-branch&lt;/code&gt; の &lt;code&gt;--env-filter&lt;/code&gt; に配列（例: &lt;code&gt;OLD_EMAILS=(&amp;quot;...&amp;quot;)&lt;/code&gt;）を使用すると、互換性の問題が発生する可能性があります。これは、一部のシェル環境（例: &lt;code&gt;/bin/sh&lt;/code&gt;）が配列構文をサポートしていないためです。
互換性を高めるために、配列をスペースで区切られた文字列に置き換え、&lt;code&gt;for&lt;/code&gt; ループを使用して各古いメールアドレスを反復処理することを推奨します。以下は修正後のスクリプトの例です。
&lt;strong&gt;注意点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;このスクリプトを実行する前に、必ずリポジトリのバックアップを作成し、予期せぬ事態を防いでください。 - この操作は Git の履歴を書き換えるため、コミットの作成者情報を変更し、コミットハッシュ値が変化する可能性があります。&lt;/li&gt;
&lt;li&gt;既に変更をリモートリポジトリにプッシュしている場合は、強制プッシュが必要です。
強制プッシュの使用には十分注意し、特に複数人での共同開発プロジェクトでは、他者に影響を与えないようにしてください。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;リポジトリ内のすべてのユニークな作者メールアドレスを統計する&lt;/p&gt;</description>
        </item>
        <item>
        <title>Git で HTTP リポジトリを無効にする</title>
        <link>https://ttf248.life/ja/p/git-disable-http-repositories/</link>
        <pubDate>Mon, 08 Jan 2024 21:22:04 +0800</pubDate>
        
        <guid>https://ttf248.life/ja/p/git-disable-http-repositories/</guid>
        <description>&lt;p&gt;習慣更新ソフトウェアのバージョンを更新しましたが、どのバージョンの &lt;code&gt;Git&lt;/code&gt; から開始すべきか不明です。&lt;code&gt;Http&lt;/code&gt; リポジトリからのコード取得は禁止します。&lt;/p&gt;
&lt;h2 id=&#34;背景説明&#34;&gt;背景説明
&lt;/h2&gt;&lt;p&gt;環境：Windows 平台、これまで小烏龟を使ってgitを操作しており、鍵の認証も小烏龜で処理していました。以前、ローカルリポジトリを一括更新するスクリプトを作成したこともあります。&lt;/p&gt;
&lt;p&gt;前回の記事へのリンク：[ローカルGitリポジトリの一括更新](&amp;lt;{{ relref &amp;ldquo;/post/2023/10-19-批量更新本地git仓库&amp;rdquo; &amp;gt;})&lt;/p&gt;
&lt;p&gt;今日、帰宅してコードの更新を実行したところ、上記のエラーが発生し、リポジトリが正常に更新されなくなりました。&lt;code&gt;Git&lt;/code&gt;の設定でHTTPプロトコルを使用するように変更してみるのが自然な解決策でしたが、対応する設定項目は見つかりませんでした。&lt;/p&gt;
&lt;p&gt;最も簡単な解決策は、SSHプロトコルを使用してリポジトリを更新することです。会社側で短期的にHTTPSプロトコルを提供していません。&lt;/p&gt;
&lt;h2 id=&#34;既存の問題&#34;&gt;既存の問題
&lt;/h2&gt;&lt;p&gt;以前、ローカルリポジトリをまとめて更新するスクリプトを作成する際に、&lt;code&gt;ssh&lt;/code&gt; を使ってリポジトリをプルすることを検討していたが、詳細を確認しなかった。小烏龜（TortoiseGit）で設定した &lt;code&gt;git&lt;/code&gt; の設定情報を config に同期していないため、コマンドラインから実行した際に問題が発生した。&lt;/p&gt;
&lt;p&gt;コマンドで鍵の認証を確認しても正しい：&lt;code&gt;ssh -T git@gitlab.yintech.net&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;もし Git 小烏龟 (TortoiseGit) で正常にコードをプルできるなら、コマンドラインでの &lt;code&gt;git pull&lt;/code&gt; コマンド実行時に鍵が正しくないというエラーが表示される場合、Git 小烏龜は PuTTY の SSH 鍵を使用しているのに対し、コマンドラインは OpenSSH の SSH 鍵を使用している可能性がある。&lt;/p&gt;
&lt;p&gt;小烏龟の設定鍵はシステム上の &lt;code&gt;.&lt;/code&gt; から同期されない。 SSH フォルダの読み取り秘密鍵ファイルの情報ではなく、インターフェースのレポジトリ設定時に、個別に秘密鍵ファイルのパスを設定する、役立つコツ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;取得した最初のレポジトリで秘密鍵を設定すれば、残りのレポジトリがその秘密鍵ファイルを再利用する。&lt;/li&gt;
&lt;li&gt;PuTTY が秘密鍵をロードした後、すぐに終了せず、代理サービスを開始する。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;グローバル設定を調整し、システムデフォルトの &lt;code&gt;ssh&lt;/code&gt; 設定を使用しないようにすることで、Git Bash は TortoisePlink を使用して SSH 操作を実行する。この設定は、TortoiseGit に付属している PuTTY ツールを使用する場合に適している。&lt;/p&gt;
&lt;h2 id=&#34;既存の問題点&#34;&gt;既存の問題点
&lt;/h2&gt;&lt;p&gt;上記の構成で実行ファイルファイルのパスを、対応する小烏龟のパスに修正してください。完全なパスを使用しているため、システム環境変数に追加する必要はありません。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>ローカルのGitリポジトリと履歴上の遺留権限の問題の一括更新</title>
        <link>https://ttf248.life/ja/p/bulk-update-local-git-repository-and-legacy-permission-issues/</link>
        <pubDate>Thu, 19 Oct 2023 14:16:22 +0800</pubDate>
        
        <guid>https://ttf248.life/ja/p/bulk-update-local-git-repository-and-legacy-permission-issues/</guid>
        <description>&lt;p&gt;チームのプロジェクト間に依存関係があり、歴史的な理由から&lt;code&gt;submodule&lt;/code&gt;を使用してプロジェクトの依存関係を管理していません。日常の開発では、リポジトリコードを順番に手動で更新する必要があり、そうでない場合、さまざまな奇妙な問題が発生する可能性があります。&lt;/p&gt;
&lt;p&gt;オンラインの情報源を参照して、構造は基本的に同じです。ローカルでgit_list.txtというディレクトリを維持し、スクリプトを使用してディレクトリを反復処理し、一度に更新を実行し、その後、起動前にこのスクリプトを実行します。&lt;/p&gt;
&lt;h2 id=&#34;linux&#34;&gt;Linux
&lt;/h2&gt;&lt;p&gt;新しいファイルを作成：batch_pull.sh&lt;/p&gt;
&lt;h2 id=&#34;windows&#34;&gt;Windows
&lt;/h2&gt;&lt;p&gt;新しいファイルを作成する：batch_pull.bat&lt;/p&gt;
&lt;h3 id=&#34;過去の遺留問題&#34;&gt;過去の遺留問題
&lt;/h3&gt;&lt;p&gt;再装システム後に遭遇した &lt;code&gt;git&lt;/code&gt; フォルダの権限ファイルに対処：&lt;strong&gt;致命的なエラー「unsafe repository (&amp;rsquo;/home/repon&amp;rsquo; is owned by someone else)」&lt;/strong&gt;
オンラインで推奨される解決策はほとんどが &lt;code&gt;stack overflow&lt;/code&gt; からのものです：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;リポジトリディレクトリに信頼を追加: &lt;code&gt;git config --global --add safe.directory /home/repon&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.gitconfig&lt;/code&gt; ファイルを手動で編集し、ディレクトリへの信頼を指定
上記の手段で、リポジトリの更新は正常になったが、毎回 &lt;code&gt;git pull&lt;/code&gt; を実行する際にコンソールに多数の警告メッセージが表示され、所有者エラーに関する情報が出力される&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;デスクトップ環境のシステム再インストール&#34;&gt;デスクトップ環境のシステム再インストール
&lt;/h3&gt;&lt;p&gt;長らくシステムを再インストールしていなかったマシンで、システムイメージ内のゴミファイルが爆発的に増加し、手動で再インストールせざるを得なくなった。空き時間を利用してシステムを再構築し、再びこの権限の問題に遭遇した。以前のスクリプトは動作せず、修正した権限が不完全だった。&lt;/p&gt;
&lt;p&gt;新しい解決策を採用し、&lt;code&gt;*&lt;/code&gt;を追加することで&lt;code&gt;git&lt;/code&gt;がすべてのディレクトリを自動的に信頼するように設定した。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;これはユーザー権限の問題なのか、それとも皆さんがWindowsプラットフォームに慣れていないのか。確かに&lt;code&gt;chown&lt;/code&gt;のようなコマンドが存在する。フォルダの所有者を変更することも可能だ。ただし、このワークステーションにはドメイン情報が追加されており、会社のドメインで異常が発生しているのか、あるいはローカルシステム設定に異常があるのか、ユーザーリスト内でログインに使用するユーザーが見つからない。最終的にはコマンドラインから処理を行った。&lt;/p&gt;
&lt;p&gt;管理者権限で&lt;code&gt;powershell&lt;/code&gt;スクリプト&lt;code&gt;change_ower&lt;/code&gt;を実行した。 ps1&lt;code&gt;、スクリプトファイルのエンコードを&lt;/code&gt;gbk`に調整してください。中国のオペレーティングシステムでは、こうすることで文字化けを防ぐことができます。&lt;/p&gt;
&lt;p&gt;予期せぬ事態が再び発生しました。スクリプト実行時の出力された日本語情報が乱れ、コンソールでの文字コード設定やスクリプトのエンコードを調整しても改善されません。おそらく頭がおかしくなっているのでしょう。コントロールパネル-地域-言語設定のベータ機能を有効にし、グローバルにUnicodeエンコーディングを適用すると正常に戻りました。しかし、複数の開発ソフトウェアが正常に動作せず、後で資料を見返すと、スクリプトファイルのエンコードを&lt;code&gt;gbk&lt;/code&gt;に設定する必要があることがわかりました。 ### デスクトップ環境のシステム再インストール
長らくシステムを再インストールしていなかったマシンで、システムイメージ内のゴミファイルが爆発的に増加し、手動で再インストールせざるを得なくなった。空き時間を利用してシステムを再構築したが、再びこの権限の問題に遭遇した。以前のスクリプトは動作せず、修正した権限が不完全だった。&lt;/p&gt;
&lt;p&gt;新しい解決策を採用し、&lt;code&gt;*&lt;/code&gt;を追加することで&lt;code&gt;git&lt;/code&gt;がすべてのディレクトリを自動的に信頼するように変更した。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;これはユーザー権限の問題なのか、それとも皆さんがWindowsプラットフォームに慣れていないのか。Windowsには&lt;code&gt;chown&lt;/code&gt;のようなコマンドが存在する。フォルダの所有者を変更することも可能だ。ただし、ディレクトリ数が少ない場合は手動で所有者も変更できる。しかし、このワークステーションにはドメイン情報が追加されており、会社のドメインに異常があるのか、あるいはローカルシステム設定に異常があるのか、ユーザーリスト内でログインに使用するユーザーが見つからない。最終的にはコマンドラインから処理を行った。&lt;/p&gt;
&lt;p&gt;管理者権限で&lt;code&gt;powershell&lt;/code&gt;スクリプト&lt;code&gt;change_ower&lt;/code&gt;を実行した。&lt;/p&gt;
&lt;h2 id=&#34;资料&#34;&gt;资料
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://ganzhixiong.com/p/f1b9f4fc/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://ganzhixiong.com/p/f1b9f4fc/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/71901632/fatal-error-unsafe-repository-home-repon-is-owned-by-someone-else&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stackoverflow.com/questions/71901632/fatal-error-unsafe-repository-home-repon-is-owned-by-someone-else&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>いくつかのGitコマンドのまとめ</title>
        <link>https://ttf248.life/ja/p/git-less-common-commands-summary/</link>
        <pubDate>Fri, 17 Feb 2023 10:08:57 +0800</pubDate>
        
        <guid>https://ttf248.life/ja/p/git-less-common-commands-summary/</guid>
        <description>&lt;p&gt;あまり使わないけれど非常に便利な &lt;code&gt;git&lt;/code&gt; コマンド&lt;/p&gt;
&lt;h3 id=&#34;システムを再インストールした結果windows上のフォルダーの所有権情報が変更されました&#34;&gt;システムを再インストールした結果、Windows上のフォルダーの所有権情報が変更されました。
&lt;/h3&gt;&lt;p&gt;新しいバージョンのGitにはセキュリティチェックが追加され、危険であると警告が表示されるため、操作できなくなりました。&lt;/p&gt;
&lt;h3 id=&#34;新しいコンピューターのユーザーアカウントおよびパスワード情報を保存する場合&#34;&gt;新しいコンピューターのユーザーアカウントおよびパスワード情報を保存する場合
&lt;/h3&gt;&lt;p&gt;保存した情報が変更が必要な場合は、まず古い証明書をクリアしてください。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
