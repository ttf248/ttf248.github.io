<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Sysbench on 向叔の手帳</title>
        <link>https://ttf248.life/ja/tags/sysbench/</link>
        <description>Recent content in Sysbench on 向叔の手帳</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja</language>
        <lastBuildDate>Mon, 02 Jun 2025 20:54:02 +0800</lastBuildDate><atom:link href="https://ttf248.life/ja/tags/sysbench/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Linuxシステムベンチマークテスト</title>
        <link>https://ttf248.life/ja/p/linux-system-benchmark-test/</link>
        <pubDate>Tue, 09 Jan 2024 10:56:23 +0800</pubDate>
        
        <guid>https://ttf248.life/ja/p/linux-system-benchmark-test/</guid>
        <description>&lt;p&gt;Windows 平台上有鲁大师（娱乐大师），不能说数据很准，但总归有个参考，当然也有其他的专业跑分软件。到了 Linux 系统，好像一直没遇到特别合适的跑分软件。&lt;/p&gt;
&lt;p&gt;Sysbench 是一款多功能的基准测试工具，可用于测试 CPU、内存、文件 I/O、线程性能等。您可以使用 Sysbench 来执行各种性能测试任务。&lt;/p&gt;
&lt;p&gt;手头上刚好有三台机器用于测试：机械师 mini 本地小主机、阿里云 dev 开发云服务器、华为云开发服务器。&lt;/p&gt;
&lt;h2 id=&#34;sysbench-のインストール&#34;&gt;Sysbench のインストール
&lt;/h2&gt;&lt;p&gt;ほとんどの Linux ディストリビューションでは、パッケージマネージャを使用して Sysbench をインストールできます。例えば、CentOS 8 では、次のコマンドを使用します。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo dnf install sysbench
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;sysbenchの使用例&#34;&gt;Sysbenchの使用例
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;CPU性能のテスト: &lt;code&gt;sysbench --test=cpu run&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;メモリ読み取り性能のテスト: &lt;code&gt;sysbench --test=memory run&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ファイルI/O性能のテスト:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sysbench --test=fileio --file-test-mode=rndrw prepare
sysbench --test=fileio --file-test-mode=rndrw run
sysbench --test=fileio --file-test-mode=rndrw cleanup
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;マルチスレッド性能のテスト: &lt;code&gt;sysbench --test=threads --num-threads=4 run&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;MySQLデータベース性能のテスト（最大接続数を調整する必要あり）：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sysbench --test=oltp --db-driver=mysql --mysql-db=test --mysql-user=yourusername --mysql-password=yourpassword --oltp-table-size=1000000 prepare
sysbench --test=oltp --db-driver=mysql --mysql-db=test --mysql-user=yourusername --mysql-password=yourpassword --max-time=60 --oltp-read-only=off --oltp-test-mode=complex --max-requests=0 run
sysbench --test=oltp --db-driver=mysql --mysql-db=test --mysql-user=yourusername --mysql-password=yourpassword cleanup
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;ランニングデータレポート&#34;&gt;ランニングデータレポート
&lt;/h2&gt;&lt;meta http-equiv=&#34;Content-Type&#34; content=&#34;text/html; charset=utf-8&#34;&gt;&lt;link type=&#34;text/css&#34; rel=&#34;stylesheet&#34; href=&#34;resources/sheet.css&#34; &gt;
&lt;h2 id=&#34;実行データレポート&#34;&gt;実行データレポート
&lt;/h2&gt;&lt;style type=&#34;text/css&#34;&gt;.ritz .waffle a { color: inherit; }.ritz .waffle .s0{background-color:#ffffff;text-align:left;color:#000000;font-family:&#39;Arial&#39;;font-size:10pt;vertical-align:bottom;white-space:nowrap;direction:ltr;padding:2px 3px 2px 3px;}&lt;/style&gt;&lt;div class=&#34;ritz grid-container&#34; dir=&#34;ltr&#34;&gt;&lt;table class=&#34;waffle&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&#34;row-header freezebar-origin-ltr&#34;&gt;&lt;/th&gt;&lt;th id=&#34;0C0&#34; style=&#34;width:100px;&#34; class=&#34;column-headers-background&#34;&gt;A&lt;/th&gt;&lt;th id=&#34;0C1&#34; style=&#34;width:421px;&#34; class=&#34;column-headers-background&#34;&gt;B&lt;/th&gt;&lt;th id=&#34;0C2&#34; style=&#34;width:398px;&#34; class=&#34;column-headers-background&#34;&gt;C&lt;/th&gt;&lt;th id=&#34;0C3&#34; style=&#34;width:422px;&#34; class=&#34;column-headers-background&#34;&gt;D&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr style=&#34;height: 20px&#34;&gt;&lt;th id=&#34;0R0&#34; style=&#34;height: 20px;&#34; class=&#34;row-headers-background&#34;&gt;&lt;div class=&#34;row-header-wrapper&#34; style=&#34;line-height: 20px&#34;&gt;1&lt;/div&gt;&lt;/th&gt;&lt;td&gt;&lt;/td&gt;&lt;td class=&#34;s0&#34; dir=&#34;ltr&#34;&gt;ローカル機械師&lt;/td&gt;&lt;td class=&#34;s0&#34; dir=&#34;ltr&#34;&gt;阿里云&lt;/td&gt;&lt;td class=&#34;s0&#34; dir=&#34;ltr&#34;&gt;华为云&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;height: 20px&#34;&gt;&lt;th id=&#34;0R1&#34; style=&#34;height: 20px;&#34; class=&#34;row-headers-background&#34;&gt;&lt;div class=&#34;row-header-wrapper&#34; style=&#34;line-height: 20px&#34;&gt;2&lt;/div&gt;&lt;/th&gt;&lt;td class=&#34;s0&#34; dir=&#34;ltr&#34;&gt;システム構成&lt;/td&gt;&lt;td class=&#34;s0&#34; dir=&#34;ltr&#34;&gt;システム情報&lt;br&gt;  オペレーティングシステム              Ubuntu 23.04&lt;br&gt;  カーネル                        Linux 6.2.0-36-generic x86_64&lt;br&gt;  モデル                         Machenike Machenike DT Computer&lt;br&gt;  マザーボード                   Machenike Machenike DT Computer&lt;br&gt;  BIOS                          American Megatrends International, LLC.&lt;br&gt;DB19V012&lt;br&gt;&lt;br&gt;CPU情報&lt;br&gt;  名前                          Intel Core i7-12650H&lt;br&gt;  トポロジー                      1 プロセッサ、10 コア、16 スレッド&lt;br&gt;  識別子                    GenuineIntel Family 6 Model 154 Stepping 3&lt;br&gt;  ベース周波数                4.60 GHz&lt;br&gt;  L1 命令キャッシュ          32.0 KB x 8&lt;br&gt;  L1 データキャッシュ                 48.0 KB x 8&lt;br&gt;  L2 キャッシュ                      1.25 MB x 2&lt;br&gt;  L3 キャッシュ                      24.0 MB&lt;br&gt;&lt;br&gt;メモリ情報&lt;br&gt;  サイズ                          62.6 GB&lt;/td&gt;&lt;td class=&#34;s0&#34; dir=&#34;ltr&#34;&gt;システム情報&lt;br&gt;  オペレーティングシステム              CentOS Stream 8&lt;br&gt;  カーネル                        Linux 4.18.0-513.el8.x86_64 x86_64&lt;br&gt;  モデル                         Alibaba Cloud Alibaba Cloud ECS&lt;br&gt;  マザーボード                   N/A&lt;br&gt;  BIOS                          SeaBIOS 449e491&lt;br&gt;&lt;br&gt;CPU情報&lt;br&gt;  名前                          Intel(R) Xeon(R) Platinum&lt;br&gt;  トポロジー                      1 プロセッサ、1 コア、2 スレッド&lt;br&gt;  識別子                    GenuineIntel Family 6 Model 85 Stepping 4&lt;br&gt;  ベース周波数                2.50 GHz&lt;br&gt;  L1 命令キャッシュ          32.0 KB&lt;br&gt;  L1 データキャッシュ                 32.0 KB&lt;br&gt;  L2 キャッシュ                      1.00 MB&lt;br&gt;  L3 キャッシュ                      33.0 MB&lt;br&gt;&lt;br&gt;メモリ情報&lt;br&gt;  サイズ                          1.65 GB&lt;/td&gt;&lt;td class=&#34;s0&#34; dir=&#34;ltr&#34;&gt;システム情報&lt;br&gt;  オペレーティングシステム              Ubuntu 22.04.1 LTS&lt;br&gt;  カーネル                        Linux 5. - 64 GB
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;実行データレポート
system LuaJIT 2.1.0-beta3)&lt;br&gt;&lt;br&gt;テストの実行方法：指定されたオプションで&lt;br&gt;スレッド数: 1&lt;br&gt;乱数ジェネレーターを現在の時間から初期化&lt;br&gt;&lt;br&gt;&lt;br&gt;素数の制限: 10000&lt;br&gt;&lt;br&gt;ワーカーのスレッドの初期化&amp;hellip;&lt;br&gt;&lt;br&gt;スレッドが開始されました!&lt;br&gt;&lt;br&gt;CPU速度:&lt;br&gt;    毎秒イベント数: 4032.48&lt;br&gt;&lt;br&gt;一般的な統計情報:&lt;br&gt;    合計時間: 10.0004秒&lt;br&gt;    イベントの総数: 40330&lt;br&gt;&lt;br&gt;遅延 (ms):&lt;br&gt;         最小値: 0.25&lt;br&gt;         平均値: 0.25&lt;br&gt;         最大値: 0.73&lt;br&gt;         95パーセンタイル: 0.25&lt;br&gt;         合計: 9997.55&lt;br&gt;&lt;br&gt;スレッドの公平性:&lt;br&gt;    イベント (平均/標準偏差): 40330.0000/0.00&lt;br&gt;    実行時間 (平均/標準偏差): 9.9975/0.00&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;データマイニング&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ディープラーニング&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ニューラルネットワーク - 実行データレポート
system LuaJIT 2.1.0-beta3)&lt;br&gt;&lt;br&gt;テストの実行方法：指定されたオプションで&lt;br&gt;スレッド数: 1&lt;br&gt;乱数ジェネレーターを現在の時間から初期化&lt;br&gt;&lt;br&gt;&lt;br&gt;素数の制限: 10000&lt;br&gt;&lt;br&gt;ワーカーのスレッドの初期化&amp;hellip;&lt;br&gt;&lt;br&gt;スレッドが開始されました!&lt;br&gt;&lt;br&gt;CPU速度:&lt;br&gt;    毎秒イベント数: 4032.48&lt;br&gt;&lt;br&gt;一般的な統計情報:&lt;br&gt;    合計時間: 10.0004秒&lt;br&gt;    合計イベント数: 40330&lt;br&gt;&lt;br&gt;遅延 (ms):&lt;br&gt;         最小: 0.25&lt;br&gt;         平均: 0.25&lt;br&gt;         最大: 0.73&lt;br&gt;         95パーセンタイル: 0.25&lt;br&gt;         合計: 9997.55&lt;br&gt;&lt;br&gt;スレッドの公平性:&lt;br&gt;    イベント (平均/標準偏差): 40330.0000/0.00&lt;br&gt;    実行時間 (平均/標準偏差): 9.9975/0.00&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sysbench 1.0.20 (system LuaJIT 2.1.0-beta3を使用)&lt;br&gt;&lt;br&gt;テストの実行方法：指定されたオプションで&lt;br&gt;スレッド数: 1&lt;br&gt;乱数ジェネレーターを現在の時間から初期化&lt;br&gt;&lt;br&gt;&lt;br&gt;素数の制限: 10000&lt;br&gt;&lt;br&gt;ワーカーのスレッドの初期化&amp;hellip;&lt;br&gt;&lt;br&gt;スレッドが開始されました!&lt;br&gt;&lt;br&gt;CPU速度:&lt;br&gt;    毎秒イベント数: 1062.51&lt;br&gt;&lt;br&gt;一般的な統計情報:&lt;br&gt;    合計時間: 10.0008秒&lt;br&gt;    合計イベント数: 10628&lt;br&gt;&lt;br&gt;遅延 (ms):&lt;br&gt;         最小: 0.91&lt;br&gt;         平均: 0.94&lt;br&gt;         最大: 22.84&lt;br&gt;         95パーセンタイル: 1.06&lt;br&gt;         合計: 9993.46&lt;br&gt;&lt;br&gt;スレッドの公平性:&lt;br&gt;    イベント (平均/標準偏差): 10628.0000/0.00&lt;br&gt;    実行時間 (平均/標準偏差): 9.9935/0.00&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sysbench 1.0.20 (system LuaJIT 2.1.0-beta3を使用)&lt;br&gt;&lt;br&gt;テストの実行方法：指定されたオプションで&lt;br&gt;スレッド数: 1&lt;br&gt;乱数ジェネレーターを現在の時間から初期化&lt;br&gt;&lt;br&gt;&lt;br&gt;素数の制限: 10000&lt;br&gt;&lt;br&gt;ワーカーのスレッドの初期化&amp;hellip;&lt;br&gt;&lt;br&gt;スレッドが開始されました!&lt;br&gt;&lt;br&gt;CPU速度:&lt;br&gt;    毎秒イベント数: 1125.56&lt;br&gt;&lt;br&gt;一般的な統計情報:&lt;br&gt;    合計時間: 10.0005秒&lt;br&gt;    合計イベント数: 11258&lt;br&gt;&lt;br&gt;遅延 (ms):&lt;br&gt;         最小: 0.86&lt;br&gt;         平均: 0.89&lt;br&gt;         最大: 1.70&lt;br&gt;         95パーセンタイル: 0.99&lt;br&gt;         合計: 9995.40&lt;br&gt;&lt;br&gt;スレッドの公平性:&lt;br&gt;    イベント (平均/標準偏差): 11258.0000/0.00&lt;br&gt;    実行時間 (平均/標準偏差): 9.9954/0.00&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;メモリテストを実行するオプション：指定されたオプションで&lt;br&gt;ブロックサイズ: 1KiB&lt;br&gt;合計サイズ: 102400MiB&lt;br&gt;操作: 書き込み&lt;br&gt;範囲: グローバル&lt;br&gt;&lt;br&gt;ワーカーのスレッドの初期化&amp;hellip;&lt;br&gt;&lt;br&gt;スレッドが開始されました!&lt;br&gt;&lt;br&gt;総イベント数: 101993199 (10198146.52/秒)&lt;br&gt;&amp;lt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ランダム数生成レポート&#34;&gt;ランダム数生成レポート
&lt;/h2&gt;&lt;p&gt;現在の時刻からの乱数ジェネレーター&lt;br&gt;&lt;br&gt;&lt;br&gt;次のオプションでメモリ速度テストを実行中:&lt;br&gt;  ブロックサイズ：1KiB&lt;br&gt;  合計サイズ：102400MiB&lt;br&gt;  操作：書き込み&lt;br&gt;  範囲：グローバル&lt;br&gt;&lt;br&gt;ワーカースレッドの初期化&amp;hellip;&lt;br&gt;&lt;br&gt;スレッド開始!&lt;br&gt;&lt;br&gt;総操作数：48418803 (1秒あたり4841004.79)&lt;br&gt;&lt;br&gt;転送されたデータ：47283.99 MiB (1秒あたり4727.54 MiB)&lt;br&gt;&lt;br&gt;&lt;br&gt;一般的な統計:&lt;br&gt;    合計時間：                          10.0001s&lt;br&gt;    イベント総数：              48418803&lt;br&gt;&lt;br&gt;レイテンシ（ms）：&lt;br&gt;         最小：                                    0.00&lt;br&gt;         平均：                                    0.00&lt;br&gt;         最大：                                   25.26&lt;br&gt;         95パーセンタイル：                        0.00&lt;br&gt;         合計：                                 4578.95&lt;br&gt;&lt;br&gt;スレッドの公平性:&lt;br&gt;    イベント（平均/標準偏差）：           48418803.0000/0.00&lt;br&gt;    実行時間（平均/標準偏差）：   4.5789/0.00&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;ランニングテストで次のオプションを使用中：&lt;br&gt;スレッド数：1&lt;br&gt;現在の時刻からの乱数ジェネレーターの初期化&lt;br&gt;&lt;br&gt;&lt;br&gt;追加ファイルオープンフラグ：（なし）&lt;br&gt;128ファイル、各16MiB&lt;br&gt;2GiBの合計ファイルサイズ&lt;br&gt;ブロックサイズ 16KiB&lt;br&gt;IOリクエスト数：0&lt;br&gt;組み合わせてランダムIOテストの読み取り/書き込み比率：1.50&lt;br&gt;定期的なFSYNCが有効になっており、各100リクエストごとにfsync()を呼び出しています。&lt;br&gt;テストの最後にfsync()を呼び出すことが有効になっています。&lt;br&gt;同期I/Oモードを使用&lt;br&gt;ランダムな読み取り/書き込みテストを実行中&lt;br&gt;ワーカースレッドの初期化&amp;hellip;&lt;br&gt;&lt;br&gt;スレッド開始!&lt;br&gt;&lt;br&gt;&lt;br&gt;ファイル操作：&lt;br&gt;    読み取り/秒：                      3373.41&lt;br&gt;    書き込み/秒：                     2248.94&lt;br&gt;    fsync/秒：                     7201.80&lt;br&gt;&lt;br&gt;スループット：&lt;br&gt;    読み取り、MiB/s：                  52.71&lt;br&gt;    書き込み、MiB/s：               35.14&lt;br&gt;&lt;br&gt;一般的な統計：&lt;br&gt;    合計時間：                          10.0127s&lt;br&gt;    イベント総数：              128288&lt;br&gt;&lt;br&gt;レイテンシ（ms）：&lt;br&gt;         最小：                                    0.00&lt;br&gt;         平均：                                    0.08&lt;br&gt;         最大：                                    5.14&lt;br&gt;         95パーセンタイル：                        0.34&lt;br&gt;         合計：                                 9977.78&lt;br&gt;&lt;br&gt;スレッドの公平性：&lt;br&gt;    イベント（平均/標準偏差）：           128288.0000/0.00&lt;br&gt;    実行時間（平均/標準偏差）：   9.9778/0.00&lt;/p&gt;
&lt;p&gt;スループット：&lt;br&gt;    読み取り、MiB/s：                  52.71&lt;br&gt;    書き込み、MiB/s：               35.14&lt;br&gt;&lt;br&gt;一般的な統計：&lt;br&gt;    合計時間：                          10.0127s&lt;br&gt;    イベント総数：              128288&lt;br&gt;&lt;br&gt;レイテンシ（ms）：&lt;br&gt;         最小：                                    0.00&lt;br&gt;         平均：                                    0.08&lt;br&gt;         最大：                                    5.14&lt;br&gt;         95パーセンタイル：                        0.34&lt;br&gt;         合計：                                 9977.78&lt;br&gt;&lt;br&gt;スレッドの公平性：&lt;br&gt;    イベント（平均/標準 ## ランダム数生成データレポート
現在の時刻からの乱数ジェネレーター&lt;br&gt;&lt;br&gt;&lt;br&gt;次のオプションでメモリ速度テストを実行中:&lt;br&gt;  ブロックサイズ：1KiB&lt;br&gt;  合計サイズ：102400MiB&lt;br&gt;  操作：書き込み&lt;br&gt;  範囲：グローバル&lt;br&gt;&lt;br&gt;ワーカースレッドの初期化&amp;hellip;&lt;br&gt;&lt;br&gt;スレッド開始!&lt;br&gt;&lt;br&gt;総操作数：48418803 (1秒あたり4841004.79)&lt;br&gt;&lt;br&gt;転送されたデータ：47283.99 MiB (1秒あたり4727.54 MiB)&lt;br&gt;&lt;br&gt;&lt;br&gt;一般的な統計:&lt;br&gt;    合計時間：                          10.0001s&lt;br&gt;    イベント総数：              48418803&lt;br&gt;&lt;br&gt;遅延（ms）：&lt;br&gt;         最小：                                    0.00&lt;br&gt;         平均：                                    0.00&lt;br&gt;         最大：                                   25.26&lt;br&gt;         95パーセンタイル：                        0.00&lt;br&gt;         合計：                                 4578.95&lt;br&gt;&lt;br&gt;スレッドの公平性:&lt;br&gt;    イベント（平均/標準偏差）：           48418803.0000/0.00&lt;br&gt;    実行時間（平均/標準偏差）：   4.5789/0.00&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;テストオプションで実行中:&lt;br&gt;スレッド数：1&lt;br&gt;現在の時刻からの乱数ジェネレーターの初期化&lt;br&gt;&lt;br&gt;&lt;br&gt;追加ファイルオープンフラグ：（なし）&lt;br&gt;128ファイル、各16MiB&lt;br&gt;2GiBの合計ファイルサイズ&lt;br&gt;ブロックサイズ 16KiB&lt;br&gt;IOリクエスト数：0&lt;br&gt;組み合わせてランダムIOテストの読み取り/書き込み比率：1.50&lt;br&gt;定期的なFSYNCが有効になり、各100リクエストごとにfsync()が呼び出されます。&lt;br&gt;テストの終了時にfsync()を呼び出す。有効になっています。&lt;br&gt;同期I/Oモードを使用&lt;br&gt;ランダムな読み取り/書き込みテストを実行中&lt;br&gt;ワーカースレッドの初期化&amp;hellip;&lt;br&gt;&lt;br&gt;スレッド開始!&lt;br&gt;&lt;br&gt;&lt;br&gt;ファイル操作:&lt;br&gt;    読み取り/秒：                      3373.41&lt;br&gt;    書き込み/秒：                     2248.94&lt;br&gt;    fsync/秒：                     7201.80&lt;br&gt;&lt;br&gt;スループット:&lt;br&gt;    読み取り、MiB/s：                  52.71&lt;br&gt;    書き込み、MiB/s：               35.14&lt;br&gt;&lt;br&gt;一般的な統計:&lt;br&gt;    合計時間：                          10.0127s&lt;br&gt;    イベント総数：              128288&lt;br&gt;&lt;br&gt;遅延（ms）：&lt;br&gt;         最小：                                    0.00&lt;br&gt;         平均：                                    0.08&lt;br&gt;         最大：                                    5.14&lt;br&gt;         95パーセンタイル：                        0.34&lt;br&gt;         合計：                                 9977.78&lt;br&gt;&lt;br&gt;スレッドの公平性:&lt;br&gt;    イベント（平均/標準偏差）：           128288.0000/0.00&lt;br&gt;    実行時間（平均/標準偏差）：   9.9778/0.00&lt;/p&gt;
&lt;p&gt;スループット：
読み取り、MiB/s： 52.71
書き込み、MiB/s： 35.14&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;ディスク: 2147483648 バイトを 1.81 秒で書き込みました (1129.59 MiB/秒)。&lt;br&gt;&lt;br&gt;テストオプションで実行中:&lt;br&gt;スレッド数：1&lt;br&gt;現在の時刻からの乱数ジェネレーターの初期化&lt;br&gt;&lt;br&gt;&lt;br&gt;追加ファイルオープンフラグ：（なし）&lt;br&gt;128ファイル、各16MiB&lt;br&gt;2GiBの合計ファイルサイズ&lt;br&gt;ブロックサイズ 16KiB&lt;br&gt;IOリクエスト数：0&lt;br&gt;組み合わせてランダムIOテストの読み取り/書き込み比率：1.&lt;/p&gt;
&lt;h2 id=&#34;実行データレポート-1&#34;&gt;実行データレポート
&lt;/h2&gt;&lt;p&gt;enabled, 各100リクエストごとにfsync()を呼び出す。&lt;br&gt;テストの終了時にfsync()を呼び出し、有効化。&lt;br&gt;同期I/Oモードを使用中&lt;br&gt;ランダムなr/wテストを実行中&lt;br&gt;ワーカースレッドの初期化&amp;hellip;&lt;br&gt;&lt;br&gt;スレッドが開始されました!&lt;br&gt;&lt;br&gt;&lt;br&gt;ファイル操作:&lt;br&gt;    読み込み/秒:                      1593.12&lt;br&gt;    書き込み/秒:                     1062.08&lt;br&gt;    fsync/秒:                     3406.64&lt;br&gt;&lt;br&gt;帯域幅:&lt;br&gt;    読み取り (MiB/s):                  24.89&lt;br&gt;    書き込み (MiB/s):               16.60&lt;br&gt;&lt;br&gt;一般的な統計:&lt;br&gt;    合計時間:                          10.0164秒&lt;br&gt;    イベント総数:              60600&lt;br&gt;&lt;br&gt;レイテンシ (ms):&lt;br&gt;         最小:                                    0.00&lt;br&gt;         平均:                                    0.16&lt;br&gt;         最大:                                   31.32&lt;br&gt;         95パーセンタイル:                        0.54&lt;br&gt;         合計:                                 9956.30&lt;br&gt;&lt;br&gt;スレッドの公平性:&lt;br&gt;    イベント (平均/標準偏差):           60600.0000/0.00&lt;br&gt;    実行時間 (平均/標準偏差):   9.9563/0.00&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2147483648 バイトを 18.29 秒で書き込みました (111.98 MiB/秒)。&lt;br&gt;&lt;br&gt;以下のオプションでテストを実行中:&lt;br&gt;スレッド数: 1&lt;br&gt;現在の時刻から乱数ジェネレーターを初期化&lt;br&gt;&lt;br&gt;&lt;br&gt;追加のファイルオープンフラグ:(なし)&lt;br&gt;128 ファイル、各 16MiB&lt;br&gt;2GiB の合計ファイルサイズ&lt;br&gt;ブロックサイズ 16KiB&lt;br&gt;IO リクエスト数: 0&lt;br&gt;ランダムな IO テストの読み取り/書き込み比率: 1.50&lt;br&gt;定期的な FS INC を有効にし、各 100 リクエストごとに fsync() を呼び出す。&lt;br&gt;テストの終了時に fsync() を呼び出し、有効化。&lt;br&gt;同期 I/O モードを使用中&lt;br&gt;ランダムな r/w テストを実行中&lt;br&gt;ワーカースレッドの初期化&amp;hellip;&lt;br&gt;&lt;br&gt;スレッドが開始されました!&lt;br&gt;&lt;br&gt;&lt;br&gt;ファイル操作:&lt;br&gt;    読み込み/秒:                      1665.88&lt;br&gt;    書き込み/秒:                     1110.59&lt;br&gt;    fsync/秒:                     3563.77&lt;br&gt;&lt;br&gt;帯域幅:&lt;br&gt;    読み取り (MiB/s):                  26.03&lt;br&gt;    書き込み (MiB/s):               17.35&lt;br&gt;&lt;br&gt;一般的な統計:&lt;br&gt;    合計時間:                          10.0112秒&lt;br&gt;    イベント総数:              63355&lt;br&gt;&lt;br&gt;レイテンシ (ms):&lt;br&gt;         最小:                                    0.00&lt;br&gt;         平均:                                    0.16&lt;br&gt;         最大:                                  205.01&lt;br&gt;         95パーセンタイル:                        0.78&lt;br&gt;         合計:                                 9972.64&lt;br&gt;&lt;br&gt;スレッドの公平性:&lt;br&gt;    イベント (平均/標準偏差):           63355.0000/0.00&lt;br&gt;    実行時間 (平均/標準偏差):   9.9726/0.00&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;スレッド数: 4
初期化されたランダムな数値ジェネレーターから現在の時刻を初期化&amp;hellip;&lt;br&gt;&lt;br&gt;ワーカースレッドが開始されました!&lt;br&gt;&lt;br&gt;&lt;br&gt;一般的な統計:&lt;br&gt;    合計時間:                          10.0002秒&lt;br&gt;    イベント総数:              197956&lt;br&gt;&lt;br&gt;レイテンシ (ms):&lt;br&gt;         最小:                                    0.16&lt;br&gt;         平均:                                    0.20&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;実行結果レポート&#34;&gt;実行結果レポート
&lt;/h2&gt;&lt;p&gt;合計: 40050.41&lt;br&gt;&lt;br&gt;スレッド公平性:&lt;br&gt;  イベント (平均/標準偏差): 4590.0000/94.36&lt;br&gt;  実行時間 (平均/標準偏差): 10.0126/0.00&lt;/p&gt;
&lt;p&gt;テスト実行時のオプション:
スレッド数: 4
現在の時刻から乱数生成器を初期化
&lt;br&gt;&lt;br&gt;&lt;br&gt;ワーカースレッドの初期化&amp;hellip;&lt;br&gt;&lt;br&gt;
スレッド起動!&lt;br&gt;&lt;br&gt;&lt;br&gt;
一般統計:
合計時間: 10.0004秒
合計イベント数: 28536&lt;br&gt;&lt;br&gt;遅延 (ms):
最小: 0.23
平均: 1.40
最大: 3.56
95パーセンタイル: 1.47
合計: 39975.16&lt;br&gt;&lt;br&gt;スレッド公平性:
イベント (平均/標準偏差): 7134.0000/39.87
実行時間 (平均/標準偏差): 9.9938/0.01&lt;/p&gt;
&lt;h2 id=&#34;追記&#34;&gt;追記
&lt;/h2&gt;&lt;p&gt;ChatGPTは依然として優れたものですが、以前習得していたMarkdownで完全にテーブルを作成できず、テーブルとして表示すると効果が著しく低下します。カスタムテーマによってページの最大幅が制限されるため、幅を百分率制に調整しました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;簡単な方法としては、TablesGeneratorのようなオンラインツールを使用してHTMLテーブルを生成する方法がありますが（内容が複雑だと不向きです）。&lt;/li&gt;
&lt;li&gt;または、Googleドキュメントで作成し、HTMLドキュメントとしてダウンロードして保存し、ブログに直接コピーする方法を採用しました（シンプルかつ直接的です）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;configの設定でunsafeな設定項目を有効にし、ページごとの幅設定を個別に指定するようにしてください。Hugoでは、ページごとに個別に幅を設定できます。これは、ページのFront Matterにカスタムパラメータを追加することで実現できます。以下はその例です。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;MarkdownファイルのFront Matterセクション（通常はファイルの冒頭部分）にカスタムパラメータ（例えば&lt;code&gt;custom_width&lt;/code&gt;）を追加します：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;---
title: &amp;quot;私のページ&amp;quot;
date: 2024-01-09
custom_width: &amp;quot;800px&amp;quot;  # 幅を800ピクセルに設定
---

本文内容...
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Hugoのテーマで、対応する単一ページテンプレートファイル（例えば&lt;code&gt;layouts/_default/single.html&lt;/code&gt;）を見つけてください。&lt;/li&gt;
&lt;li&gt;単一ページテンプレート内で、Front Matterに&lt;code&gt;custom_width&lt;/code&gt;パラメータが存在するか確認し、それを適切なHTML要素（例えば&lt;code&gt;div&lt;/code&gt;）に適用します：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;{{ define &amp;quot;main&amp;quot; }}
  &amp;lt;div style=&amp;quot;max-width: {{ with .Params.custom_width }}{{ . }}{{ else }}100%{{ end }}; margin: 0 auto;&amp;quot;&amp;gt;
    {{ .Content }}
  &amp;lt;/div&amp;gt;
{{ end }}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;この例では、内联スタイル（&lt;code&gt;style&lt;/code&gt;属性）を使用して&lt;code&gt;div&lt;/code&gt;要素の&lt;code&gt;max-width&lt;/code&gt;属性を設定し、&lt;code&gt;custom_width&lt;/code&gt;パラメータが指定されていない場合、幅をデフォルトで100%にしています。&lt;code&gt;margin: 0 auto;&lt;/code&gt;は&lt;code&gt;div&lt;/code&gt;要素を中央揃えにします。&lt;/p&gt;
&lt;p&gt;実際のアプリケーションでは、テーマの構造やCSSスタイルの詳細に応じて、上記の例を調整する必要がある場合があります。スタイルを調整する際には、テーマの一貫性と可読性を維持するようにしてください。&lt;/p&gt;
&lt;p&gt;最後に、使用しているテーマが若干異なるため、サイト全体でカスタムCSSの設定も調整しました。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
