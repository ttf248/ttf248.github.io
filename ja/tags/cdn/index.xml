<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>CDN on 向叔の手帳</title>
        <link>https://ttf248.life/ja/tags/cdn/</link>
        <description>Recent content in CDN on 向叔の手帳</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja</language>
        <lastBuildDate>Mon, 02 Jun 2025 19:00:25 +0800</lastBuildDate><atom:link href="https://ttf248.life/ja/tags/cdn/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>ウェブサイトの高速化とドメイン設定</title>
        <link>https://ttf248.life/ja/p/website-acceleration-and-domain-setup/</link>
        <pubDate>Sat, 20 Jun 2020 10:36:27 +0800</pubDate>
        
        <guid>https://ttf248.life/ja/p/website-acceleration-and-domain-setup/</guid>
        <description>&lt;p&gt;境内アクセス時のGitHub Pagesの速度が遅いため、著者が個人ドメインを取得し、国内クラウドホスティングプロバイダーのCDN加速サービスを購入しました。設定中に、wwwサフィックスドメインへのアクセスができない問題が発生しましたが、最終的に汎用ドメインのDNS解決を削除し、セカンドレベルドメインを個別に設定することで解決しました。著者はまた、CDN加速の原理と設定経験、およびNginxを用いた逆プロキシの試みと教訓についても共有しています。&lt;/p&gt;
&lt;h3 id=&#34;背景&#34;&gt;背景
&lt;/h3&gt;&lt;p&gt;ウェブサイトはGitHub Pagesにホストされており、周知のところ、GitHub Pages内へのアクセスが遅いことがありました。そこで個人ドメインを取得し、国内クラウドホスティングプロバイダーのCDN加速サービスを導入しました。加速サービスのセットアップ時に、開発マシンにもDocker、frp、k8sなどのサービスをデプロイしており、これらのサービスにはそれぞれダッシュボードが用意されていることを思い出し、無駄を省くという原則に基づき、複数のリバースプロキシを設定し、すべてサブドメインに付与しました。
その時、サブドメインであるwww.xiangtianlong.comへのアクセスが突然できなくなったため、阿里云でDNSレコードを設定し、www.xiangtianlong.comとxiangtianlong.comの両方を解析するように設定しましたが、CDN加速を有効にしていない状態で両方のドメインは正常に動作していました。 CDNを構成する際に、サブドメインが多いため汎用ドメインルールを有効にし、すべての開発マシンにルーティングしたところ、結果的にwwwというサブドメインもダウンしてしまいました。はい、正眼に見えているはずです。wwwプレフィックスはサブドメインなのです。 実際のウェブサイトはGitHub Pagesでホストされており、開発マシンにはウェブサイトのキャッシュ情報が一切ありません。&lt;/p&gt;
&lt;p&gt;なぜ開発マシンにサイトがデプロイされていないのかというと、静的ブログであり、GitHubが提供するActionと組み合わせて自動的にパブリッシュされるためです。本当に美味い（素晴らしい）ですね。&lt;/p&gt;
&lt;h3 id=&#34;ドメイン&#34;&gt;ドメイン
&lt;/h3&gt;&lt;p&gt;非専門的なWeb開発におけるドメインの理解は、SEOやクロスドメインの問題を含まない。ブログサイトとして、裸ドメインがブログ主のサイトを強調しやすく、特に私が漢数字でのローマ字表記をドメイン名としている場合や、現在のモバイルアクセスが多い状況では、入力する文字数を減らすことが望ましい。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PC版では、ショートカットキーでwwwとcomの入力を省略できる&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;cdn&#34;&gt;CDN
&lt;/h3&gt;&lt;p&gt;阿里云和腾讯云都使用过，对于新人来说上手不难。腾讯云还有视频讲解相关的概念。CDN加速的原理与京东仓库类似：发售新商品时，提前统一配送到全国各地的仓库，触发配送请求时，就近分发。&lt;/p&gt;
&lt;p&gt;回源地址：网站资源原始存放的地址
缓存文件设置，浏览器F12，管理控制台，简单分析静态资源和动态资源&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全部0天有效期&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.php;.jsp;.asp;.aspx&lt;/code&gt; 0天有效期&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.jpg;.png;.js;.css;.woff2&lt;/code&gt; 1天有效期&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;腾讯云配置规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缓存过期规则最多可配置10条&lt;/li&gt;
&lt;li&gt;多条缓存过期规则之间的优先级为底部优先&lt;/li&gt;
&lt;li&gt;缓存过期时间最多可设置365天&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;悲惨な自述&#34;&gt;悲惨な自述
&lt;/h3&gt;&lt;p&gt;以前、Nginxを使ったことがなく、ウェブサイトを検索すれば反転プロキシの設定が分るだろうとばかり思っていた。結果的に少し混乱し、半日もかけて302リダイレクトもできなかった。結局、役に立たなかった。そこで、面倒くさいからDNS解析で汎用的なドメイン名の解析を削除して、個別のサブドメインを設定してみることにした。その時、阿里云DNS解析に「表示URL転送」という機能があることに気づき、試してみたら、これがまさに私が求めていた302リダイレクトだった。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最初のサブドメインを正常にアクセスできた。次に設定しようとしたところ、役に立たなかった。もう人生終わったかと思ったら、しばらく待っていると突然使えるようになった。阿里云のDNSキャッシュが時々不安定なのだとわかった。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;参考資料&#34;&gt;参考資料
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.zhihu.com/question/20414602&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;なぜ多くのウェブサイトのドメイン名に「www」プレフィックスが付加されていないのか？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cloudxns.net/Support/detail/id/918.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;www付きとなく付加されていないドメイン名の違いは何ですか？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gythialy.github.io/Docker-nginx-reverse-proxy/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker nginx 反向プロキシ設定&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
