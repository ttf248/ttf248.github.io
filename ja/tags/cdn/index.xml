<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>CDN on 向叔の手帳</title>
        <link>https://ttf248.life/ja/tags/cdn/</link>
        <description>Recent content in CDN on 向叔の手帳</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja</language>
        <lastBuildDate>Mon, 02 Jun 2025 20:54:02 +0800</lastBuildDate><atom:link href="https://ttf248.life/ja/tags/cdn/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>ウェブサイトの高速化とドメイン設定</title>
        <link>https://ttf248.life/ja/p/website-acceleration-and-domain-setup/</link>
        <pubDate>Sat, 20 Jun 2020 10:36:27 +0800</pubDate>
        
        <guid>https://ttf248.life/ja/p/website-acceleration-and-domain-setup/</guid>
        <description>&lt;p&gt;境内アクセス時のGitHub Pagesの速度が遅いため、著者が個人ドメインを取得し、国内クラウドホスティングプロバイダーのCDN加速サービスを購入しました。設定中に、wwwサフィックスドメインへのアクセスができない問題が発生しましたが、最終的に汎用ドメインのDNS解析を削除し、セカンドレ벨ドメインを個別に設定することで解決しました。著者はまた、CDN加速の原理と設定経験、およびNginxを用いた逆プロキシの試みと教訓についても共有しています。&lt;/p&gt;
&lt;h3 id=&#34;背景&#34;&gt;背景
&lt;/h3&gt;&lt;p&gt;ウェブサイトはGitHub Pagesにホストされており、周知のところ、GitHub Pagesへの国内アクセスが遅いことがありました。そこで個人ドメインを取得し、国内クラウドホスティングプロバイダーのCDN加速サービスを購入しました。加速サービスのセットアップ時に、開発マシンにもDocker、frp、k8sなどのサービスをデプロイしており、これらのサービスにはそれぞれダッシュボードが用意されていることを思い出し、無駄を省くという原則に基づき、複数のリバースプロキシを設定し、すべてサブドメインに付与しました。
その時、サブドメインであるwwwがアクセスできなくなったことに気づきました。阿里云でDNS設定を行い、www.xiangtianlong.comとxiangtianlong.comの両方を解析するように設定しましたが、CDN加速を有効にしていないときは両方のドメインが正常に使用できました。
CDN加速を設定した際、サブドメインが多数存在するため、汎用的なルールを有効にし、すべて開発マシンにルーティングしました。その結果、wwwというサブドメインもダウンしてしまいました。はい、正しく理解してくださいましたか？wwwプレフィックスはサブドメインです。実際にはウェブサイトはGitHub Pagesにデプロイされており、開発マシンにはウェブサイトのキャッシュ情報は一切ありません。
開発マシンにサイトをデプロイしなかったのは、静的ブログであり、GitHubが提供するActionで自動的に統合して公開されるため、本当に美味しかった（真香）からです。&lt;/p&gt;
&lt;h3 id=&#34;ドメイン&#34;&gt;ドメイン
&lt;/h3&gt;&lt;p&gt;非専門的なWeb開発において、ドメインの理解はSEOやクロスオリジン問題といった概念を含まない。ブログサイトとして、裸ドメインがブログ主のサイトを強調しやすく、特に私が漢数字でのローマ字表記をドメイン名としている場合や、現在のモバイルアクセスが多い状況では、入力する文字数を減らすことが望ましい。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PC版ではキーボードショートカットでwwwとcomの入力を省略可能&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;cdn&#34;&gt;CDN
&lt;/h3&gt;&lt;p&gt;阿里云和腾讯云都用过，初心者でも扱いやすく、腾讯云には動画で関連概念を解説しています。CDN加速の原理は、京东倉庫と似ています。新商品が出版される際、全国各地の倉庫にまとめて配送し、配送リクエストが発生した際に、最も近い倉庫から配信します。&lt;/p&gt;
&lt;p&gt;キャッシュサーバー（回源アドレス）：ウェブサイトのリソースが元の場所で保存されている場所
キャッシュファイルの設定：ブラウザのF12で管理コンソールを開き、静的リソースと動的リソースを分析する&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全て0日有効期限&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.php;.jsp;.asp;.aspx&lt;/code&gt; 0日有効期限&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.jpg;.png;.js;.css;.woff2&lt;/code&gt; 1日有効期限&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;腾讯云設定ルール：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;キャッシュ过期ルールは最大10件まで設定可能&lt;/li&gt;
&lt;li&gt;複数のキャッシュ过期ルール間の優先順位は、下から上にいくほど高い&lt;/li&gt;
&lt;li&gt;キャッシュ过期時間は最大365日まで設定可能&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;悲惨自述&#34;&gt;悲惨自述
&lt;/h3&gt;&lt;p&gt;以前从未用过Nginx，以为网站随便搜索就能明白反向代理的配置，结果有点混乱，折腾半天连个302跳转也没弄明白，最终毫无用处。就想着笨办法解决一下，DNS解析删除*模式的泛域名解析，单个二级域名进行独立设置。这时突然注意到了阿里云DNS解析有一个叫做“显示URL跳转”的模式，尝试了一下，这不就是我想要的302跳转吗。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;设置了第一个二级域名正常访问，等我设置第二个的时候，发现没用，都快怀疑人生了，等了一会突然就能用了，看来阿里云的DNS扩散偶尔也是会抽风的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;参考資料&#34;&gt;参考資料
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.zhihu.com/question/20414602&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;なぜ多くのウェブサイトのドメイン名に「www」プレフィックスが付加されないのか？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cloudxns.net/Support/detail/id/918.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;www付きとそうでないドメイン名の違いは何ですか？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gythialy.github.io/Docker-nginx-reverse-proxy/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker nginx 反向プロキシ設定&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
