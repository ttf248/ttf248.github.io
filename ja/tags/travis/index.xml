<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Travis on 向叔の手帳</title>
        <link>https://ttf248.life/ja/tags/travis/</link>
        <description>Recent content in Travis on 向叔の手帳</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja</language>
        <lastBuildDate>Wed, 28 May 2025 09:47:38 +0800</lastBuildDate><atom:link href="https://ttf248.life/ja/tags/travis/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>自動統合システム切り替え</title>
        <link>https://ttf248.life/ja/p/auto-integration-system-switch/</link>
        <pubDate>Sun, 29 Mar 2020 02:11:33 +0800</pubDate>
        
        <guid>https://ttf248.life/ja/p/auto-integration-system-switch/</guid>
        <description>&lt;p&gt;GitHub Actions を使用して、Hugo ブログを GitHub Pages と Gitee に自動デプロイします。&lt;/p&gt;
&lt;h4 id=&#34;背景説明&#34;&gt;背景説明
&lt;/h4&gt;&lt;p&gt;ブログを更新した昨日、Travisのサービスが利用できないことに気づきました。Travisのウェブページを確認すると、ソースコードの取得で処理が止まっており、ふとGitHubが以前発表したActionsサービスのことを思い出しました。&lt;/p&gt;
&lt;p&gt;その頃は色々用事ができそうだし、アクションを使うには申請が必要なので、今は正式にリリースされたばかりです。週末に時間があったら、新しいおもちゃを試してみるか？&lt;/p&gt;
&lt;p&gt;公式資料は各自ウェブサイトでご確認ください。本文ではこれ以上の転載はいたしません。以前Kubernetesをご利用の方は、actionのYAMLファイル設定がKubernetesに似ていると感じるかもしれません。&lt;/p&gt;
&lt;p&gt;中国語の入門チュートリアル、あるいは紹介資料についてですが、&lt;strong&gt;阮一峰的博客&lt;/strong&gt;を検索することをお勧めします。2つの記事があり、1つ目は基本的な文法解説で、2つ目は実際の事例です。&lt;/p&gt;
&lt;h4 id=&#34;正文&#34;&gt;正文
&lt;/h4&gt;&lt;p&gt;必要な知識点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;github secrets&lt;/li&gt;
&lt;li&gt;アクション文法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;既存コンポーネントで主要なジョブを完遂し、コマンドによるpushで中国のGiteeに送信。コマンド部分は粗雑で、強制プッシュのみを使用しており、Travisを利用していた際のロジックを引き継いでいる。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;name: github pages and gitee pages

on:
  push:
    branches:
      - hugo

jobs:
  deploy:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: &#39;latest&#39;
          extended: true

      - name: Build Github and Gitee ## 单个step只能写一个run命令
        run: hugo -b &amp;quot;https://www.xiangtianlong.com/&amp;quot; -d &amp;quot;github_public&amp;quot; &amp;amp;&amp;amp; hugo -b &amp;quot;https://www.xiangtianlong.com/&amp;quot; -d &amp;quot;gitee_public&amp;quot; &amp;amp;&amp;amp; ls

      - name: Deploy Github
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.BLOG_TOKEN }}
          publish_dir: ./github_public
          publish_branch: master
          cname: xiangtianlong.com

      - name: Deploy Gitee
        run: cd ./gitee_public &amp;amp;&amp;amp; git init &amp;amp;&amp;amp; git config user.name &amp;quot;TianlongXiang&amp;quot; &amp;amp;&amp;amp; git config user.email &amp;quot;tianlongxiang51@gmail.com&amp;quot; &amp;amp;&amp;amp; git add . &amp;amp;&amp;amp; git commit -m &amp;quot;Update TianlongXiang&#39;s Blog&amp;quot; &amp;amp;&amp;amp; git push --force &amp;quot;https://xiangtianlong:${{ secrets.GITEE_PASSWORD }}@gitee.com/xiangtianlong/xiangtianlong.git&amp;quot; master:master   
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;追記&#34;&gt;追記
&lt;/h4&gt;&lt;p&gt;公式ストアで提供されている機能を見ると、現在サポートされているプレイ方法は豊富です。Dockerイメージを構築すれば、Docker Hubのサービスに依存しなくなることもできます。&lt;/p&gt;
&lt;p&gt;Hugoのissueを確認したところ、GitHub ActionsでGit Pagesを自動デプロイする場合、最終的に公開されるウェブページはmasterブランチに必要です。他のブランチにデプロイすると、設定画面でGitHubがウェブページの構文エラーを警告します。&lt;/p&gt;
&lt;p&gt;実際は、Hugoのソースファイルがmasterブランチに置かれていたため、GitHubがjellyブログのソースコードとして検知し、チェックやビルドが通らなかったことが原因です。&lt;/p&gt;
&lt;p&gt;解決策も簡単、Hugoのソースファイルを別のブランチに置き、静的ファイルはmasterブランチで公開する。&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
