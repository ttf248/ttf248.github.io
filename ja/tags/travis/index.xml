<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Travis on 向叔の手帳</title>
        <link>https://ttf248.life/ja/tags/travis/</link>
        <description>Recent content in Travis on 向叔の手帳</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja</language>
        <lastBuildDate>Sun, 01 Jun 2025 15:10:34 +0800</lastBuildDate><atom:link href="https://ttf248.life/ja/tags/travis/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>自動統合システム切り替え</title>
        <link>https://ttf248.life/ja/p/auto-integration-system-switch/</link>
        <pubDate>Sun, 29 Mar 2020 02:11:33 +0800</pubDate>
        
        <guid>https://ttf248.life/ja/p/auto-integration-system-switch/</guid>
        <description>&lt;p&gt;GitHub Actions を使用して、Hugo ブログを GitHub Pages および Gitee に自動でデプロイします。&lt;/p&gt;
&lt;h4 id=&#34;背景説明&#34;&gt;背景説明
&lt;/h4&gt;&lt;p&gt;昨日ブログを更新した際に、travisサービスが利用できないことを発見しました。travisのウェブサイトを確認すると、ソースコードの取得時に進捗が止まっていることがわかりました。そこで、以前GitHubで提供されていたactionサービスを思い出し、試してみるのはいかがでしょうか？
当時忙しくしており、actionを利用するには申請が必要でしたが、現在は正式にリリースされており、週末に暇を持て余しているのですから、新しいおもちゃを試してみるのも良いでしょう？
公式資料は各自ウェブサイトをご確認ください。本稿では詳細な転載は行いません。もしKubernetesをご利用経験がある場合、actionのYAMLファイル設定がKubernetesと似ていることに気づくかもしれません。
入門チュートリアル、あるいは中国語での紹介資料については、&lt;strong&gt;阮一峰のブログ&lt;/strong&gt;を検索することをお勧めします。2つの記事があり、1つ目は基本的な構文の説明で、もう1つは実際のケーススタディです。&lt;/p&gt;
&lt;h4 id=&#34;本文&#34;&gt;本文
&lt;/h4&gt;&lt;p&gt;必要な知識点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub Secrets&lt;/li&gt;
&lt;li&gt;Action の構文
コアのジョブは既存のコンポーネントを使用して完了し、中国のGiteeにプッシュする場合はコマンドを使用します。コマンド部分はかなり粗暴で、強制プッシュのみを実装しており、Travisの使用ログを参考にしています。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;付録&#34;&gt;付録
&lt;/h4&gt;&lt;p&gt;公式マーケットで提供されているactionを見ると、現在サポートされている遊び方が多く、Dockerイメージを構築すればDocker Hubのサービスへの依存もなくなります。
Hugoのissueを調査すると、GitHub Actionを使ってgit pagesを自動デプロイする際に、最終的に公開されるウェブサイトがmasterブランチにある必要があることが判明しました。もし他のブランチにデプロイする場合は、設定画面でGitHubからウェブサイトに構文エラーがあると警告が表示されます。&lt;/p&gt;
&lt;p&gt;これはHugoのソースファイルがmasterブランチに置かれているため、GitHubがjellyブログのソースコードとして検出し、構文チェックが通らない場合に発生するエラーであるというものです。
解決策は簡単です。Hugoのソースファイルを他のブランチに配置し、静的ファイルをmasterブランチに出力します。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
