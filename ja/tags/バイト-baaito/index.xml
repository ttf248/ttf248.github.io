<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>バイト (Baaito) on 向叔の手帳</title>
        <link>https://ttf248.life/ja/tags/%E3%83%90%E3%82%A4%E3%83%88-baaito/</link>
        <description>Recent content in バイト (Baaito) on 向叔の手帳</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja</language>
        <lastBuildDate>Thu, 14 Aug 2025 22:07:37 +0800</lastBuildDate><atom:link href="https://ttf248.life/ja/tags/%E3%83%90%E3%82%A4%E3%83%88-baaito/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>ByteDance AI エンコードの新基準 SOLO</title>
        <link>https://ttf248.life/ja/p/bytedance-ais-solo-encoding-new-paradigm/</link>
        <pubDate>Thu, 14 Aug 2025 21:49:06 +0800</pubDate>
        
        <guid>https://ttf248.life/ja/p/bytedance-ais-solo-encoding-new-paradigm/</guid>
        <description>&lt;p&gt;以前使用していた製品は、コード開発を行う際には大差なく、しかしByteのSOLOは、コード開発において大きな違いが生じた。当初は招待コードを通じてベータ版に参加したが、現在はメールアドレスを提出し審査を待つ形式となり、審査に通れば利用できる。いつ申請を行ったのか記憶が曖昧なところだが、今日Traeから審査通過の通知を受け取った。&lt;/p&gt;
&lt;h2 id=&#34;字节soloの利点&#34;&gt;字节SOLOの利点
&lt;/h2&gt;&lt;p&gt;通常のプロジェクト開発の流れを参考に、UIデザイン、要件分析、機能設計、技術方案の実装を行い、最後にコードの開発を行うという流れを採用しています。全体的なインタラクションロジックは、初心者にとってより親切であり、複雑なプロジェクトの場合は、従来のパターンの方がより効果的です。AIは補助ツールとして、コードの修正と最適化を行います。&lt;/p&gt;
&lt;h2 id=&#34;港美股app開発&#34;&gt;港美股APP開発
&lt;/h2&gt;&lt;p&gt;はい、タイトルは私が書いたプロンプト文通りです。追加の説明はありません。SOLOモード下では、まず要求ドキュメントと技術アーキテクチャドキュメントが出力され、ユーザーが問題がないことを確認すると、コードの開発が行われます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/ttf248/ai-coding-trae-solo/blob/master/.trae/documents/%E6%B8%AF%E7%BE%8E%E8%82%A1APP%E4%BA%A7%E5%93%81%E9%9C%80%E6%B1%82%E6%96%87%E6%A1%A3.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;要求ドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/ttf248/ai-coding-trae-solo/blob/master/.trae/documents/%E6%B8%AF%E7%BE%8E%E8%82%A1APP%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84%E6%96%87%E6%A1%A3.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;技術アーキテクチャドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;どうすればいいかというと、設計が特別完璧ではないとしても、初稿として完全に使えるものです。私はUIのデザイン経験がないため、Figmaからデザインファイルをインポートする機能のテストを行っていません。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;コード構築中に、いくつかのドキュメントが見つかりました。SOLOモード下では、AIは存在している問題を自力で処理しようと試みます。例えば、データベースがローカルにある場合、データベースのフィールド設計を増やす必要があるため、最初に対応するスクリプトを生成し、次にjsスクリプトを実行してデータベーススクリプトを実行します。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;また、資料を見ながら見つからなかったポイントもありました。タスク分解機能については、港美股の頃の資料にスクリーンショットがありませんので、以前の漫画リーダープロジェクトを使用しました。バイトもお金持ちなので、一度のリクエストでたくさんのタスクを実行できますが、このシナリオは実際にはあまり多くなく、新しいプロジェクトでは大量のトークンを消費します。ユーザーが依存性を持つときこそ、ここで利益を得られるのです。
&lt;img src=&#34;https://ttf248.life/p/bytedance-ais-solo-encoding-new-paradigm/20250814215722.png&#34;
	width=&#34;571&#34;
	height=&#34;236&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;タスク分解機能&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;241&#34;
		data-flex-basis=&#34;580px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
