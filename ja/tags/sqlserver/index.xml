<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>SqlServer on 向叔の手帳</title>
        <link>https://ttf248.life/ja/tags/sqlserver/</link>
        <description>Recent content in SqlServer on 向叔の手帳</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja</language>
        <lastBuildDate>Mon, 02 Jun 2025 20:54:02 +0800</lastBuildDate><atom:link href="https://ttf248.life/ja/tags/sqlserver/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>SQL Serverデータベースのディスクファイルの権限を一括で変更する</title>
        <link>https://ttf248.life/ja/p/bulk-modify-sqlserver-database-disk-permissions/</link>
        <pubDate>Tue, 23 Jan 2024 19:06:36 +0800</pubDate>
        
        <guid>https://ttf248.life/ja/p/bulk-modify-sqlserver-database-disk-permissions/</guid>
        <description>&lt;p&gt;会社セキュリティポリシーの調整により、&lt;code&gt;機械師 mini&lt;/code&gt;は最終的に自宅へ移転し、予備サーバーとして利用。同時にマシンシステムを再インストールし、&lt;code&gt;ubuntu&lt;/code&gt;が&lt;code&gt;windows server&lt;/code&gt;に切り替えられました。アクティベーション手段が不正であったため、自宅で使用しても問題ないように見えていましたが、実際にはアクティベーションができていないと様子がおかしくなりました。&lt;/p&gt;
&lt;p&gt;Microsoftによる検出がトリガーされ、通常稼働していたサーバーが起動から1時間で自動シャットダウン。システムログを徹底的に調査した結果、盗版であることに至りました。&lt;/p&gt;
&lt;p&gt;仕方なく再度システムを再インストールし、&lt;code&gt;SqlServer&lt;/code&gt;も再インストールする必要が生じました。毎回トラブルシューティングを行うと非常に面倒であり、ファイル権限管理が厳格であるため、データベースの追加が正常に行えませんでした。&lt;/p&gt;
&lt;h2 id=&#34;エラーメッセージ&#34;&gt;エラーメッセージ
&lt;/h2&gt;&lt;p&gt;システムを再インストールした後、&lt;code&gt;SqlServer&lt;/code&gt;がデータベースに接続しようとすると、オペレーティングシステムのアクセス拒否エラー5120が発生することがあります。&lt;/p&gt;
&lt;h2 id=&#34;処理スクリプト&#34;&gt;処理スクリプト
&lt;/h2&gt;&lt;p&gt;前文リンク：&lt;a class=&#34;link&#34; href=&#34;https://ttf248.life/ja/p/bulk-update-local-git-and-legacy-permissions/&#34; &gt;ローカルGitリポジトリの一括更新&lt;/a&gt;、やはりこの馴染み深いスクリプトだ。改造して、フォルダをトラバースしながらファイルの権限を変更し、現在のユーザーに完全な編集権限を与えるようにする。&lt;/p&gt;
&lt;p&gt;ネット上のチュートリアルはほとんどが手動で修正する方法を示しており、毎回数個のファイルだけ修正するのだろうか？ 私は毎回多数のファイルを処理する必要があり、すべてを手作業で処理すると、精神的に疲れてしまう。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$currentUserName = [System.Security.Principal.WindowsIdentity]::GetCurrent().Name
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8
$rootDirectory = &amp;quot;D:\data\2013_RujiaInfo&amp;quot;

Get-ChildItem -Path $rootDirectory -Recurse | ForEach-Object {
    $itemPath = $_.FullName

    if ($_ -is [System.IO.DirectoryInfo]) {
        $icaclsResult = icacls $itemPath /setowner &amp;quot;$currentUserName&amp;quot; 2&amp;gt;&amp;amp;1
        if ($LASTEXITCODE -eq 0) {
            Write-Host &amp;quot;フォルダ $itemPath の所有者を $currentUserName に変更しました&amp;quot;
            # 現在のユーザーに書き込み権限を付与
            Invoke-Expression &amp;quot;icacls `&amp;quot;$itemPath`&amp;quot; /grant `&amp;quot;$($currentUserName):(OI)(CI)F`&amp;quot;&amp;quot;
            Write-Host &amp;quot;$currentUserName がフォルダを編集するための権限が付与されました&amp;quot;
        } else {
            Write-Host &amp;quot;フォルダ $itemPath の所有者を変更できません。エラー情報: $icaclsResult&amp;quot;
        }
    } else {
        $takeownResult = icacls $itemPath /setowner &amp;quot;$currentUserName&amp;quot; 2&amp;gt;&amp;amp;1
        if ($LASTEXITCODE -eq 0) {
            # 現在のユーザーに書き込み権限を付与
            Invoke-Expression &amp;quot;icacls `&amp;quot;$itemPath`&amp;quot; /grant `&amp;quot;$($currentUserName):(F)`&amp;quot;&amp;quot;
            Write-Host &amp;quot;$currentUserName がファイルを編集するための権限が付与されました&amp;quot;
        } else {
            Write-Host &amp;quot;ファイル $itemPath の所有者を変更できません。エラー情報: $takeownResult&amp;quot;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        
    </channel>
</rss>
