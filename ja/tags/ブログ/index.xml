<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>ブログ on 向叔の手帳</title>
        <link>https://blog.ttf248.life/ja/tags/%E3%83%96%E3%83%AD%E3%82%B0/</link>
        <description>Recent content in ブログ on 向叔の手帳</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja</language>
        <lastBuildDate>Wed, 28 May 2025 09:47:38 +0800</lastBuildDate><atom:link href="https://blog.ttf248.life/ja/tags/%E3%83%96%E3%83%AD%E3%82%B0/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>ウェブサイトの高速化とドメイン設定</title>
        <link>https://blog.ttf248.life/ja/p/website-acceleration-and-domain-setup/</link>
        <pubDate>Sat, 20 Jun 2020 10:36:27 +0800</pubDate>
        
        <guid>https://blog.ttf248.life/ja/p/website-acceleration-and-domain-setup/</guid>
        <description>&lt;p&gt;国内でのアクセスが遅いため、著者は個人ドメインを取得し、国内クラウドプロバイダーのCDNアクセラレーションサービスを購入しました。設定中にwwwサブドメインにアクセスできない問題が発生しましたが、汎用ドメイン解析を削除し、セカンダリドメインを個別に設定することで解決しました。また、CDNアクセラレーションの原理と設定経験、Nginxのリバースプロキシ試行とその教訓についても共有しています。&lt;/p&gt;
&lt;h3 id=&#34;背景&#34;&gt;背景
&lt;/h3&gt;&lt;p&gt;GitHub Pagesにサイトをホストしているため、周知の理由により国内からのアクセスが遅いことがあります。そこで、個人ドメインを取得し、国内クラウドプロバイダーのCDN加速サービスを利用しました。加速サービスの設定中に、開発マシンにあるDocker、frp、k8sなどのサービス（それぞれダッシュボードあり）を思い出し、無駄にしない方針でいくつかのリバースプロキシを設定し、すべてセカンダリードメインに紐づけました。&lt;/p&gt;
&lt;p&gt;二級ドメインを使っていると、突然wwwサブドメインにアクセスできなくなりました。アリババクラウドでは、www.xiangtianlong.comとxiangtianlong.comの両方をDNSで同時に解析するように設定しており、CDN加速を有効にする前は両方のドメインが正常に使用できていました。&lt;/p&gt;
&lt;p&gt;CDN設定時、セカンダリドメインが多いため汎用ドメインルールを有効にし、統一的に開発マシンへルーティングした結果、wwwというセカンダリドメインも影響を受けてしまいました。はい、間違いではありません。wwwプレフィックスもセカンダリドメインとして扱われていました。実際のウェブサイトはGitHub Pagesにデプロイされており、開発マシンにはウェブサイトのキャッシュ情報は一切ありません。&lt;/p&gt;
&lt;p&gt;開発環境にサイトをデプロイしないのは、静的ブログで、GitHub Actionsを使えば自動的にリリースできるので便利だからです。&lt;/p&gt;
&lt;h3 id=&#34;ドメイン&#34;&gt;ドメイン
&lt;/h3&gt;&lt;p&gt;専門性のないウェブ開発では、ドメインの理解にSEOやクロスドメインの問題は含まれない。ブログサイトとして、ベアドメインはブログオーナーのサイトを際立たせやすく、現在のモバイルアクセスが多いことも考慮すると、入力できる文字数を減らせるという利点がある。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;パソコンで、wwwとcomの入力を省略できるショートカットキーが利用可能です。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;cdn&#34;&gt;CDN
&lt;/h3&gt;&lt;p&gt;アリババクラウドとテンセントクラウドの両方使ったことがあるので、初心者でも使いやすいです。テンセントクラウドには関連コンセプトを解説する動画もあります。CDNの加速原理は京東（JD）の倉庫と同じで、新商品を発売する際に、全国各地の倉庫に事前に一斉配送し、配送リクエストが発生した際、最寄りの倉庫から発送します。&lt;/p&gt;
&lt;p&gt;元のURL：ウェブサイトリソースが元々保存されていたアドレス&lt;/p&gt;
&lt;p&gt;キャッシュファイル設定、ブラウザF12、管理コンソール、静的リソースと動的リソースの簡単な分析&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全件0日有効&lt;/li&gt;
&lt;li&gt;無効期限：0日&lt;/li&gt;
&lt;li&gt;有効期限１日&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;テンセントクラウド設定ルール：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;キャッシュ切れルールは最大で10条まで設定可能です。&lt;/li&gt;
&lt;li&gt;下位優先ルールが適用されます。&lt;/li&gt;
&lt;li&gt;キャッシュの有効期限は最大365日まで設定可能です。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;痛ましい告白&#34;&gt;痛ましい告白
&lt;/h3&gt;&lt;p&gt;以前Nginxを使ったことがなかったので、ウェブサイトを検索すればリバースプロキシの設定がわかると思っていました。しかし、結果は混乱し、半日かけても302リダイレクトを理解できませんでした。結局、効果はありませんでした。そこで、思い切ってDNS解析のワイルドカード設定を削除し、個々のセカンドレベルドメインを独立して設定しました。その時、突然、阿里云DNS解析に「表示URL転送」というモードがあることに気づき、試してみたところ、これがまさに求めていた302リダイレクトでした。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最初の二階建てドメインは問題なくアクセスできたのに、2つ目の設定をしたら動かず、本当にどうしようかと思ったけど、しばらく待ったら使えるようになった。やはり、アリババクラウドのDNS伝播は時々、おっかないことがあるようだ。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;参照資料&#34;&gt;参照資料
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;申し訳ありませんが、翻訳する中国語のテキストが提供されていません。テキストを提供していただければ、日本語に翻訳します。&lt;/li&gt;
&lt;li&gt;申し訳ありませんが、翻訳する中国語のテキストが提供されていません。テキストを提供していただければ、日本語に翻訳します。&lt;/li&gt;
&lt;li&gt;申し訳ありませんが、翻訳する中国語のテキストが提供されていません。テキストを提供していただければ、日本語に翻訳します。&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>ブログ環境とつぶやき</title>
        <link>https://blog.ttf248.life/ja/p/blog-ide-environment-and-ramblings/</link>
        <pubDate>Tue, 31 Mar 2020 13:54:27 +0800</pubDate>
        
        <guid>https://blog.ttf248.life/ja/p/blog-ide-environment-and-ramblings/</guid>
        <description>&lt;p&gt;この記事では、Markdown の基本的な概念と様々なソフトウェアでの応用について解説し、VSCode を IDE として推奨しています。また、推奨プラグインの一覧も示しています。著者は Hexo から Hugo への移行経験を共有し、Hugo の柔軟性とカスタマイズ能力を強調しています。最後に、新しい技術の迅速な立ち上げのためのヒントと、Hugo テーマのスタイルが更新されない問題に対する解決策を紹介しています。&lt;/p&gt;
&lt;h2 id=&#34;まえがき&#34;&gt;まえがき
&lt;/h2&gt;&lt;h3 id=&#34;markdown&#34;&gt;Markdown
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;軽量なマークアップ言語で、人々が読みやすく書きやすいプレーンテキスト形式でドキュメントを作成できます。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;詳細なMarkdown文法については、このテキストでは触れません。電子書籍をおすすめします。&lt;a class=&#34;link&#34; href=&#34;https://markdown-zh.readthedocs.io/en/latest/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;点击此处&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;多くのソフトウェアはすでにmdを記述方法としてサポートしています。csdnのブログシステムでは、md文法に対応したオンラインエディタがリリースされ、初めて使用する際にはmd文法の紹介記事が表示されます。筆者はまだ良いと思います。また、印象ノートは2018年にmdノートへの対応を追加し、クイックバーには様々なmdマークアップオプションがあり、普通の文章を編集するのとほぼ同じように使え、全体的に初心者にも使いやすいです。&lt;/p&gt;
&lt;h3 id=&#34;ide推奨&#34;&gt;IDE推奨
&lt;/h3&gt;&lt;p&gt;この記事を書いている時点ですでに2020年ですが、VSCodeなら当然ご存知でしょう。Git Pageでブログシステムを構築する発想を持つのは、やはり業界関係者ですから。以前はSublimeやAtomも良い選択肢でしたが、2年のオープンソースコミュニティの推進により、VSCodeは急速に発展し、初心者にとって最初の選択肢となりつつあります。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;マイクロソフトとオープンソースコミュニティの関係が対立状態から、順調に蜜月期に入った：オープンソースを積極的に活用。筆者が所属する企業もここ2年でJavaエコシステムを積極的に導入しており、言い換えれば、現在の国内におけるJavaの利用は非常に魅力的だ。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;vs-code-拡張機能-おすすめ&#34;&gt;VS Code 拡張機能 おすすめ
&lt;/h3&gt;&lt;p&gt;！&lt;a class=&#34;link&#34; href=&#34;2020-03-31-14-07-17.png&#34; &gt;插件清单&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;プラグインにはそれぞれReadmeがあり、基本的な使い方や主要機能が紹介されています。一部のプラグイン作者は、動的な効果を示す画像も提供しています。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;INLINE_CODE_0&lt;/strong&gt;、Hugoの画像プラグイン方式と連携すれば、画像を簡単に導入できます。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ショートカットキーを覚えていないので、VSCodeのショートカット管理メニューを開き、「md」を検索して何度か確認。プラグインの説明書をもう一度見直す。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;hugo&#34;&gt;hugo
&lt;/h2&gt;&lt;p&gt;筆者は、元々好奇心旺盛な性格で、じっとして文章を書くのが苦手なのです。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Hugoは、画像とMDファイルを個別のフォルダに配置することをサポートしています。&lt;/li&gt;
&lt;li&gt;学術的なテーマは、デザインにおいて様々な種類の記事スタイルに対応しています。&lt;/li&gt;
&lt;li&gt;様々な便利なカスタマイズ拡張&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;academic&#34;&gt;academic
&lt;/h2&gt;&lt;p&gt;公式サイトデフォルト&lt;strong&gt;太字&lt;/strong&gt;斜体、&lt;strong&gt;太字&lt;/strong&gt;斜体、&lt;strong&gt;太字&lt;/strong&gt;斜体。&lt;/p&gt;
&lt;p&gt;URLのパターンで、ナビゲーションバーをクリックすれば単一ページへのジャンプが可能で、トップページでのスクロールではない。これは完全に個人的な好みによるものだ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;形式：随筆、講演、電子書籍&lt;/li&gt;
&lt;li&gt;柔軟性：全体スタイルをカスタマイズ、CSSスタイルのカスタマイズ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このテーマは中国語のサポートがまだ完全ではない。主に視覚的な面で、フォントサイズが中国語の読書習慣に合っていない。ただし、Hexoの開発者は中国人の方が多いため、Hugoより優れている点はそこにある。&lt;/p&gt;
&lt;p&gt;しかし、自分で要素を特定して修正するには、ブラウザの開発者ツールで要素の位置を特定し、変更する必要があるCSSスタイルシート名を知りたい場合、サイドバーの&lt;strong&gt;Insert Style Rule Below&lt;/strong&gt;をクリックすれば、ネストされたCSSでも簡単にノード名を取得できます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;申し訳ありませんが、翻訳する中国語のテキストが提供されていません。テキストを提供していただければ、日本語に翻訳します。&lt;/li&gt;
&lt;li&gt;申し訳ありませんが、翻訳する中国語のテキストが提供されていません。テキストを提供していただければ、日本語に翻訳します。&lt;/li&gt;
&lt;li&gt;テーマに組み込まれた文法ハイライト設定、&lt;a class=&#34;link&#34; href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/#highlighting-options.&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;結びに&#34;&gt;結びに
&lt;/h2&gt;&lt;p&gt;また子供が文句言い出すわ。どうして最初から最後まで曖昧なことばかり言って、具体的なことは何も言わないの？&lt;/p&gt;
&lt;p&gt;これがあれば、十分です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;公式マニュアル&lt;/li&gt;
&lt;li&gt;プラグインの説明&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新しい技術を早く習得するには、まず公式サイトのドキュメントを読むことをお勧めします。 一度で理解しようとしなくてもいいので、少なくとも概要を把握しておきましょう。 検索エンジンの結果は、最新バージョンと一致しない場合があり、誤解を招く可能性があります。 新しい書籍も同様です。まずは目次を見て、著者が何を説明しようとしているのかを理解しましょう。 時には序章を読むことで、海外の著作が中国語に翻訳された際、翻訳者の序文が書籍の本質的な内容を網羅していることがあります。&lt;/p&gt;
&lt;h2 id=&#34;サプライズ&#34;&gt;サプライズ
&lt;/h2&gt;&lt;p&gt;Hugo Academicのスタイルを変更しても、サイトに公開しても表示が変わりませんね。賢い人はすぐに気づくでしょう。ローカルブラウザのキャッシュをクリアすれば解決します。私も閃きました！F12の開発者モードで、__INLINE_CODE_0__BOLD_2&lt;code&gt;disable cache&lt;/code&gt;に切り替えてリフレッシュすればOKです！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.ttf248.life/p/blog-ide-environment-and-ramblings/2020-03-31-14-27-15.png&#34;
	width=&#34;399&#34;
	height=&#34;142&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;network&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;280&#34;
		data-flex-basis=&#34;674px&#34;
	
&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>自動統合システム切り替え</title>
        <link>https://blog.ttf248.life/ja/p/auto-integration-system-switch/</link>
        <pubDate>Sun, 29 Mar 2020 02:11:33 +0800</pubDate>
        
        <guid>https://blog.ttf248.life/ja/p/auto-integration-system-switch/</guid>
        <description>&lt;p&gt;GitHub Actions を使用して、Hugo ブログを GitHub Pages と Gitee に自動デプロイします。&lt;/p&gt;
&lt;h4 id=&#34;背景説明&#34;&gt;背景説明
&lt;/h4&gt;&lt;p&gt;ブログを更新した昨日、Travisのサービスが利用できないことに気づきました。Travisのウェブページを確認すると、ソースコードの取得で処理が止まっており、ふとGitHubが以前発表したActionsサービスのことを思い出しました。&lt;/p&gt;
&lt;p&gt;その頃は色々用事ができそうだし、アクションを使うには申請が必要なので、今は正式にリリースされたばかりです。週末に時間があったら、新しいおもちゃを試してみるか？&lt;/p&gt;
&lt;p&gt;公式資料は各自ウェブサイトでご確認ください。本文ではこれ以上の転載はいたしません。以前Kubernetesをご利用の方は、actionのYAMLファイル設定がKubernetesに似ていると感じるかもしれません。&lt;/p&gt;
&lt;p&gt;中国語の入門チュートリアル、あるいは紹介資料についてですが、&lt;strong&gt;阮一峰的博客&lt;/strong&gt;を検索することをお勧めします。2つの記事があり、1つ目は基本的な文法解説で、2つ目は実際の事例です。&lt;/p&gt;
&lt;h4 id=&#34;正文&#34;&gt;正文
&lt;/h4&gt;&lt;p&gt;必要な知識点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;github secrets&lt;/li&gt;
&lt;li&gt;アクション文法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;既存コンポーネントで主要なジョブを完遂し、コマンドによるpushで中国のGiteeに送信。コマンド部分は粗雑で、強制プッシュのみを使用しており、Travisを利用していた際のロジックを引き継いでいる。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;name: github pages and gitee pages

on:
  push:
    branches:
      - hugo

jobs:
  deploy:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: &#39;latest&#39;
          extended: true

      - name: Build Github and Gitee ## 单个step只能写一个run命令
        run: hugo -b &amp;quot;https://www.xiangtianlong.com/&amp;quot; -d &amp;quot;github_public&amp;quot; &amp;amp;&amp;amp; hugo -b &amp;quot;https://www.xiangtianlong.com/&amp;quot; -d &amp;quot;gitee_public&amp;quot; &amp;amp;&amp;amp; ls

      - name: Deploy Github
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.BLOG_TOKEN }}
          publish_dir: ./github_public
          publish_branch: master
          cname: xiangtianlong.com

      - name: Deploy Gitee
        run: cd ./gitee_public &amp;amp;&amp;amp; git init &amp;amp;&amp;amp; git config user.name &amp;quot;TianlongXiang&amp;quot; &amp;amp;&amp;amp; git config user.email &amp;quot;tianlongxiang51@gmail.com&amp;quot; &amp;amp;&amp;amp; git add . &amp;amp;&amp;amp; git commit -m &amp;quot;Update TianlongXiang&#39;s Blog&amp;quot; &amp;amp;&amp;amp; git push --force &amp;quot;https://xiangtianlong:${{ secrets.GITEE_PASSWORD }}@gitee.com/xiangtianlong/xiangtianlong.git&amp;quot; master:master   
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;追記&#34;&gt;追記
&lt;/h4&gt;&lt;p&gt;公式ストアで提供されている機能を見ると、現在サポートされているプレイ方法は豊富です。Dockerイメージを構築すれば、Docker Hubのサービスに依存しなくなることもできます。&lt;/p&gt;
&lt;p&gt;Hugoのissueを確認したところ、GitHub ActionsでGit Pagesを自動デプロイする場合、最終的に公開されるウェブページはmasterブランチに必要です。他のブランチにデプロイすると、設定画面でGitHubがウェブページの構文エラーを警告します。&lt;/p&gt;
&lt;p&gt;実際は、Hugoのソースファイルがmasterブランチに置かれていたため、GitHubがjellyブログのソースコードとして検知し、チェックやビルドが通らなかったことが原因です。&lt;/p&gt;
&lt;p&gt;解決策も簡単、Hugoのソースファイルを別のブランチに置き、静的ファイルはmasterブランチで公開する。&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
