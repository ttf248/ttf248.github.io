<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Anti-Debug on 向叔の手帳</title>
        <link>https://ttf248.life/ja/tags/anti-debug/</link>
        <description>Recent content in Anti-Debug on 向叔の手帳</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja</language>
        <lastBuildDate>Mon, 02 Jun 2025 20:54:02 +0800</lastBuildDate><atom:link href="https://ttf248.life/ja/tags/anti-debug/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>プログラムのデバッグを防止する方法</title>
        <link>https://ttf248.life/ja/p/program-anti-debug/</link>
        <pubDate>Tue, 23 Jan 2024 19:46:36 +0800</pubDate>
        
        <guid>https://ttf248.life/ja/p/program-anti-debug/</guid>
        <description>&lt;p&gt;心血を注ぎ、新しい壁紙を探し求めた。習慣は黒系の壁紙だが、一部の領域には色を加えても良いだろう。デスクトップにはアイコンを配置する必要があるため、他の色系が壁紙だとアイコンが不明瞭になってしまう。&lt;/p&gt;
&lt;p&gt;上記のコードを睨めつけ、理解できずにいた。AIに投げかけて説明したが、状況を説明していなかったのだ。それは特定の状況下で使われる指示であり、通常のコードではこのような形ではない。&lt;/p&gt;
&lt;p&gt;AIは今や検索エンジンには及ばない。アセンブリの知識が不足している。&lt;/p&gt;
&lt;h2 id=&#34;壁紙&#34;&gt;壁紙
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/program-anti-debug/Snipaste_2024-01-23_19-50-53.png&#34;
	width=&#34;1020&#34;
	height=&#34;470&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;黒色のアセンブル壁紙&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;217&#34;
		data-flex-basis=&#34;520px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;彙集コード&#34;&gt;彙集コード
&lt;/h2&gt;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;PUSHFD
MOV DWORD PTR [ESP],0X100
POPFD
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;実用例&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;bool IsDebugged()
{
    __try
    {
        __asm
        {
            pushfd
            mov dword ptr [esp], 0x100
            popfd
            nop
        }
        return true;
    }
    __except(GetExceptionCode() == EXCEPTION_SINGLE_STEP
        ? EXCEPTION_EXECUTE_HANDLER
        : EXCEPTION_CONTINUE_EXECUTION)
    {
        return false;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;彙編コード&#34;&gt;彙編コード
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;PUSHFD&lt;/code&gt; および &lt;code&gt;POPFD&lt;/code&gt; は、フラグレジスタの値をスタックにプッシュおよびポップする命令です。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MOV DWORD PTR [ESP], 0X100&lt;/code&gt; は、スタックポインタ (&lt;code&gt;ESP&lt;/code&gt;) のアドレスにある4バイト（DWORD）領域に &lt;code&gt;0x100&lt;/code&gt; の値を移動する命令です。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nop&lt;/code&gt; は、何もしない命令です。デバッグやテストのために使用されることがあります。&lt;/p&gt;
&lt;h3 id=&#34;実用例&#34;&gt;実用例
&lt;/h3&gt;&lt;p&gt;このコードは、デバッグモードでプログラムが実行されているかどうかを判断します。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;__try&lt;/code&gt; ブロック内でアセンブリコードを実行し、例外が発生した場合に &lt;code&gt;__except&lt;/code&gt; ブロックが実行されます。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GetExceptionCode() == EXCEPTION_SINGLE_STEP&lt;/code&gt; は、プログラムがシングルステップモードで実行されているかどうかを確認します。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;EXCEPTION_EXECUTE_HANDLER&lt;/code&gt; および &lt;code&gt;EXCEPTION_CONTINUE_EXECUTION&lt;/code&gt; は、それぞれハンドラを実行するか、実行の継続を許可する例外コードです。&lt;/p&gt;
&lt;p&gt;この例では、プログラムがシングルステップモードで実行されている場合、&lt;code&gt;true&lt;/code&gt; が返されます。それ以外の場合は、&lt;code&gt;false&lt;/code&gt; が返されます。&lt;/p&gt;
&lt;h2 id=&#34;説明&#34;&gt;説明
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;TrapFlag&lt;/code&gt;はレジスタフラグ領域内のフラグであり、このフラグが設定されると、&lt;code&gt;SINGLE_STEP&lt;/code&gt;例外が発生します。なぜなら、デバッガーでコードをトレースしている場合、このフラグはデバッガーによってリセットされ、その例外を捕捉できないからです。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;実際のテストでは、直接ステップオーバーしてデバッグ対象の関数を実行すると、デバッグが検出されないことがわかります。例外は、その関数にエントリする実行時のみ検出されます（資料参照、未検証）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;参考文献&#34;&gt;参考文献
&lt;/h2&gt;&lt;p&gt;中国語の関連資料は、すべてウェブサイトの英文稿を翻訳したものです。このサイトでは、さまざまな反调试技術について解説しています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://anti-debug.checkpoint.com/techniques/assembly.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://anti-debug.checkpoint.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://song-10.gitee.io/2021/08/08/Reverse-2021-08-08-anti-debug/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://song-10.gitee.io/2021/08/08/Reverse-2021-08-08-anti-debug/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
