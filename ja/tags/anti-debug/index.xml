<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Anti-Debug on 向叔の手帳</title>
        <link>https://blog.ttf248.life/ja/tags/anti-debug/</link>
        <description>Recent content in Anti-Debug on 向叔の手帳</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja</language>
        <lastBuildDate>Wed, 28 May 2025 09:47:38 +0800</lastBuildDate><atom:link href="https://blog.ttf248.life/ja/tags/anti-debug/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>プログラムをデバッグからどのようにして回避するか。</title>
        <link>https://blog.ttf248.life/ja/p/program-how-to-anti-debug/</link>
        <pubDate>Tue, 23 Jan 2024 19:46:36 +0800</pubDate>
        
        <guid>https://blog.ttf248.life/ja/p/program-how-to-anti-debug/</guid>
        <description>&lt;p&gt;ふと思いで、新しい壁紙を探してみる。普段は黒系のシリーズを使っているが、一部にカラフルな要素を取り入れて、デスクトップにアイコンを配置したい。他の色合いの壁紙だとアイコンが見えづらい。&lt;/p&gt;
&lt;p&gt;アセンブリコードをしばらく見つめて考えてみたが、理解できなかった。&lt;code&gt;AI&lt;/code&gt;に頼ってみると、命令は説明されたものの、状況の説明はない。特定の状況下でのみ使用される命令であることは確かで、通常のコードではこのような書き方はしない。&lt;/p&gt;
&lt;p&gt;現今は検索エンジンの方が良いでしょう、アセンブリの知識が足りません。&lt;/p&gt;
&lt;h2 id=&#34;壁紙&#34;&gt;壁紙
&lt;/h2&gt;&lt;p&gt;！&lt;a class=&#34;link&#34; href=&#34;Snipaste_2024-01-23_19-50-53.png&#34; &gt;黑色汇编壁纸&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;アセンブリコード&#34;&gt;アセンブリコード
&lt;/h2&gt;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;PUSHFD
MOV DWORD PTR [ESP],0X100
POPFD
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;実用的な応用シーン&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;bool IsDebugged()
{
    __try
    {
        __asm
        {
            pushfd
            mov dword ptr [esp], 0x100
            popfd
            nop
        }
        return true;
    }
    __except(GetExceptionCode() == EXCEPTION_SINGLE_STEP
        ? EXCEPTION_EXECUTE_HANDLER
        : EXCEPTION_CONTINUE_EXECUTION)
    {
        return false;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;説明&#34;&gt;説明
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;斜体_3&lt;/strong&gt;&lt;strong&gt;強調_2__斜体_4__&lt;/strong&gt;、コードをトレースするとこのフラグがデバッガによってクリアされるため、この例外が見えなくなります。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;実際のテストでは、検出デバッグの関数をステップオーバーするとデバッグが検知されないことがわかった。デバッグ関数実行時にステップインした場合のみ検知される。(資料調査、未検証)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;参照資料&#34;&gt;参照資料
&lt;/h2&gt;&lt;p&gt;関連資料は、ウェブサイトの英語版を翻訳したもので、様々なデバッグ対策技術について解説しています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://anti-debug.checkpoint.com/techniques/assembly.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://anti-debug.checkpoint.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://song-10.gitee.io/2021/08/08/Reverse-2021-08-08-anti-debug/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://song-10.gitee.io/2021/08/08/Reverse-2021-08-08-anti-debug/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
    </channel>
</rss>
