<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>タスク分解 on 向叔の手帳</title>
        <link>https://ttf248.life/ja/tags/%E3%82%BF%E3%82%B9%E3%82%AF%E5%88%86%E8%A7%A3/</link>
        <description>Recent content in タスク分解 on 向叔の手帳</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja</language>
        <lastBuildDate>Mon, 02 Jun 2025 05:33:00 +0800</lastBuildDate><atom:link href="https://ttf248.life/ja/tags/%E3%82%BF%E3%82%B9%E3%82%AF%E5%88%86%E8%A7%A3/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>AIプログラミングとタスク分解</title>
        <link>https://ttf248.life/ja/p/ai-programming-and-task-decomposition/</link>
        <pubDate>Fri, 22 Dec 2023 08:44:26 +0800</pubDate>
        
        <guid>https://ttf248.life/ja/p/ai-programming-and-task-decomposition/</guid>
        <description>&lt;p&gt;2年前、サイトにコード領域のコピー機能を追加するために、半日ほど試行錯誤した結果、レンダリング効果が少し不満だった。半ば無能なフロントエンド開発者として、改善することも思わなかった。動けばそれで十分だ、と割り切っていた。今年、&lt;code&gt;AI&lt;/code&gt;を使って小程序を開発し、フロントエンドの開発もより慣れてきた。そしてリファクタリングを行った（&lt;code&gt;AI&lt;/code&gt;が再設計）。&lt;/p&gt;
&lt;p&gt;悟り：タスク分解をして、多くの小さなタスクは&lt;code&gt;AI&lt;/code&gt;で開発すると自然にこなせる。すでに閉鎖された小程序において、&lt;code&gt;75%&lt;/code&gt;のコードを&lt;code&gt;AI&lt;/code&gt;が提供し、複数のタスクを分割して引き渡すことで、人工によってプロジェクトコードが&lt;code&gt;組み立て&lt;/code&gt;られた。&lt;/p&gt;
&lt;h2 id=&#34;前文&#34;&gt;前文
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://ttf248.github.io/post/2022/001/%E4%BB%A5%E4%B8%BA%E5%BE%88%E7%AE%80%E5%8D%95%E7%9A%84%E4%BA%8B%E6%83%85%E5%A2%9E%E5%8A%A0%E4%B8%80%E4%B8%AA%E4%BB%A3%E7%A0%81%E5%A4%8D%E5%88%B6%E6%8C%89%E9%92%AE/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;簡単なことだと考えたけど、コードのコピーボタンを追加&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;正文&#34;&gt;正文
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;promot&lt;/strong&gt;: クラス &amp;ldquo;highlight&amp;rdquo; を持つウェブページの要素とそのコンテナ内にコピーボタンを追加し、コードとJavaScriptで動作するように設計する。最初のドラフトは問題があり、基本的には使用可能だが、コピーされる内容に冗長な文字が含まれており、再度最適化を促し、コアとなるカラーデザインを指定し、エフェクトを含めるように依頼した。&lt;/p&gt;
&lt;p&gt;お客様がボタンのサイズと色に関して特定の要件をお持ちであることを確認しましたので、これらの要件に合わせてボタンのスタイルを再設計します。以下は、ご提供いただいたカラーパレットを使用し、ボタンのサイズを最適化したCSSスタイルの例です。&lt;/p&gt;
&lt;p&gt;このスタイルでは、ボタンのサイズとフォントサイズを縮小し、より洗練された外観にしています。 同時に、ボタンのデフォルトの状態は半透明で、マウスをボタンにホバーすると不透明になり、背景色がわずかに明るくなることで視覚的なフィードバックを提供します。このようなデザインは、お客様のご希望の色合いにも合致しつつ、モダンでユーザーフレンドリーな特徴も保っています。
対応として、よりシンプルな &lt;code&gt;JavaScript&lt;/code&gt; も提供しています：&lt;/p&gt;
&lt;h2 id=&#34;追記&#34;&gt;追記
&lt;/h2&gt;&lt;p&gt;コード領域の右上隅に、トップエリアにコピーボタンを追加したいという希望は叶いませんでした。フロントエンドについては知識が不足しており、キーワードに基づいて機能を正確に記述することが困難だったため、AIとやり取りを繰り返すだけで期待した成果には至りませんでした。&lt;/p&gt;
&lt;p&gt;ただ、時間の経過とともにAIがソフトウェア開発にどの程度影響を与えるのか、それがどうなるのか疑問に思います。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
