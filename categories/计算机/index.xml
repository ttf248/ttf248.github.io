<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>计算机 on 向叔记事簿</title>
    <link>https://ttf248.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/</link>
    <description>Recent content in 计算机 on 向叔记事簿</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 22 Mar 2024 01:08:05 +0800</lastBuildDate><atom:link href="https://ttf248.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python 字典存储自定义对象：引用与深拷贝的重要性</title>
      <link>https://ttf248.github.io/post/2024/03-22-python%E5%AD%97%E5%85%B8%E5%AD%98%E5%82%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AF%B9%E8%B1%A1-%E5%BC%95%E7%94%A8%E4%B8%8E%E6%B7%B1%E6%8B%B7%E8%B4%9D%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7/</link>
      <pubDate>Fri, 22 Mar 2024 01:08:05 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2024/03-22-python%E5%AD%97%E5%85%B8%E5%AD%98%E5%82%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AF%B9%E8%B1%A1-%E5%BC%95%E7%94%A8%E4%B8%8E%E6%B7%B1%E6%8B%B7%E8%B4%9D%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7/</guid>
      <description>&lt;p&gt;在 Python 编程中，字典是一种非常强大的数据结构，它允许我们将键值对关联起来，并以高效的方式查找和操作这些数据。当我们尝试在字典中存储自定义对象时，通常会遇到一个关键概念：Python 中的对象赋值实际上是引用赋值，而非对象本身的深拷贝。这意味着将自定义对象放入字典时，字典中存储的是对该对象的引用，而非对象的一个全新副本。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WPF中的UI线程与卡顿问题及其解决方案</title>
      <link>https://ttf248.github.io/post/2024/03-12-wpf%E5%8D%A1%E9%A1%BF%E5%92%8Cui%E7%BA%BF%E7%A8%8B/</link>
      <pubDate>Tue, 12 Mar 2024 07:12:21 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2024/03-12-wpf%E5%8D%A1%E9%A1%BF%E5%92%8Cui%E7%BA%BF%E7%A8%8B/</guid>
      <description>&lt;p&gt;在开发桌面应用程序时，特别是在使用Windows Presentation Foundation (WPF)框架构建富客户端应用时，正确处理用户界面（UI）线程对于保证应用的流畅性和响应性至关重要。UI线程，又称为主线程，是负责处理窗口和控件事件、布局计算以及绘制界面的核心线程。任何与UI元素交互的操作都应当在UI线程上执行，这是WPF以及其他大多数GUI框架遵循的基本原则。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>升级GCC版本导致的程序奔溃：代码不规范</title>
      <link>https://ttf248.github.io/post/2024/03-10-%E9%AB%98%E7%89%88%E6%9C%ACgcc%E5%8F%91%E5%B8%83release%E7%89%88%E6%9C%AC%E6%9C%8D%E5%8A%A1%E5%B4%A9%E6%BA%83/</link>
      <pubDate>Sun, 10 Mar 2024 23:19:06 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2024/03-10-%E9%AB%98%E7%89%88%E6%9C%ACgcc%E5%8F%91%E5%B8%83release%E7%89%88%E6%9C%AC%E6%9C%8D%E5%8A%A1%E5%B4%A9%E6%BA%83/</guid>
      <description>&lt;p&gt;同样的业务代码，centos7 编译发布，运行正常，切换到 centos8 编译发布，程序发生崩溃。&lt;/p&gt;
&lt;p&gt;问题仅发生在 Release 模式，Debug 模式编译发布，程序都是正常的。&lt;/p&gt;
&lt;p&gt;第一次排查此类问题，组里断断续续，排查了三天，最终定位到问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vmware虚拟机cpu资源占用异常</title>
      <link>https://ttf248.github.io/post/2024/03-10-vmware%E8%99%9A%E6%8B%9F%E6%9C%BAcpu%E8%B5%84%E6%BA%90%E5%8D%A0%E7%94%A8%E5%BC%82%E5%B8%B8/</link>
      <pubDate>Sun, 10 Mar 2024 22:14:59 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2024/03-10-vmware%E8%99%9A%E6%8B%9F%E6%9C%BAcpu%E8%B5%84%E6%BA%90%E5%8D%A0%E7%94%A8%E5%BC%82%E5%B8%B8/</guid>
      <description>&lt;p&gt;背景：本地机器部署 windows 版本的业务系统，cpu 资源占用 5% 左右。vmware安装的 centos8 中部署 linux 版本业务系统，资源占用异常。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C&#43;&#43;编程中的陷阱：错误使用`std::map`导致程序崩溃详解</title>
      <link>https://ttf248.github.io/post/2024/03-10-%E9%94%99%E8%AF%AF%E4%BD%BF%E7%94%A8map%E5%BC%95%E5%8F%91%E7%9A%84%E5%B4%A9%E6%BA%83/</link>
      <pubDate>Sun, 10 Mar 2024 22:03:06 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2024/03-10-%E9%94%99%E8%AF%AF%E4%BD%BF%E7%94%A8map%E5%BC%95%E5%8F%91%E7%9A%84%E5%B4%A9%E6%BA%83/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pstack排查进程假死</title>
      <link>https://ttf248.github.io/post/2024/03-10-pstack%E6%8E%92%E6%9F%A5%E8%BF%9B%E7%A8%8B%E5%81%87%E6%AD%BB/</link>
      <pubDate>Sat, 24 Feb 2024 23:55:59 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2024/03-10-pstack%E6%8E%92%E6%9F%A5%E8%BF%9B%E7%A8%8B%E5%81%87%E6%AD%BB/</guid>
      <description>&lt;p&gt;在软件开发和运维中，经常会遇到进程假死的情况，这种情况会导致系统性能下降或者服务不可用。本文介绍如何使用 pstack 工具来排查进程假死问题，通过分析进程的堆栈信息，找出问题的原因并解决。&lt;/p&gt;
&lt;p&gt;背景：风控系统子服务出现假死，导致风控服务不可用。由于缺乏服务可用性监控，无法及时发现进程假死的情况，导致系统不可用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C&#43;&#43;函数调用耗时</title>
      <link>https://ttf248.github.io/post/2024/01-24-c&#43;&#43;%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E8%80%97%E6%97%B6/</link>
      <pubDate>Wed, 24 Jan 2024 14:11:33 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2024/01-24-c&#43;&#43;%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E8%80%97%E6%97%B6/</guid>
      <description>&lt;p&gt;设计行情 SDK，针对不同的回调函数实现方式，进行了一次耗时的测试。近期在看 C++ 函数编程，当函数变成了一等公民，在程序内部流转，耗时有什么不同？&lt;/p&gt;
&lt;p&gt;前文链接：&lt;a href=&#34;https://ttf248.github.io/post/2023/02-15-%E7%BC%96%E8%AF%91%E5%99%A8%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/&#34;&gt;编译器、回调函数、性能测试&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;leimao 大佬刚好也做了类似的测试，借代码一用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>转载：计算机为什么普遍采用小端存储</title>
      <link>https://ttf248.github.io/post/2024/01-24-%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%BA%E4%BB%80%E4%B9%88%E6%99%AE%E9%81%8D%E9%87%87%E7%94%A8%E5%B0%8F%E7%AB%AF%E5%AD%98%E5%82%A8/</link>
      <pubDate>Wed, 24 Jan 2024 10:43:05 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2024/01-24-%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%BA%E4%BB%80%E4%B9%88%E6%99%AE%E9%81%8D%E9%87%87%E7%94%A8%E5%B0%8F%E7%AB%AF%E5%AD%98%E5%82%A8/</guid>
      <description>&lt;p&gt;关于字节序的科普 &lt;a href=&#34;https://ttf248.github.io/post/2023/01-10-%E4%B8%BB%E6%9C%BA%E5%BA%8F%E7%BD%91%E7%BB%9C%E5%BA%8F%E9%80%9A%E8%BF%87%E8%B0%83%E8%AF%95%E5%99%A8%E7%9B%B4%E6%8E%A5%E8%A7%82%E5%AF%9F/&#34;&gt;主机序、网络序，通过调试器，直接观察&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;计算机领域历史原因形成的某些设计习惯，跟马屁股宽度决定火箭推进器宽度的道理是一样的，没必要硬去分析里面的“优势”“劣势”，纯粹只是历史习惯。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>程序如何反调试</title>
      <link>https://ttf248.github.io/post/2024/01-23-%E7%A8%8B%E5%BA%8F%E5%A6%82%E4%BD%95%E5%8F%8D%E8%B0%83%E8%AF%95/</link>
      <pubDate>Tue, 23 Jan 2024 19:46:36 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2024/01-23-%E7%A8%8B%E5%BA%8F%E5%A6%82%E4%BD%95%E5%8F%8D%E8%B0%83%E8%AF%95/</guid>
      <description>&lt;p&gt;心血来潮，琢磨找找新壁纸，习惯黑色系列，部分区域彩色即可，桌面需要放置图标，其他色系作壁纸，图标就不清晰了。&lt;/p&gt;
&lt;p&gt;盯着上面的汇编代码思考一波，没看懂，尝试扔给&lt;code&gt;AI&lt;/code&gt;，解释了指令，没有解释场景，必然是某个特殊场景用到的指令，常规代码不是这样的。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;AI&lt;/code&gt;此时不如搜索引擎了，汇编的知识储备不足。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何下载焦点访谈/CCTV视频文件</title>
      <link>https://ttf248.github.io/post/2024/01-23-%E5%A6%82%E4%BD%95%E4%B8%8B%E8%BD%BD%E7%84%A6%E7%82%B9%E8%AE%BF%E8%B0%88%E7%9A%84%E8%A7%86%E9%A2%91%E6%96%87%E4%BB%B6/</link>
      <pubDate>Tue, 23 Jan 2024 19:23:35 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2024/01-23-%E5%A6%82%E4%BD%95%E4%B8%8B%E8%BD%BD%E7%84%A6%E7%82%B9%E8%AE%BF%E8%B0%88%E7%9A%84%E8%A7%86%E9%A2%91%E6%96%87%E4%BB%B6/</guid>
      <description>&lt;p&gt;最近有人咨询，如何下载焦点访谈的视频，脑子里面想着十有八九又是 &lt;code&gt;m3u8&lt;/code&gt; 方式加密，洒洒水了，简单处理下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>批量修改SqlServer数据库磁盘文件权限</title>
      <link>https://ttf248.github.io/post/2024/01-23-%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9sqlserver%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A3%81%E7%9B%98%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90/</link>
      <pubDate>Tue, 23 Jan 2024 19:06:36 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2024/01-23-%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9sqlserver%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A3%81%E7%9B%98%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90/</guid>
      <description>&lt;p&gt;公司安全策略调整，&lt;code&gt;机械师 mini&lt;/code&gt;最终还是搬迁回家作为备用服务器，顺带重装机器系统，&lt;code&gt;ubuntu&lt;/code&gt; 切换到了&lt;code&gt;windows server&lt;/code&gt;，由于激活的手段不正规，自己家里用，好像不激活也没事&lt;/p&gt;
&lt;p&gt;非常规方式激活，触发了微软的检测（正常运行了半个月），服务器开机一小时，自动关机，翻了一圈系统日志，才发现是盗版导致的。&lt;/p&gt;
&lt;p&gt;没辙，再次重装系统，&lt;code&gt;SqlServer&lt;/code&gt;也面临重装，每次弄都比较蛋疼，文件权限管控严格，导致无法正常附加数据库。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux系统跑分测试</title>
      <link>https://ttf248.github.io/post/2024/01-09-linux%E7%B3%BB%E7%BB%9F%E8%B7%91%E5%88%86%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Tue, 09 Jan 2024 10:56:23 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2024/01-09-linux%E7%B3%BB%E7%BB%9F%E8%B7%91%E5%88%86%E6%B5%8B%E8%AF%95/</guid>
      <description>&lt;p&gt;Windows 平台有个鲁大师（娱乐大师），不能说数据很准，单总归有个参考，当然也有其他的专业跑分软件，到了 Linux 系统，好像一直没遇到特别合适的跑分软件。&lt;/p&gt;
&lt;p&gt;Sysbench 是一款多功能的基准测试工具，可用于测试CPU、内存、文件I/O、线程性能等。您可以使用 sysbench 来执行各种性能测试任务。&lt;/p&gt;
&lt;p&gt;手头上刚好有三台机器用于测试：机械师 mini 本地小主机、阿里云 dev 开发云服务器、华为云开发服务器。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git禁用http仓库</title>
      <link>https://ttf248.github.io/post/2024/01-08-git%E7%A6%81%E7%94%A8http%E4%BB%93%E5%BA%93/</link>
      <pubDate>Mon, 08 Jan 2024 21:22:04 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2024/01-08-git%E7%A6%81%E7%94%A8http%E4%BB%93%E5%BA%93/</guid>
      <description>&lt;p&gt;习惯更新软件版本，不知道从哪个版本的&lt;code&gt;Git&lt;/code&gt;开始，禁止从&lt;code&gt;Http&lt;/code&gt;仓库拉取代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fatal: Unencrypted HTTP is not supported &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; GitLab. Ensure the repository remote URL is using HTTPS
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>AI编程和任务拆解</title>
      <link>https://ttf248.github.io/post/2023/12-22-ai%E7%BC%96%E7%A8%8B%E5%92%8C%E4%BB%BB%E5%8A%A1%E6%8B%86%E8%A7%A3/</link>
      <pubDate>Fri, 22 Dec 2023 08:44:26 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2023/12-22-ai%E7%BC%96%E7%A8%8B%E5%92%8C%E4%BB%BB%E5%8A%A1%E6%8B%86%E8%A7%A3/</guid>
      <description>&lt;p&gt;两年前给站点添加代码区域的拷贝功能，前后折腾了小半天，最终渲染效果有点不如意，作为半吊子前端开发，也没想着改进，能用就行，今年用&lt;code&gt;AI&lt;/code&gt;开发了小程序，对于前端的开发也更加熟悉了，重构一波（AI重新设计）。&lt;/p&gt;
&lt;p&gt;悟道：任务拆解开，很多小任务，&lt;code&gt;AI&lt;/code&gt;开发起来还是顺手的。已经倒闭的小程序，&lt;code&gt;75%&lt;/code&gt;代码由&lt;code&gt;AI&lt;/code&gt;提供，拆解了多个任务交付，人工进行项目代码的&lt;code&gt;组装&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>云服务器和脚本小子</title>
      <link>https://ttf248.github.io/post/2023/11-20-%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%92%8C%E8%84%9A%E6%9C%AC%E5%B0%8F%E5%AD%90/</link>
      <pubDate>Mon, 20 Nov 2023 15:08:53 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2023/11-20-%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%92%8C%E8%84%9A%E6%9C%AC%E5%B0%8F%E5%AD%90/</guid>
      <description>&lt;p&gt;趁着双十一搞活动，阿里云新入手了一台服务器：经济适用版本，99一年，配置不高，作为跳板机代理家里的服务也是不错的，活动持续到2026年。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>批量更新本地Git仓库和历史遗留的权限问题</title>
      <link>https://ttf248.github.io/post/2023/10-19-%E6%89%B9%E9%87%8F%E6%9B%B4%E6%96%B0%E6%9C%AC%E5%9C%B0git%E4%BB%93%E5%BA%93/</link>
      <pubDate>Thu, 19 Oct 2023 14:16:22 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2023/10-19-%E6%89%B9%E9%87%8F%E6%9B%B4%E6%96%B0%E6%9C%AC%E5%9C%B0git%E4%BB%93%E5%BA%93/</guid>
      <description>&lt;p&gt;组里的项目之间存在依赖关系，由于历史原因，并未使用&lt;code&gt;submodule&lt;/code&gt;维护项目的依赖，日常开发需要手动依次更新仓库代码，否则可能碰到各种奇怪的问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WPF学习资料</title>
      <link>https://ttf248.github.io/post/2023/10-17-wpf%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/</link>
      <pubDate>Tue, 17 Oct 2023 10:49:24 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2023/10-17-wpf%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/</guid>
      <description>&lt;p&gt;小程序开发设计的坑还没填上，新挖一个&lt;strong&gt;WPF&lt;/strong&gt;，最近公司也动荡了一波，异地协同办公沟通总归效率总归有点不如意，索性承接了客户端界面的开发。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>异地局域网ZeroTier</title>
      <link>https://ttf248.github.io/post/2023/09-19-%E5%BC%82%E5%9C%B0%E5%B1%80%E5%9F%9F%E7%BD%91zerotier/</link>
      <pubDate>Tue, 19 Sep 2023 04:58:03 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2023/09-19-%E5%BC%82%E5%9C%B0%E5%B1%80%E5%9F%9F%E7%BD%91zerotier/</guid>
      <description>&lt;p&gt;办公室新入手一台&lt;code&gt;mini&lt;/code&gt;主机，想着配置配置环境方便，在家偶尔也有访问的需求，临时部署内网穿透。按照以往的经验，部署&lt;code&gt;frp&lt;/code&gt;服务，指定端口转发，需要一台公网的服务器，连接的质量取决于公网服务器的宽带质量。折腾一点新鲜的&lt;code&gt;Zerotier&lt;/code&gt;虚拟机局域网，类似于&lt;code&gt;VPN&lt;/code&gt;，本地新建虚拟网卡，所有的机器都加入到一个虚拟网络中。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VMware 虚拟机磁盘空间优化</title>
      <link>https://ttf248.github.io/post/2023/06-21-vmware%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%BC%98%E5%8C%96%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4/</link>
      <pubDate>Wed, 21 Jun 2023 18:35:41 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2023/06-21-vmware%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%BC%98%E5%8C%96%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4/</guid>
      <description>&lt;p&gt;&lt;code&gt;vmware&lt;/code&gt;虚拟机安装开发系统的时候，一般都会多预留点磁盘空间，用的时间长了，本地占用的磁盘空间远超虚拟机实际文件的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Stable-diffusion-从零安装的恩怨情仇</title>
      <link>https://ttf248.github.io/post/2023/04-13-stable-diffusion-%E4%BB%8E%E9%9B%B6%E5%AE%89%E8%A3%85%E7%9A%84%E6%81%A9%E6%80%A8%E6%83%85%E4%BB%87/</link>
      <pubDate>Thu, 13 Apr 2023 00:23:54 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2023/04-13-stable-diffusion-%E4%BB%8E%E9%9B%B6%E5%AE%89%E8%A3%85%E7%9A%84%E6%81%A9%E6%80%A8%E6%83%85%E4%BB%87/</guid>
      <description>&lt;p&gt;国内的资料，基本都在推荐&lt;strong&gt;秋叶&lt;/strong&gt;大佬的一键部署包，想着都是基于&lt;code&gt;Python&lt;/code&gt;的开源项目，部署也不会很复杂，试试从零开始。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;折腾AI生成图，特意更换了显卡，&lt;code&gt;3060 12g&lt;/code&gt;入门版本；服役七年的&lt;code&gt;960&lt;/code&gt;光荣下线&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;核心的&lt;code&gt;pytorch cuda&lt;/code&gt;安装，以前编写&lt;code&gt;pyhton&lt;/code&gt;游戏辅助脚本时，本地安装过，没想到还是碰到坑，&lt;code&gt;cuda&lt;/code&gt;加密一直无法激活。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>程序优化不要试图对抗硬件</title>
      <link>https://ttf248.github.io/post/2023/04-07-%E7%A8%8B%E5%BA%8F%E4%BC%98%E5%8C%96%E4%B8%8D%E8%A6%81%E8%AF%95%E5%9B%BE%E5%AF%B9%E6%8A%97%E7%A1%AC%E4%BB%B6/</link>
      <pubDate>Fri, 07 Apr 2023 16:30:15 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2023/04-07-%E7%A8%8B%E5%BA%8F%E4%BC%98%E5%8C%96%E4%B8%8D%E8%A6%81%E8%AF%95%E5%9B%BE%E5%AF%B9%E6%8A%97%E7%A1%AC%E4%BB%B6/</guid>
      <description>&lt;p&gt;&lt;code&gt;one loop thread&lt;/code&gt;，耗时已经在&lt;strong&gt;微秒&lt;/strong&gt;层面，更换服务器，从最多积压六万数据包，到几乎没有积压&lt;/p&gt;
&lt;p&gt;在单线程循环处理数据的场景中，CPU的性能取决于主频、缓存大小、指令集架构等因素。一般来说，主频越高、缓存越大、指令集架构越先进的CPU在单线程处理数据时性能越好&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Prompt 工程师</title>
      <link>https://ttf248.github.io/post/2023/03-26-prompt%E5%B7%A5%E7%A8%8B%E5%B8%88%E8%89%AF%E5%A5%BD%E7%9A%84ai%E4%BA%A4%E4%BA%92%E4%BD%93%E9%AA%8C/</link>
      <pubDate>Sun, 26 Mar 2023 20:46:53 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2023/03-26-prompt%E5%B7%A5%E7%A8%8B%E5%B8%88%E8%89%AF%E5%A5%BD%E7%9A%84ai%E4%BA%A4%E4%BA%92%E4%BD%93%E9%AA%8C/</guid>
      <description>&lt;p&gt;就如当年学习搜索引擎的技巧，我们也需要学习一些和&lt;code&gt;AI&lt;/code&gt;沟通的技巧，给出合理且充分的限定条件，高效的获取需要的答案。&lt;/p&gt;
&lt;p&gt;如果你换个角度呢，当前的&lt;code&gt;AI&lt;/code&gt;属于一个记忆力很好的小孩子，它拥有过目不忘的能力，有抄作业的能力。我们需要做的是学会如何正确、有效的和&lt;code&gt;AI&lt;/code&gt;沟通，精准的描述需求，帮助&lt;code&gt;AI&lt;/code&gt;生成预期的结果。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>微信小程序背景和开发环境</title>
      <link>https://ttf248.github.io/post/2023/03-20-%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%83%8C%E6%99%AF%E5%92%8C%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Fri, 24 Mar 2023 21:59:11 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2023/03-20-%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%83%8C%E6%99%AF%E5%92%8C%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid>
      <description>&lt;p&gt;微信小程序介绍与开发准备&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>办公室迁移，服务器无法访问了</title>
      <link>https://ttf248.github.io/post/2023/03-11-%E5%8A%9E%E5%85%AC%E5%AE%A4%E8%BF%81%E7%A7%BB%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E4%BA%86/</link>
      <pubDate>Sat, 11 Mar 2023 01:42:05 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2023/03-11-%E5%8A%9E%E5%85%AC%E5%AE%A4%E8%BF%81%E7%A7%BB%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E4%BA%86/</guid>
      <description>&lt;p&gt;行政通知，办公位变动，从原本的二楼，迁移到十五楼，普普通通的一次工位迁移&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>嵌入式入门篇1-专业名词</title>
      <link>https://ttf248.github.io/post/2023/03-07-%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%85%A5%E9%97%A8%E7%AF%871-%E4%B8%93%E4%B8%9A%E5%90%8D%E8%AF%8D/</link>
      <pubDate>Tue, 07 Mar 2023 13:42:36 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2023/03-07-%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%85%A5%E9%97%A8%E7%AF%871-%E4%B8%93%E4%B8%9A%E5%90%8D%E8%AF%8D/</guid>
      <description>&lt;p&gt;提到嵌入式，脑海里还是当年学校实验室的51单片机和飞思卡尔。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AI辅助编程，生产力的进化</title>
      <link>https://ttf248.github.io/post/2023/02-28-ai%E8%BE%85%E5%8A%A9%E7%BC%96%E7%A8%8B%E7%94%9F%E4%BA%A7%E5%8A%9B%E7%9A%84%E8%BF%9B%E5%8C%96/</link>
      <pubDate>Tue, 28 Feb 2023 17:05:17 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2023/02-28-ai%E8%BE%85%E5%8A%A9%E7%BC%96%E7%A8%8B%E7%94%9F%E4%BA%A7%E5%8A%9B%E7%9A%84%E8%BF%9B%E5%8C%96/</guid>
      <description>&lt;p&gt;&lt;code&gt;GitHub Copilot&lt;/code&gt; 发布也不到两年时间，&lt;code&gt;ChatGPT&lt;/code&gt; 问世了，不是很懂背后的原理，都用了一段时间。两个工具的辅助层面完全不同，但是都做到了大幅提高生产力。&lt;/p&gt;
&lt;p&gt;太复杂的事情，&lt;code&gt;AI&lt;/code&gt;还做不到，毕竟他们没有逻辑，有套路的或者说范式固定的事情，训练的语料足够，&lt;code&gt;AI&lt;/code&gt;的效果能打个九分。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>几个不常用GIT命令汇总</title>
      <link>https://ttf248.github.io/post/2023/02-17-%E5%87%A0%E4%B8%AA%E4%B8%8D%E5%B8%B8%E7%94%A8git%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB/</link>
      <pubDate>Fri, 17 Feb 2023 10:08:57 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2023/02-17-%E5%87%A0%E4%B8%AA%E4%B8%8D%E5%B8%B8%E7%94%A8git%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB/</guid>
      <description>&lt;p&gt;不常用，但是很有用的&lt;code&gt;git&lt;/code&gt;命令&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>编译器、回调函数、性能测试</title>
      <link>https://ttf248.github.io/post/2023/02-15-%E7%BC%96%E8%AF%91%E5%99%A8%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Wed, 15 Feb 2023 13:59:25 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2023/02-15-%E7%BC%96%E8%AF%91%E5%99%A8%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</guid>
      <description>&lt;p&gt;去年设计了一个&lt;code&gt;SDK&lt;/code&gt;，负责处理封装一些事件，对外提供一个类接口，服务初始化的时候，调用方实现对应的类，并将对象指针传给模块。
接触过&lt;code&gt;C11&lt;/code&gt;，好奇心害死猫，就想着这些接口都用&lt;code&gt;lambda&lt;/code&gt;函数对象回调来实现会是什么结果，和纯虚函数的接口定义方法比较，更加灵活。
疑问就出现了，两种不同的语法，从性能角度来说，哪个更快一些？不懂编译原理，弄段代码试试看。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>主机序、网络序，通过调试器，直接观察</title>
      <link>https://ttf248.github.io/post/2023/01-10-%E4%B8%BB%E6%9C%BA%E5%BA%8F%E7%BD%91%E7%BB%9C%E5%BA%8F%E9%80%9A%E8%BF%87%E8%B0%83%E8%AF%95%E5%99%A8%E7%9B%B4%E6%8E%A5%E8%A7%82%E5%AF%9F/</link>
      <pubDate>Tue, 10 Jan 2023 14:18:12 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2023/01-10-%E4%B8%BB%E6%9C%BA%E5%BA%8F%E7%BD%91%E7%BB%9C%E5%BA%8F%E9%80%9A%E8%BF%87%E8%B0%83%E8%AF%95%E5%99%A8%E7%9B%B4%E6%8E%A5%E8%A7%82%E5%AF%9F/</guid>
      <description>&lt;p&gt;在计算机的发展历史中，如何存储数据并没有统一的标准。&lt;/p&gt;
&lt;p&gt;字节的排列方式有两个通用规则。例如，将一个多位数的低位放在较小的地址处，高位放在较大的地址处，则称小端序；反之则称大端序。在网络应用中，字节序是一个必须被考虑的因素，因为不同机器类型可能采用不同标准的字节序，所以均按照网络标准转化。&lt;/p&gt;
&lt;p&gt;按照阅读习惯，大端字节序更符合从左到右的阅读顺序。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C11: sleep for vs yield</title>
      <link>https://ttf248.github.io/post/2022/09-20-sleep_for_vs_yield/</link>
      <pubDate>Tue, 20 Sep 2022 20:54:51 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2022/09-20-sleep_for_vs_yield/</guid>
      <description>&lt;p&gt;翻看代码的时候，&lt;code&gt;std::this_thread::yield()&lt;/code&gt; 猛的引入眼帘，&lt;code&gt;C11&lt;/code&gt;里面的语法糖，用了不少，&lt;code&gt;yield&lt;/code&gt;还是第一次看到，以前都没注意。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux服务器，重置Mysql密码</title>
      <link>https://ttf248.github.io/post/2022/09-20-mysql-linux%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81/</link>
      <pubDate>Tue, 20 Sep 2022 14:27:35 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2022/09-20-mysql-linux%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81/</guid>
      <description>&lt;p&gt;有台闲置的腾讯云服务器，年底到期，也没想着续费，部署个MYSQL当作开发用的数据库。重装系统的时候，图省事，直接选择了腾讯云提供的三方镜像，已经安装好了MYSQL数据库。原以为系统里面应该自带个Readme之类的文件，说明下密码是什么，部署路径是什么。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>浅谈自动化测试</title>
      <link>https://ttf248.github.io/post/2022/08-04-%E6%B5%85%E8%B0%88%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Thu, 04 Aug 2022 11:39:18 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2022/08-04-%E6%B5%85%E8%B0%88%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/</guid>
      <description>&lt;p&gt;金融交易系统在测试上的投入，远超其他系统，繁琐的测试步骤重复进行，&lt;code&gt;ROI&lt;/code&gt; 太低。随着项目和人员的更替，不可避免引入更多的不可控因素，常见的情况，修改的是A接口输出的某个字段，却影响了B接口的结果，每次版本发布，风险也在积累。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>为什么需要学习一门新语言</title>
      <link>https://ttf248.github.io/post/2022/08-04-%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E5%AD%A6%E4%B9%A0%E4%B8%80%E9%97%A8%E6%96%B0%E8%AF%AD%E8%A8%80/</link>
      <pubDate>Thu, 04 Aug 2022 11:27:30 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2022/08-04-%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E5%AD%A6%E4%B9%A0%E4%B8%80%E9%97%A8%E6%96%B0%E8%AF%AD%E8%A8%80/</guid>
      <description>&lt;p&gt;从上学时期开始算，接触 &lt;code&gt;C++&lt;/code&gt; 已经十多年了，为什么需要学习其他的编程语言？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Visual Studio 编译字符集[转]</title>
      <link>https://ttf248.github.io/post/2022/08-04-visualstudio%E7%BC%96%E8%AF%91%E5%AD%97%E7%AC%A6%E9%9B%86/</link>
      <pubDate>Thu, 04 Aug 2022 10:51:43 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2022/08-04-visualstudio%E7%BC%96%E8%AF%91%E5%AD%97%E7%AC%A6%E9%9B%86/</guid>
      <description>&lt;p&gt;&lt;code&gt;C++&lt;/code&gt;跨平台开发，中文操作系统经常能碰到：&lt;code&gt;error C2001&lt;/code&gt;常量中有换行符&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Windows平台快速统计文件夹大小</title>
      <link>https://ttf248.github.io/post/2022/08-01-windows%E5%BF%AB%E9%80%9F%E7%BB%9F%E8%AE%A1%E6%96%87%E4%BB%B6%E5%A4%B9%E5%A4%A7%E5%B0%8F/</link>
      <pubDate>Mon, 01 Aug 2022 19:54:18 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2022/08-01-windows%E5%BF%AB%E9%80%9F%E7%BB%9F%E8%AE%A1%E6%96%87%E4%BB%B6%E5%A4%B9%E5%A4%A7%E5%B0%8F/</guid>
      <description>&lt;p&gt;&lt;code&gt;Linux&lt;/code&gt; 平台很简单 &lt;code&gt;du -sh *&lt;/code&gt; 一行代码就搞定了。&lt;code&gt;Windows&lt;/code&gt; 怎么办呢？磁盘很多，想清理一波，文件很多的情况下，系统自带的资源管理器，统计文件夹大小，速度慢的让你想放弃&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何Copy网页样式表（CSS）：元素审查</title>
      <link>https://ttf248.github.io/post/2022/07-31-%E5%A6%82%E4%BD%95copy%E7%BD%91%E9%A1%B5%E6%A0%B7%E5%BC%8F%E8%A1%A8/</link>
      <pubDate>Sun, 31 Jul 2022 23:36:48 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2022/07-31-%E5%A6%82%E4%BD%95copy%E7%BD%91%E9%A1%B5%E6%A0%B7%E5%BC%8F%E8%A1%A8/</guid>
      <description>&lt;p&gt;静态博客的主题，主流是基于国外的模板，进行修改调整，没有过多考虑中文内容的排版&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Windows平台编辑超大型文件：EmEditor (Text Editor)</title>
      <link>https://ttf248.github.io/post/2022/07-31-windows%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%BE%91%E8%B6%85%E5%A4%A7%E5%9E%8B%E6%96%87%E4%BB%B6emeditor/</link>
      <pubDate>Sun, 31 Jul 2022 23:21:24 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2022/07-31-windows%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%BE%91%E8%B6%85%E5%A4%A7%E5%9E%8B%E6%96%87%E4%BB%B6emeditor/</guid>
      <description>&lt;p&gt;上海国安数据库事件，黑产圈子里面闹的沸沸扬扬，也不知道真假，过两年如果还记得，再回头看看。根据以往的经验，更新了一波本地的社工数据库资料，看到一个巨型SQL文件：17.9G，一般的文本编辑器，预览都是个问题，更别说打开了，和网友闲聊，提到了：EmEditor。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>以为很简单的事情，增加一个代码复制按钮</title>
      <link>https://ttf248.github.io/post/2022/001-%E4%BB%A5%E4%B8%BA%E5%BE%88%E7%AE%80%E5%8D%95%E7%9A%84%E4%BA%8B%E6%83%85%E5%A2%9E%E5%8A%A0%E4%B8%80%E4%B8%AA%E4%BB%A3%E7%A0%81%E5%A4%8D%E5%88%B6%E6%8C%89%E9%92%AE/</link>
      <pubDate>Fri, 25 Feb 2022 01:23:39 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2022/001-%E4%BB%A5%E4%B8%BA%E5%BE%88%E7%AE%80%E5%8D%95%E7%9A%84%E4%BA%8B%E6%83%85%E5%A2%9E%E5%8A%A0%E4%B8%80%E4%B8%AA%E4%BB%A3%E7%A0%81%E5%A4%8D%E5%88%B6%E6%8C%89%E9%92%AE/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;ouuan&lt;/code&gt; 弄了四个小时，看到这句话的时候，我还觉得搞笑了，怎么可能这么久？最后一看时间：三个小时。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;算是二零二二年开年的第一篇稿子，要搞的东西不复杂，就和标题说的一模一样（此时的我还很年轻），以为照抄 &lt;a href=&#34;https://ouuan.github.io/post/from-hexo-to-hugo/&#34;&gt;作业&lt;/a&gt; 就行，放到收藏夹里面，拖拖拉拉等了一个多月，终于想起来这个事情。&lt;/p&gt;
&lt;p&gt;迁移到&lt;code&gt;hugo&lt;/code&gt;的时候一直觉得插件太少了，不能复制代码，导致很多笔记从印象笔记迁移到博客，复制代码的代码的操作就变得繁琐了，严重耽误我水博客的动力。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>混沌工程</title>
      <link>https://ttf248.github.io/post/2021/06-%E6%B7%B7%E6%B2%8C%E5%B7%A5%E7%A8%8B/</link>
      <pubDate>Wed, 28 Jul 2021 14:35:07 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2021/06-%E6%B7%B7%E6%B2%8C%E5%B7%A5%E7%A8%8B/</guid>
      <description>&lt;p&gt;一种破坏系统的模式，进行系统稳定性测试&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kubernetes暂停pod</title>
      <link>https://ttf248.github.io/post/2021/05-kubernetes%E6%9A%82%E5%81%9Cpod/</link>
      <pubDate>Mon, 12 Jul 2021 11:23:09 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2021/05-kubernetes%E6%9A%82%E5%81%9Cpod/</guid>
      <description>Deployment控制器实现了Kubernetes集群中一个很重要的功能，Pod的水平拓展和收缩功能。这个功能是传统云时代平台所必备的能力</description>
    </item>
    
    <item>
      <title>docker二三事</title>
      <link>https://ttf248.github.io/post/2021/01-docker%E4%BA%8C%E4%B8%89%E4%BA%8B/</link>
      <pubDate>Thu, 21 Jan 2021 09:26:07 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2021/01-docker%E4%BA%8C%E4%B8%89%E4%BA%8B/</guid>
      <description>工作多年接触到的都是centos操作系统，如果是mac用户或者Ubuntu用户，暂时没法提供更多的帮助。 安装 由于不可知的神秘力量，国内安装d</description>
    </item>
    
    <item>
      <title>Linux搭建Jmeter压测环境</title>
      <link>https://ttf248.github.io/post/2020/08-linux%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BAjmeter%E5%8E%8B%E6%B5%8B%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Tue, 22 Dec 2020 10:12:50 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2020/08-linux%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BAjmeter%E5%8E%8B%E6%B5%8B%E7%8E%AF%E5%A2%83/</guid>
      <description>背景 众所周知本人对硬件有很浓厚的兴趣，凑巧测试组在用Jmeter做压力测试，发现性能上不去，作为好奇宝宝的我果断出击，试试公司的压测是怎么玩</description>
    </item>
    
    <item>
      <title>Redhat 和 Centos 生命周期</title>
      <link>https://ttf248.github.io/post/2020/07-redhat-and-centos-life-cycle/</link>
      <pubDate>Tue, 21 Jul 2020 20:02:35 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2020/07-redhat-and-centos-life-cycle/</guid>
      <description>前言 线上生产环境操作系统，目前国内的环境来说，redhat和centos为主流选择。前两年经历了redhat6的退役，特此记录两个系统生命周</description>
    </item>
    
    <item>
      <title>电脑组装那些事</title>
      <link>https://ttf248.github.io/post/2020/05-%E7%94%B5%E8%84%91%E7%BB%84%E8%A3%85%E9%82%A3%E4%BA%9B%E4%BA%8B/</link>
      <pubDate>Sat, 18 Jul 2020 14:33:46 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2020/05-%E7%94%B5%E8%84%91%E7%BB%84%E8%A3%85%E9%82%A3%E4%BA%9B%E4%BA%8B/</guid>
      <description>缘·妙不可言 打小呢就想着组装一台自己的电脑，奈何经济条件不允许。好不容易熬到了大学，为了便于携带，配置的也是笔记本。如果非要有个具体的时间点</description>
    </item>
    
    <item>
      <title>网站加速和域名设置</title>
      <link>https://ttf248.github.io/post/2020/04-%E7%BD%91%E7%AB%99%E5%8A%A0%E9%80%9F%E5%92%8C%E5%9F%9F%E5%90%8D%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Sat, 20 Jun 2020 10:36:27 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2020/04-%E7%BD%91%E7%AB%99%E5%8A%A0%E9%80%9F%E5%92%8C%E5%9F%9F%E5%90%8D%E8%AE%BE%E7%BD%AE/</guid>
      <description>背景 网站托管在GitHub Pages，某些众所周知的原因，境内访问GitHub Pages有点慢。故而申请了个人域名，购买了国内云主机供应商的</description>
    </item>
    
    <item>
      <title>博客IDE环境和碎碎念</title>
      <link>https://ttf248.github.io/post/2020/03-%E5%8D%9A%E5%AE%A2ide%E7%8E%AF%E5%A2%83%E5%92%8C%E7%A2%8E%E7%A2%8E%E5%BF%B5/</link>
      <pubDate>Tue, 31 Mar 2020 13:54:27 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2020/03-%E5%8D%9A%E5%AE%A2ide%E7%8E%AF%E5%A2%83%E5%92%8C%E7%A2%8E%E7%A2%8E%E5%BF%B5/</guid>
      <description>前言 Markdown 一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档 详细的Markdown语法本文不做额外赘述，推荐一本电子书，点击此处 市面</description>
    </item>
    
    <item>
      <title>自动集成系统切换</title>
      <link>https://ttf248.github.io/post/2020/02-%E8%87%AA%E5%8A%A8%E9%9B%86%E6%88%90%E7%B3%BB%E7%BB%9F%E5%88%87%E6%8D%A2/</link>
      <pubDate>Sun, 29 Mar 2020 02:11:33 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2020/02-%E8%87%AA%E5%8A%A8%E9%9B%86%E6%88%90%E7%B3%BB%E7%BB%9F%E5%88%87%E6%8D%A2/</guid>
      <description>背景介绍 昨天更新博客时发现travis服务不可用，查看travis网页，发现进度卡在拉取源码的时候，灵光闪现想到了github之前推出的ac</description>
    </item>
    
    <item>
      <title>标准库容器的内存分配器：allocator</title>
      <link>https://ttf248.github.io/post/2020/01-std-allocator-%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Mon, 30 Dec 2019 13:26:19 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2020/01-std-allocator-%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</guid>
      <description>前因 近期接触到了网络网络数据包的开发，需要频繁的申请和释放小块的内存，原本想着使用内存池，查看了几个现有的内存池，发现了这个： https://github.com/cacay/MemoryPool 看到接口的时</description>
    </item>
    
  </channel>
</rss>
