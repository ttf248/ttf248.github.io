<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>사용자 정의 on 향숙의 수첩</title>
        <link>https://blog.ttf248.life/ko/tags/%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EC%9D%98/</link>
        <description>Recent content in 사용자 정의 on 향숙의 수첩</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ko</language>
        <lastBuildDate>Wed, 28 May 2025 09:47:38 +0800</lastBuildDate><atom:link href="https://blog.ttf248.life/ko/tags/%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EC%9D%98/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Hugo 모듈 커스텀 수정 테마: 아이디어 설명</title>
        <link>https://blog.ttf248.life/ko/p/hugo-module-custom-theme-ideas/</link>
        <pubDate>Fri, 15 Nov 2024 22:01:17 +0800</pubDate>
        
        <guid>https://blog.ttf248.life/ko/p/hugo-module-custom-theme-ideas/</guid>
        <description>&lt;p&gt;과거 커밋 기록을 살펴보니, 사이트는 여러 번 테마를 변경해 왔고, 매번 변경 시마다 사용자 정의 수정 사항이 있었습니다. 여기 사용자 정의 테마 수정에 대한 아이디어를 기록합니다. 작성자의 &lt;code&gt;Github&lt;/code&gt;BOLD_3&lt;code&gt;hugo&lt;/code&gt;编译器到最新版本，导致even主题不兼容，所以又切换到了&lt;code&gt;stack&lt;/code&gt; 테마입니다.&lt;/p&gt;
&lt;h2 id=&#34;후고의-모듈화&#34;&gt;후고의 모듈화
&lt;/h2&gt;&lt;p&gt;모듈화를 언급하면 Nginx 모듈이나 IDEA 플러그인 등이 떠오르곤 합니다. 보통은 몇몇 모듈을 업로드하여 차별화된 요구사항을 충족할 수 있습니다. 이러한 모듈이 선호되는 주된 이유는 충분히 유연하기 때문이며, 큰 노력을 들이지 않고도 자체적인 요구사항을 충족할 수 있기 때문입니다. 많은 경우 전체적으로는 비슷하더라도 세부적인 차이가 존재합니다. 이는 기술적 복잡성 외에도 비즈니스 복잡성을 보여주는 것이기도 합니다. 대부분의 경우 우리는 비즈니스 복잡성에 직면하며, 이것이 소프트웨어 분야에서 “동업자 간에도 산과 같다는” 속담을 가장 잘 설명하는 것입니다. 현재는 인터넷 산업뿐만 아니라 금융 산업, 심지어 전통적인 제조업까지 정보화 시스템을 활용하여 기업의 생산 및 관리를 돕고 있습니다. 동일한 휴가 시스템이라 할지라도 같은 업계 내에서도 회사마다 차이가 있을 수 있습니다.&lt;/p&gt;
&lt;p&gt;모듈은 일반적인 모듈과 달리 기능별로 차별화된 요구사항을 충족하기보다는 디렉토리 구조를 중심으로 동일한 구조를 식별합니다&lt;/p&gt;
&lt;p&gt;자료 링크: &lt;a class=&#34;link&#34; href=&#34;https://medium.com/@sunwei.xyz/07-hugo%E6%9E%B6%E6%9E%84-hugo%E7%9A%84%E6%A8%A1%E5%9D%97-8ef5a520a822&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;07. Hugo架构 — Hugo的模块&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[[imports]]
path = &amp;quot;github.com/CaiJimmy/hugo-theme-stack/v3&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;INLINE_CODE_0&lt;/strong&gt; 방식은 여전히 사용할 수 있지만, 본문에서는 권장하지 않습니다. 주제에 업데이트가 발생하면 유지 관리가 복잡해지므로 별도의 Git 저장소로 관리해야 합니다.&lt;/p&gt;
&lt;h2 id=&#34;죄송합니다-번역할-중국어-텍스트가-제공되지-않았습니다-텍스트를-제공해-주시면-번역해-드리겠습니다&#34;&gt;죄송합니다, 번역할 중국어 텍스트가 제공되지 않았습니다. 텍스트를 제공해 주시면 번역해 드리겠습니다.
&lt;/h2&gt;&lt;p&gt;앞선 모듈화 기반 개념에 대한 이해가 있으면 사용자 정의 테마를 이해하는 것은 훨씬 쉬워집니다. &lt;code&gt;hugo&lt;/code&gt; 현재의 테마 역시 여러 개의 다른 모듈로 조립된 것이며, 원하는 모듈을 찾아서 해당 템플릿 파일을 수정하면 됩니다.&lt;/p&gt;
&lt;p&gt;__INLINE_CODE_0__공식 문서에서 발췌:&lt;/p&gt;
&lt;p&gt;Using this method, there won&amp;rsquo;t be any file under &lt;code&gt;themes&lt;/code&gt; directory. In order to modify the theme, you will have to copy the file you want to modify to the same directory under &lt;code&gt;layouts&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;For example, in order to modify the &lt;code&gt;themes/hugo-theme-stack/layouts/partials/head/custom.html&lt;/code&gt; file, you will have to copy it to &lt;code&gt;layouts/partials/head/custom.html&lt;/code&gt; and modify it there (copy the code from theme&amp;rsquo;s repository). The same applies to &lt;code&gt;assets&lt;/code&gt; and &lt;code&gt;static&lt;/code&gt; directories。&lt;/p&gt;
&lt;h2 id=&#34;템플릿-파일을-어떻게-찾을-수-있나요&#34;&gt;템플릿 파일을 어떻게 찾을 수 있나요?
&lt;/h2&gt;&lt;h3 id=&#34;정통적-관점&#34;&gt;정통적 관점
&lt;/h3&gt;&lt;p&gt;테마 소스 파일을 살펴보며 디자인 의도를 파악하고, 해당 템플릿 파일을 찾아 수정하면 됩니다&lt;/p&gt;
&lt;h3 id=&#34;거친-사고방식&#34;&gt;거친 사고방식
&lt;/h3&gt;&lt;p&gt;저는 프론트엔드 코드를 잘 알지 못해서 때로는 직접 브라우저에서 해당 페이지를 열어 수정할 부분을 찾고, &lt;code&gt;审查元素&lt;/code&gt;BOLD_2&lt;code&gt;css name&lt;/code&gt;을 사용하여 테마 소스 코드 내에서 검색하여 해당 파일을 찾아 사이트 디렉토리에 복사한 후 수정하는 방식으로 작업합니다&lt;/p&gt;
&lt;h2 id=&#34;작은-팁&#34;&gt;작은 팁
&lt;/h2&gt;&lt;p&gt;기본적으로 제공되는 스타일 사용자 정의 파일을 활용하여, 수정이 필요한 부분을 여러 파일로 분할하고 &lt;strong&gt;INLINE_CODE_0&lt;/strong&gt; 파일을 통해 다른 파일들을 불러와 스타일 파일을 더 효과적으로 관리할 수 있습니다&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.ttf248.life/p/hugo-module-custom-theme-ideas/image.png&#34;
	width=&#34;141&#34;
	height=&#34;375&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;alt text&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;37&#34;
		data-flex-basis=&#34;90px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;수정-내용-요약-6시간&#34;&gt;수정 내용 요약 (6시간)
&lt;/h2&gt;&lt;p&gt;지금은 __INLINE_CODE_0__编码的元年，详细的内容，这里就不详细贴出来了，只是简单的列举一下，本站点的一些修改内容，比如调整复制按钮的样式，重新设置代码的块的样式，&lt;strong&gt;INLINE_CODE_1&lt;/strong&gt; 모두 쉽게 처리할 수 있습니다&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;전체: 전체 텍스트 스타일은 이전 __INLINE_CODE_0__BOLD_2&lt;code&gt;info cn&lt;/code&gt; 표시 스타일을 유지하며, 중국어 사용자를 고려함&lt;/li&gt;
&lt;li&gt;홈페이지 오른쪽 네비게이션에 마우스 인터랙션 애니메이션 추가&lt;/li&gt;
&lt;li&gt;처음 페이지: 논문에 요약 미리 보기 추가 (시간이 많이 소요되어 편리한 방법을 사용함)&lt;/li&gt;
&lt;li&gt;스크롤바: 스크롤바 스타일을 개선했습니다&lt;/li&gt;
&lt;li&gt;코드 블록에 &lt;strong&gt;INLINE_CODE_0&lt;/strong&gt; 코드 하이라이트 플러그인이 도입되어 코드 블록 스타일이 개선되었습니다&lt;/li&gt;
&lt;li&gt;일부 내용은 재게시되었으며, 원저자 정보 및 원본 링크가 추가되었습니다&lt;/li&gt;
&lt;li&gt;아카이브 페이지: 상단의 분류 이미지, 테마 자체 색상 오버레이 제거 후 원본 이미지 표시&lt;/li&gt;
&lt;li&gt;분류별 연도별 통계 표시 패널이 추가되었습니다&lt;/li&gt;
&lt;li&gt;기록 페이지: 두 열 레이아웃&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;스크립트를 통해 사용자 정의 특수 변수를 활용하여 요약 미리보기를 구현합니다&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;때로는 코드 재사용성이 너무 높아 문제인 경우도 있는데, 한 부분을 수정하면 다른 부분에도 영향을 미칠 수 있으므로 테마를 수정할 때는 기존 로직을 훼손하지 않도록 주의해야 합니다&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;댓글-영역&#34;&gt;댓글 영역
&lt;/h3&gt;&lt;p&gt;이 친구의 수정은 더 완벽해졌어: &lt;a class=&#34;link&#34; href=&#34;https://blog.reincarnatey.net/2024/0719-better-waline/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.reincarnatey.net/2024/0719-better-waline/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;파업_11&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;추천, 홈페이지, 이메일 연락처. 본 사이트는 댓글 기능을 제공하지 않습니다.&lt;/p&gt;
&lt;/blockquote&gt;</description>
        </item>
        
    </channel>
</rss>
