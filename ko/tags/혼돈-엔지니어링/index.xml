<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>혼돈 엔지니어링 on 향숙의 수첩</title>
        <link>https://blog.ttf248.life/ko/tags/%ED%98%BC%EB%8F%88-%EC%97%94%EC%A7%80%EB%8B%88%EC%96%B4%EB%A7%81/</link>
        <description>Recent content in 혼돈 엔지니어링 on 향숙의 수첩</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ko</language>
        <lastBuildDate>Wed, 28 May 2025 09:47:38 +0800</lastBuildDate><atom:link href="https://blog.ttf248.life/ko/tags/%ED%98%BC%EB%8F%88-%EC%97%94%EC%A7%80%EB%8B%88%EC%96%B4%EB%A7%81/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>혼돈 엔지니어링</title>
        <link>https://blog.ttf248.life/ko/p/chaos-engineering/</link>
        <pubDate>Wed, 28 Jul 2021 14:35:07 +0800</pubDate>
        
        <guid>https://blog.ttf248.life/ko/p/chaos-engineering/</guid>
        <description>&lt;p&gt;시스템 안정성 테스트를 위한 시스템 파괴 모드&lt;/p&gt;
&lt;h2 id=&#34;본문&#34;&gt;본문
&lt;/h2&gt;&lt;p&gt;국내 인터넷 업계는 늘 새로운 것을 만들어내려고 하고, 가끔 용어를 들어도 뭔지 떠올리기 어려운 경우가 많다&lt;/p&gt;
&lt;p&gt;부분적으로 기사를 봤는데, 혼돈 엔지니어링 초기 정의는 비교적 받아들이기 쉬웠다&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;혼돈 엔지니어링의 초기 탐색은 사실 업계에서 꾸준히 있어 왔으며, 장애 테스트나 재해 훈련과 같은 형태로 존재했습니다. 하지만 마이크로서비스 아키텍처의 발전과 분산 시스템의 규모가 커짐에 따라 혼돈 엔지니어링이 부상하기 시작하며 점점 더 중요해지고 있습니다. 넷플릭스가 혼돈 엔지니어링 개념을 공식적으로 제안하면서 관련 이론도 빠르게 풍부해졌고, 넷플릭스의 실증은 안정성 분야에서 혼돈 엔지니어링이 갖는 엄청난 의미를 증명했습니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;참조-링크&#34;&gt;참조 링크
&lt;/h2&gt;&lt;p&gt;죄송합니다, 번역할 중국어 텍스트가 제공되지 않았습니다. 텍스트를 제공해 주시면 번역해 드리겠습니다.&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
