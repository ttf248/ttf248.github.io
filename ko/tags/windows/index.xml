<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Windows on 향숙의 수첩</title>
        <link>https://ttf248.life/ko/tags/windows/</link>
        <description>Recent content in Windows on 향숙의 수첩</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ko</language>
        <lastBuildDate>Sun, 25 May 2025 14:10:37 +0800</lastBuildDate><atom:link href="https://ttf248.life/ko/tags/windows/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>파워셸 7과 지속 가능한 설정 명령줄 예측 보기</title>
        <link>https://ttf248.life/ko/p/powershell-7-persisting-settings-command-line-prediction-view/</link>
        <pubDate>Fri, 07 Feb 2025 22:19:12 +0800</pubDate>
        
        <guid>https://ttf248.life/ko/p/powershell-7-persisting-settings-command-line-prediction-view/</guid>
        <description>&lt;p&gt;Linux에서 zsh를 사용하다가, 이틀 전 블로그를 쓰다가 PowerShell 7도 영구적인 설정으로 명령줄 예측 보기를 지원하는 것을 발견해서 한번 시켜봤는데, 꽤 괜찮게 잘 된다&lt;/p&gt;
&lt;p&gt;어떻게든 뭔가를 했는데, 이 기능이 켜진 것 같아. 그냥 있는 거다.&lt;/p&gt;
&lt;p&gt;오늘날 다양화된 운영체제 환경에서 시스템 관리자와 개발자들은 플랫폼 간 호환성, 효율성 및 강력한 기능을 갖춘 도구를 찾아 시스템 관리 및 자동화 작업에 대한 요구를 충족하고자 합니다. PowerShell 7은 바로 이러한 주목을 받는 도구 중 하나로, 강력한 스크립팅 기능뿐만 아니라 Windows, Linux 및 macOS와 같은 다양한 운영체제에서 실행될 수 있어 사용자에게 전례 없는 편의성을 제공합니다.&lt;/p&gt;
&lt;h2 id=&#34;파워셸-7-강력한-크로스-플랫폼-도구&#34;&gt;파워셸 7: 강력한 크로스 플랫폼 도구
&lt;/h2&gt;&lt;h3 id=&#34;플랫폼-간-호환성&#34;&gt;플랫폼 간 호환성
&lt;/h3&gt;&lt;p&gt;파워셸 7은 플랫폼의 제약을 깨뜨려 Windows 시스템에서 기업용 서버 관리를 하든, Linux 환경에서 시스템 운영을 하든, macOS에서 일상적인 개발 작업을 하든, 사용자는 통일된 파워셸 7 도구를 사용할 수 있습니다. 이는 업무 효율성을 크게 향상시키고 플랫폼 차이로 인한 학습 비용과 작업 복잡성을 줄입니다.&lt;/p&gt;
&lt;h3 id=&#34;강력한-기능&#34;&gt;강력한 기능
&lt;/h3&gt;&lt;p&gt;스크립트 작성 능력이 뛰어나며 객체 지향 프로그래밍, 함수, 모듈과 같은 고급 프로그래밍 기능을 지원합니다. PowerShell 7을 통해 사용자는 파일 시스템을 쉽게 조작하여 파일 및 폴더를 생성, 삭제, 복사, 이동할 수 있습니다. 또한 레지스트리를 액세스하고 수정하여 시스템 구성을 심층적으로 조정할 수 있으며 프로세스와 서비스를 관리하여 시스템 실행 상태를 효과적으로 모니터링하고 제어할 수 있습니다. 게다가 PowerShell 7은 Active Directory에서 사용자 및 권한 관리를 포함하여 Windows 및 비 Windows 기술과 상호 작용할 수 있으며 Azure 클라우드 플랫폼에서 리소스 할당 및 관리를 수행할 수 있습니다.&lt;/p&gt;
&lt;h3 id=&#34;오픈소스-생태계&#34;&gt;오픈소스 생태계
&lt;/h3&gt;&lt;p&gt;PowerShell 7은 오픈 소스이며, 이러한 특징으로 인해 전 세계 개발자와 애호가들이 적극적으로 개발과 개선에 참여할 수 있습니다. 많은 오픈 소스 모듈과 도구가 끊임없이 등장하여 PowerShell 7의 기능과 적용 분야를 풍부하게 합니다. 사용자는 자신의 필요에 따라 오픈 소스 커뮤니티에서 적합한 모듈을 찾아 PowerShell 7 기능을 확장하거나, 자신의 코드를 기여하여 전체 커뮤니티 발전에 기여할 수 있습니다.&lt;/p&gt;
&lt;h3 id=&#34;호환성-및-안정성&#34;&gt;호환성 및 안정성
&lt;/h3&gt;&lt;p&gt;PowerShell 7은 이전 버전의 PowerShell과의 호환성을 유지하면서도 많은 새로운 기능과 개선 사항을 도입했습니다. 이러한 개선 사항은 성능 향상뿐만 아니라 안정성도 강화하여 사용자가 다양한 작업을 더욱 원활하게 완료하고 소프트웨어 오류로 인한 작업 중단을 줄일 수 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;명령줄-예측-뷰-열기&#34;&gt;명령줄 예측 뷰 열기
&lt;/h2&gt;&lt;p&gt;파워셸 7의 다양한 유용한 기능 중, &lt;code&gt;Set-PSReadLineOption -PredictionViewStyle ListView&lt;/code&gt; 명령은 사용자 명령줄 입력 경험을 향상시키는 실용적인 도구입니다&lt;/p&gt;
&lt;p&gt;명령을 활성화하지 않아도 자동 완성 기능을 사용할 수 있지만, 이는 현재 줄 내에서의 자동 완성에만 해당됩니다. 명령을 활성화하면 예측 뷰가 표시되고, 가능한 모든 자동 완성 옵션이 목록 형태로 나타납니다. 사용자는 위아래 화살표 키를 사용하여 필요한 옵션을 선택할 수 있으며, 이를 통해 명령 입력의 정확성과 효율성을 높일 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/powershell-7-persisting-settings-command-line-prediction-view/20250207222546.png&#34;
	width=&#34;814&#34;
	height=&#34;205&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;powershell7&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;397&#34;
		data-flex-basis=&#34;952px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;명령을-지속적으로-적용하는-방법&#34;&gt;명령을 지속적으로 적용하는 방법
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Set-PSReadLineOption -PredictionViewStyle ListView&lt;/code&gt; 명령어를 매번 PowerShell을 시작할 때 적용되도록 하려면, PowerShell 프로필 파일에 추가할 수 있습니다. PowerShell 프로필 파일은 PowerShell이 시작될 때 자동으로 실행되는 특수한 스크립트입니다.&lt;/p&gt;
&lt;h3 id=&#34;설정-파일-경로-확인&#34;&gt;설정 파일 경로 확인
&lt;/h3&gt;&lt;p&gt;파워셸에서 우리는 &lt;code&gt;$PROFILE&lt;/code&gt; 변수를 사용하여 구성 파일의 경로를 확인할 수 있습니다. 해당 경로에 파일이 없으면 사용자가 직접 생성할 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;echo $PROFILE
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;설정-파일을-엽니다&#34;&gt;설정 파일을 엽니다
&lt;/h3&gt;&lt;p&gt;기능이 강력한 메모장++나 가벼운 Visual Studio Code와 같은 텍스트 편집기를 사용하여 &lt;code&gt;$PROFILE&lt;/code&gt; 변수를 통해 얻은 구성 파일 경로에 해당하는 파일을 엽니다&lt;/p&gt;
&lt;h3 id=&#34;추가-명령&#34;&gt;추가 명령
&lt;/h3&gt;&lt;p&gt;열려 있는 설정 파일에 &lt;code&gt;Set-PSReadLineOption -PredictionViewStyle ListView&lt;/code&gt; 명령을 추가합니다. 명령이 정확하게 작성되었는지 확인하여 설정 파일이 실행될 때 제대로 적용되도록 합니다.&lt;/p&gt;
&lt;h3 id=&#34;구성-파일-저장&#34;&gt;구성 파일 저장
&lt;/h3&gt;&lt;p&gt;명령이 추가된 후에는 구성 파일을 저장하고 텍스트 편집기를 닫습니다. 이제 구성 파일에는 PowerShell을 시작할 때마다 실행하려는 명령이 포함되어 있습니다.&lt;/p&gt;
&lt;h3 id=&#34;검증-설정&#34;&gt;검증 설정
&lt;/h3&gt;&lt;p&gt;현재 PowerShell 창을 닫은 다음 PowerShell을 다시 시작합니다. 새로 시작된 PowerShell에서 명령어를 입력할 때, 명령줄 입력 예측 보기 스타일이 목록 보기 형태로 표시되어야 하는데, 이는 우리의 설정이 성공적으로 적용되었다는 것을 의미합니다.&lt;/p&gt;
&lt;p&gt;위 단계를 통해 우리는 PowerShell 7의 강력한 기능과 특징을 깊이 있게 이해했을 뿐만 아니라, 명령줄 입력 예측 보기 스타일을 설정하여 작업 경험을 향상시키는 방법과 이러한 설정을 지속적으로 유지하는 방법을 익혔습니다. 이 지식이 PowerShell 7 사용 과정에서 더욱 능숙하게, 그리고 효율적으로 다양한 시스템 관리 및 자동화 작업을 수행하는 데 도움이 되기를 바랍니다.&lt;/p&gt;
&lt;h2 id=&#34;참고-자료&#34;&gt;참고 자료
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/PowerShell/PowerShell/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/PowerShell/PowerShell/releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.v2ex.com/t/911909&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.v2ex.com/t/911909&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>데스크탑을 2.5G 네트워크 카드로 업그레이드하여 로컬 영역 네트워크 연결 속도를 높입니다</title>
        <link>https://ttf248.life/ko/p/desktop-upgrade-to-25g-network-card-accelerate-lan-interconnection/</link>
        <pubDate>Fri, 10 Jan 2025 00:37:52 +0800</pubDate>
        
        <guid>https://ttf248.life/ko/p/desktop-upgrade-to-25g-network-card-accelerate-lan-interconnection/</guid>
        <description>&lt;p&gt;데스크톱 하드웨어 연달아 출시, 앞선 글에서 PCIE 어댑터에 대해 언급했는데, 구형 SSD는 어떻게 됐을까요? 당연히 버려진 건 아니죠. 고장난 것도 아니고, 분해해서 1년 전 구매한 &lt;code&gt;메카니저 크리에이터 미니-3765H&lt;/code&gt;에 설치했습니다.&lt;/p&gt;
&lt;p&gt;새 장비, 하드웨어 사양은 여전히 훌륭합니다. 2.5G 이중 네트워크 포트, PCIE4.0, WiFi6.&lt;/p&gt;
&lt;p&gt;최근 이사한 집에는 개별 라우터가 없어 네트워크 연결이 모두 무선으로 되어 있습니다. 아수스 메인보드 데스크탑의 무선 카드 성능이 좋지 않거나, 라우터의 무선 접속이나 로컬 네트워크 간 업로드 속도 문제일 수도 있는데, 이로 인해 기기 간 속도가 빠르지 않습니다. 새로 2.5G 네트워크 카드를 구매하여 데스크탑에 설치했습니다.&lt;/p&gt;
&lt;p&gt;여기까지, 메인보드의 슬롯이 모두 채워졌습니다: 그래픽 카드, 무선 네트워크 카드, 2.5G 네트워크 카드, SSD PCIE 어댑터&lt;/p&gt;
&lt;h2 id=&#34;네트워크-설명&#34;&gt;네트워크 설명
&lt;/h2&gt;&lt;p&gt;두 대의 기기는 여전히 원래 무선 네트워크 어댑터를 통해 인터넷에 연결되지만, 두 기기 사이는 직접 네트워크 케이블로 연결되어 있으며 양쪽 모두 2.5G 네트워크 어댑터입니다. 두 기기를 네트워크 케이블로 직접 연결하는 방법은 자세히 설명하지 않겠습니다. 온라인에 많은 튜토리얼이 있습니다. 방화벽을 열어두는 것을 잊지 마세요. 원하는 한 대를 게이트웨이로 선택하면 됩니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph TD;
    A[机器1&amp;lt;br&amp;gt;IP: 192.168.4.1&amp;lt;br&amp;gt;子网掩码: 255.255.255.0&amp;lt;br&amp;gt;默认网关: - &amp;lt;br&amp;gt;自动获取DNS] --&amp;gt;|网线直连（2.5G）| B[机器2&amp;lt;br&amp;gt;IP: 192.168.4.2&amp;lt;br&amp;gt;子网掩码: 255.255.255.0&amp;lt;br&amp;gt;默认网关: 192.168.4.1&amp;lt;br&amp;gt;自动获取DNS];
    A --&amp;gt;|无线网卡| Internet;
    B --&amp;gt;|无线网卡| Internet;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;두-네트워크-구간-속도-측정&#34;&gt;두 네트워크 구간 속도 측정
&lt;/h2&gt;&lt;h3 id=&#34;라우터-로컬-네트워크&#34;&gt;라우터 로컬 네트워크
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;C:\Users\core\Desktop\iperf-3.1.3-win32&amp;gt;iperf3.exe -c 192.168.3.237
Connecting to host 192.168.3.237, port 5201
[  4] local 192.168.3.122 port 1656 connected to 192.168.3.237 port 5201
[ ID] Interval           Transfer     Bandwidth
[  4]   0.00-1.00   sec  9.17 MBytes  76.7 Mbits/sec
[  4]   1.00-2.00   sec  9.91 MBytes  83.2 Mbits/sec
[  4]   2.00-3.00   sec  8.74 MBytes  73.3 Mbits/sec
[  4]   3.00-4.00   sec  10.2 MBytes  85.2 Mbits/sec
[  4]   4.00-5.00   sec  9.23 MBytes  77.1 Mbits/sec
[  4]   5.00-6.00   sec  8.80 MBytes  73.9 Mbits/sec
[  4]   6.00-7.01   sec  8.00 MBytes  66.8 Mbits/sec
[  4]   7.01-8.00   sec  7.69 MBytes  64.9 Mbits/sec
[  4]   8.00-9.01   sec  9.72 MBytes  81.1 Mbits/sec
[  4]   9.01-10.01  sec  7.63 MBytes  63.6 Mbits/sec
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bandwidth
[  4]   0.00-10.01  sec  89.0 MBytes  74.6 Mbits/sec                  sender
[  4]   0.00-10.01  sec  89.0 MBytes  74.6 Mbits/sec                  receiver

iperf Done.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;직결-로컬-영역-네트워크&#34;&gt;직결 로컬 영역 네트워크
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;C:\Users\core\Desktop\iperf-3.1.3-win32&amp;gt;iperf3.exe -c 192.168.4.1
Connecting to host 192.168.4.1, port 5201
[  4] local 192.168.4.2 port 1524 connected to 192.168.4.1 port 5201
[ ID] Interval           Transfer     Bandwidth
[  4]   0.00-1.01   sec   178 MBytes  1.48 Gbits/sec
[  4]   1.01-2.00   sec   204 MBytes  1.72 Gbits/sec
[  4]   2.00-3.00   sec   214 MBytes  1.80 Gbits/sec
[  4]   3.00-4.00   sec   229 MBytes  1.92 Gbits/sec
[  4]   4.00-5.00   sec   202 MBytes  1.69 Gbits/sec
[  4]   5.00-6.00   sec   213 MBytes  1.79 Gbits/sec
[  4]   6.00-7.00   sec   230 MBytes  1.93 Gbits/sec
[  4]   7.00-8.00   sec   192 MBytes  1.61 Gbits/sec
[  4]   8.00-9.00   sec   220 MBytes  1.84 Gbits/sec
[  4]   9.00-10.00  sec   230 MBytes  1.93 Gbits/sec
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bandwidth
[  4]   0.00-10.00  sec  2.06 GBytes  1.77 Gbits/sec                  sender
[  4]   0.00-10.00  sec  2.06 GBytes  1.77 Gbits/sec                  receiver

iperf Done.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;참고-자료&#34;&gt;참고 자료
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Hugo에 mermaid 지원 추가&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>華碩 마더보드 Z490 설치 디스크가 너무 많아 가끔씩 디스크 인식에 실패함</title>
        <link>https://ttf248.life/ko/p/asus-motherboard-z490-too-many-disks-intermittent-disk-recognition/</link>
        <pubDate>Fri, 10 Jan 2025 00:08:51 +0800</pubDate>
        
        <guid>https://ttf248.life/ko/p/asus-motherboard-z490-too-many-disks-intermittent-disk-recognition/</guid>
        <description>&lt;p&gt;바로 위 내용에 이어, 갑자기 무선 네트워크 카드가 인식되지 않는 문제가 발생했는데, 파티션을 재구성하기 전에 인터넷에서 다른 해결책들을 찾아봤습니다. 예를 들어 메인보드 배터리를 제거하거나 전원을 15분 동안 끊는 방법, 최신 버전의 BOIS 드라이버로 업그레이드하는 방법 등이 있었지만 모두 문제였습니다.&lt;/p&gt;
&lt;p&gt;처리할 일이 더 있다고 생각하며 제한된 네트워크로 전환하고, 거실에서 인터넷 랜선을 방으로 끌어왔는데, 이 순간 또 문제가 발생했다. 유선 네트워크도 인식되지 않는다. 큰 결단을 내리고 시스템을 재설치했더니 가이드 파티션이 손상되었다. 계속해서 문제가 발생하지 않았다면 이렇게까지 고생하지 않았을 텐데. ASUS의 디스크 충돌은 일시적인 문제이며, 시스템 재부팅 시 불안정성을 유발한다.&lt;/p&gt;
&lt;p&gt;지난주 데스크탑에 새로운 디스크를 추가했는데, 장강메모리의 2TB SSD이고 M.2 인터페이스입니다. 그리고 어제 전원을 껐을 때까지 재부팅이 되지 않았습니다.&lt;/p&gt;
&lt;p&gt;디스크 전체 정보&lt;/p&gt;
&lt;h2 id=&#34;시스템-재설치&#34;&gt;시스템 재설치
&lt;/h2&gt;&lt;p&gt;시간을 계산해 보니 2년이나 시스템을 다시 설치하지 않았고, C 드라이브는 이미 공간이 부족하다. 윈도우즈의 오래된 문제로, 일상적인 각종 소프트웨어도 C 드라이브에 뭔가 저장하는 것을 좋아한다. 그래서 시스템을 다시 설치하기로 했다. 시스템 재설치 후 네트워크 카드 문제는 정상적으로 해결되었고, 다음 날에는 일상적인 개발 환경을 복원했다. 시스템 백업을 준비하던 중 새로운 문제가 발생했는데, 시스템 재부팅 후에 부트 파티션이 사라졌다.&lt;/p&gt;
&lt;p&gt;이전 기사의 단계를 따라 부트 파티션을 재건했지만, 안정적이지 않습니다. 재부팅 후 부트 파티션이 로드되지 않을 가능성이 있으며, 케이스를 건드리는 것을 의심하기 시작했을 때 하드 드라이브 선이 느슨해졌지만 몇 번 확인해도 문제는 없습니다.&lt;/p&gt;
&lt;h2 id=&#34;기억-회복&#34;&gt;기억 회복
&lt;/h2&gt;&lt;p&gt;몇 년 전 이 기계에 한 번 SSD를 추가한 적이 있는데, 그때는 새로운 PCIE 컨버터(그래픽 카드 인터페이스에 연결)를 구입해서 직접 메인보드에 설치하지 않았습니다. 이번에는 바로 메인보드에 설치했는데, 아마 메인보드 문제일 수도 있습니다.&lt;/p&gt;
&lt;p&gt;고체 변환기&lt;/p&gt;
&lt;h2 id=&#34;메인보드-설명서&#34;&gt;메인보드 설명서
&lt;/h2&gt;&lt;p&gt;메인보드 설명서에 문제가 있는데, 표시된 SATA 포트 위치와 실제 위치가 달라서 디스크가 너무 많아 포트에 모두 장착되어 있고, 기존 SSD들은 모두 SATA 인터페이스를 사용하고 있습니다. 메인보드 설명서에 따르면 포트 간 충돌이 존재하는데, 실제로 테스트해 보니 이 충돌은 불안정하게 발생하며, 발생하면 해당 디스크를 로드할 수 없게 됩니다. 마침 이 디스크가 시스템 디스크이고 부팅도 해당 디스크에 있기 때문에 부팅 실패가 발생합니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/asus-motherboard-z490-too-many-disks-intermittent-disk-recognition/20250110002401.png&#34;
	width=&#34;807&#34;
	height=&#34;847&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Z490&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;95&#34;
		data-flex-basis=&#34;228px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;해결책&#34;&gt;해결책
&lt;/h2&gt;&lt;p&gt;PCIE 어댑터에 SSD를 다시 장착하니, 메인보드의 SATA 포트와의 충돌이 사라지고 시스템이 정상적으로 부팅되었습니다&lt;/p&gt;</description>
        </item>
        <item>
        <title>ESP 파티션, GPT 파티션 테이블과 윈도우 운영 체제의 협력 원리 탐구</title>
        <link>https://ttf248.life/ko/p/exploring-esp-gpt-and-windows-cooperation/</link>
        <pubDate>Thu, 09 Jan 2025 23:58:20 +0800</pubDate>
        
        <guid>https://ttf248.life/ko/p/exploring-esp-gpt-and-windows-cooperation/</guid>
        <description>&lt;p&gt;어제 퇴근하고 집에 와서 늘 하던 대로 데스크탑을 켰는데, 시스템은 정상적으로 시작되었지만 무선 네트워크 카드를 로드할 수 없었습니다. 카드 연결이 풀렸다고 생각해서 분해 후 무선 네트워크 카드를 다시 장착했는데, 문제가 더 커져서 시스템이 아예 부팅되지 않고 부트 로더가 실패했습니다.&lt;/p&gt;
&lt;p&gt;오래간만이라 데스크톱을 만지작거린 터라 파티션 부팅이 좀 낯설다. DisGenius로 빈 파티션을 다시 분할하고(보통 디스크 전방에 분할한다), ESP 파티션으로 할당하는데(기본적으로 300M), PE 시스템에서 부트 설정을 재건하면 된다. 관련 자료는 인터넷에서 찾아볼 수 있다.&lt;/p&gt;
&lt;p&gt;새 ESP 파티션 생성&lt;/p&gt;
&lt;p&gt;MSR 파티션을 제거할 수 있습니다&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;컴퓨터 저장 공간의 세계에서 ESP 파티션, GPT 파티션 테이블, 그리고 Windows 운영체제는 밀접하게 연결되어 있으며, 각자 고유하고 중요한 역할을 수행하며 시스템의 안정적인 작동과 효율적인 관리를 함께 뒷받침합니다. 하지만 이들을 자세히 알아보기 전에, 컴퓨터 파티션 역사 속 “선배”라고 할 수 있는 MBR 파티션 테이블 형식을 언급하지 않을 수 없는데, 이는 후대의 기술들과 서로 상호 반영되어 기술 진화의 맥락을 더욱 돋보이게 합니다. 오늘 우리는 이러한 요소들의 내재적인 연관성과 정교함에 대해 자세히 분석해 보겠습니다.&lt;/p&gt;
&lt;h2 id=&#34;일반적으로-mbr-파티션-테이블--기존-하드-디스크-파티션의-기초&#34;&gt;일반적으로 MBR 파티션 테이블 — 기존 하드 디스크 파티션의 “기초”
&lt;/h2&gt;&lt;p&gt;MBR은 주로 주 부트 레코드(Master Boot Record)의 약자로, 개인용 컴퓨터 탄생 초기부터 존재하며 수십 년간 하드 디스크 파티션 영역을 지배해 왔습니다&lt;/p&gt;
&lt;h3 id=&#34;기본-구조&#34;&gt;기본 구조
&lt;/h3&gt;&lt;p&gt;이것은 하드 디스크의 첫 번째 섹터, 즉 0번 섹터에 위치하며 512바이트 공간을 차지합니다. 이 512바이트는 주로 세 부분으로 나뉘는데, 첫째는 부트 로더 코드이며 컴퓨터가 시작될 때 운영 체제의 부트 로더를 로드하는 역할을 하며 일반적으로 446바이트입니다. 둘째는 디스크 파티션 테이블로 64바이트를 차지하며 최대 4개의 주 파티션 정보를 정의할 수 있습니다. 각 파티션 설명은 16바이트를 차지하며 파티션의 시작 헤드, 섹터, 실린더와 파티션 유형, 크기와 같은 중요한 매개변수를 기록합니다. 마지막 2바이트는 MBR 종료 플래그 &amp;ldquo;55 AA&amp;quot;이며 이 섹터를 유효한 MBR로 식별하는 데 사용됩니다.&lt;/p&gt;
&lt;h3 id=&#34;역사적-공적과-한계&#34;&gt;역사적 공적과 한계
&lt;/h3&gt;&lt;p&gt;초기에 MBR 파티션 테이블은 개인용 컴퓨터의 비교적 간단한 저장 요구 사항을 충분히 충족했습니다. 운영 체제가 하드 디스크 파티션을 원활하게 인식하고 데이터를 순서대로 저장하고 읽을 수 있도록 했습니다. 그러나 시대가 발전함에 따라 그 한계가 점점 더 분명해지고 있습니다. 한 가지는 64바이트의 파티션 테이블 공간으로 인해 최대 4개의 주 파티션만 분할할 수 있으며, 더 많은 파티션을 만들려면 다소 복잡한 확장 파티션 및 논리 파티션과 같은 방법을 사용해야 하므로 디스크 관리에 불편을 초래합니다. 다른 한편으로는 최대 2TB의 하드 드라이브 용량만 지원하므로 현재 수 TB에서 수십 TB에 이르는 대용량 하드 드라이브 앞에서 힘이 부족하며, 이는 저장 기술의 추가적인 발전을 제약하는 병목 현상이 되고 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;두-번째-esp-파티션--시스템의-보이지-않는-부팅-키&#34;&gt;두 번째, ESP 파티션 — 시스템의 “보이지 않는 부팅 키”
&lt;/h2&gt;&lt;p&gt;ESP는 EFI System Partition의 약자로, UEFI(통합 확장 펌웨어 인터페이스) 표준을 기반으로 하는 컴퓨터에 필수적인 특수 파티션입니다&lt;/p&gt;
&lt;h3 id=&#34;기능-특징&#34;&gt;기능 특징
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;부트 시퀀스&lt;/strong&gt;: 컴퓨터가 전원을 켜면 UEFI 펌웨어는 먼저 하드 디스크에서 ESP 파티션을 찾아 그 안에 저장된 부트 로더(예: Windows Boot Manager)를 읽어 운영체제를 시작합니다. 마치 정확한 열쇠처럼 시스템 부팅의 문을 열어주는 것과 같습니다. 없으면 시스템은 전원이 들어올 때 혼란에 빠져 어디로 가야 할지 모릅니다.&lt;/li&gt;
&lt;li&gt;저장 드라이버: ESP 파티션은 시스템 부팅 과정에서 필수적인 일부 드라이버를 저장하여 초기 부팅 단계에서 하드웨어 장치(하드 디스크 컨트롤러, 그래픽 카드 등)가 정상적으로 작동하도록 하고, 이후 운영체제의 원활한 인계를 위한 기반을 마련합니다&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;공간-요구사항-및-형식&#34;&gt;공간 요구사항 및 형식
&lt;/h3&gt;&lt;p&gt;일반적으로 ESP 파티션의 권장 크기는 100MB ~ 500MB 사이이며, 일반적으로 200MB 정도 할당하면 기본적인 요구 사항을 충족할 수 있습니다. 파일 시스템 형식은 반드시 FAT32여야 하며, 이는 UEFI 펌웨어만이 FAT32 형식을 통해 부트 파일을 읽어들일 수 있기 때문입니다. 이러한 방식이 호환성과 플랫폼 간 상호 운용성을 보장합니다.&lt;/p&gt;
&lt;h2 id=&#34;셋-gpt-파티션-테이블--하드-디스크의-스마트-관리자&#34;&gt;셋, GPT 파티션 테이블 — 하드 디스크의 “스마트 관리자”
&lt;/h2&gt;&lt;p&gt;GPT(가이드 파티션 테이블), 즉 전역적으로 고유한 식별자 파티션 테이블은 기존의 MBR 파티션 테이블을 대체하기 위해 개발된 새로운 파티셔닝 방식입니다&lt;/p&gt;
&lt;h3 id=&#34;장점-부각&#34;&gt;장점 부각
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;대용량 지원&lt;/strong&gt;: 오늘날 데이터 폭발의 시대에 대용량 하드 디스크가 끊임없이 등장하고 있습니다. GPT 파티션 테이블은 MBR의 2TB 용량 제한을 돌파하여 이론적으로 최대 9.4ZB(제타바이트, 1ZB = 1024 EB, 1EB = 1024 PB, 1PB = 1024 TB)의 초대형 저장 공간을 지원하며, 막대한 양의 데이터를 저장할 수 있는 가능성을 제공합니다.&lt;/li&gt;
&lt;li&gt;구분 영역 수 증가: MBR의 경우 최대 4개의 주 파티션만 분할할 수 있는 것과 달리, GPT는 최대 128개의 파티션을 생성할 수 있어 사용자 및 시스템 관리자에게 큰 유연성을 제공합니다. 여러 개의 시스템 파티션, 데이터 파티션 또는 특정 용도를 위한 파티션을 할당하든 자유롭게 활용할 수 있습니다.&lt;/li&gt;
&lt;li&gt;신뢰성이 높습니다: GPT 파티션 테이블은 중복 백업 메커니즘을 채택하여 하드 디스크 헤드와 테일 각각에 파티션 테이블 정보를 저장합니다. 한 곳의 파티션 테이블이 손상되면 시스템은 자동으로 다른 백업에서 복구하므로, 파티션 테이블 오류로 인한 데이터 손실 위험을 크게 줄여 데이터 보안을 보장합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;구조-분석&#34;&gt;구조 분석
&lt;/h3&gt;&lt;p&gt;GPT 파티션 테이블은 여러 부분으로 구성되어 있으며, 보호 MBR(전통적인 BIOS와의 호환성을 위해 보존된 MBR 구조의 일부이지만 실제 파티션 관리에 사용되지는 않음), GPT 헤더(파티션 테이블 버전, 파티션 수, 파티션 테이블 크기와 같은 GPT 파티션 테이블의 기본 정보를 저장), 그리고 파티션 항목 배열(각 파티션 항목은 파티션의 시작 섹터, 종료 섹터, 파티션 유형 GUID, 파티션 고유 식별자와 같은 중요한 정보를 상세히 기록)을 포함합니다. 이러한 구조들은 서로 협력하여 하드 디스크 공간을 정확하게 계획하고 관리합니다.&lt;/p&gt;
&lt;h2 id=&#34;네-알겠습니다-윈도우-운영체제--사용자의-디지털-상호작용-세상&#34;&gt;네, 알겠습니다. 윈도우 운영체제 — 사용자의 “디지털 상호작용 세상”
&lt;/h2&gt;&lt;p&gt;윈도우는 전 세계적으로 널리 사용되는 운영체제로, 사람과 컴퓨터 하드웨어 간의 친근한 다리를 놓습니다&lt;/p&gt;
&lt;h3 id=&#34;esp-파티션과-gpt-파티션-테이블의-통합&#34;&gt;ESP 파티션과 GPT 파티션 테이블의 통합
&lt;/h3&gt;&lt;p&gt;UEFI 기반 Windows 시스템 설치 과정에서, 설치 프로그램은 자동으로 ESP 파티션을 생성하고 부트 파일을 배포합니다. 동시에 디스크는 GPT 파티션 테이블 형식으로 초기화되며, 시스템 예약 파티션(시스템 핵심 파일 저장 공간, 기존 BIOS 환경의 시스템 부트 파일 영역과 유사), Windows 시스템 파티션(시스템 핵심 파일이 설치되는 곳) 및 기타 사용자 정의 데이터 파티션 등이 구성됩니다. Windows 시스템은 GPT 파티션 테이블을 통해 각 파티션을 정확하게 식별하고 ESP 파티션을 통해 원활하게 부팅되며, 이 세 가지 요소는 매끄럽게 연결되어 사용자에게 쾌적한 부팅 및 사용 경험을 제공합니다.&lt;/p&gt;
&lt;h3 id=&#34;시스템-관리-및-최적화-기반&#34;&gt;시스템 관리 및 최적화 기반
&lt;/h3&gt;&lt;p&gt;Windows는 실행되는 동안 GPT 파티션 테이블의 장점을 최대한 활용하여 디스크 관리를 수행합니다. 예를 들어, 디스크 관리 도구에서 GPT 파티션을 쉽게 식별하고 사용자가 파티션을 생성, 삭제, 포맷하거나 파티션 크기를 조정하는 등 다양한 단계의 데이터 저장 요구 사항을 충족할 수 있습니다. 또한 시스템 업데이트, 소프트웨어 설치 등의 과정도 파티션 레이아웃과 밀접하게 관련되어 있으며, 합리적인 파티션 계획은 시스템 성능 및 안정성을 향상시키고 디스크 공간 부족이나 파티션 혼란으로 인해 발생하는 문제를 줄이는 데 도움이 됩니다.&lt;/p&gt;
&lt;h2 id=&#34;다섯째-실전-팁-유지-보수-및-문제-해결&#34;&gt;다섯째, 실전 팁: 유지 보수 및 문제 해결
&lt;/h2&gt;&lt;p&gt;이들의 밀접한 관계를 이해하면 일상적인 유지 보수와 문제 해결에 대한 절차가 생깁니다&lt;/p&gt;
&lt;h3 id=&#34;디스크-공간-관리&#34;&gt;디스크 공간 관리
&lt;/h3&gt;&lt;p&gt;ESP 파티션 공간을 정기적으로 확인하여 과도한 부팅 항목 관련 소프트웨어 설치로 인한 공간 부족으로 시스템 시작에 영향을 미치는 것을 방지합니다. GPT 파티션 하의 데이터 파티션에서는 합리적인 저장 공간 계획을 세우고, 불필요한 파일을 즉시 정리하여 단일 파티션이 가득 차서 시스템 운영에 영향을 미치지 않도록 합니다.&lt;/p&gt;
&lt;h3 id=&#34;문제-해결-시작&#34;&gt;문제 해결 시작
&lt;/h3&gt;&lt;p&gt;시스템 부팅에 실패한 경우, 먼저 ESP 파티션이 손상되었거나 파일이 누락되었는지 확인하십시오. UEFI 펌웨어에 내장된 부트 항목 복구 도구를 사용하거나 Windows 설치 미디어를 통해 복구 환경에 진입하여 ESP 파티션의 부트 파일을 재구성할 수 있습니다. GPT 파티션 테이블 오류가 의심되는 경우, 전문 디스크 도구(DiskGenius 등)를 사용하여 파티션 테이블 무결성을 확인하고 백업된 파티션 정보를 활용하여 파티션을 복구하십시오.&lt;/p&gt;
&lt;p&gt;ESP 파티션, GPT 파티션 테이블, 그리고 Windows 운영체제는 마치 정밀하게 협력하는 팀과 같이 각자의 전문성을 발휘하여 안정적이고 효율적인 컴퓨터 사용 환경을 구축합니다. 이들을 깊이 이해하면 시스템 설치 및 유지 보수 시 능숙하게 대처할 수 있을 뿐만 아니라 컴퓨터의 하위 실행 로직을 파악하고 디지털 세계를 자유롭게 탐험할 수 있습니다. 동시에 MBR 파티션 테이블의 흥망성쇠를 되돌아보면 기술 발전의 힘에 감탄하며, 이는 저장 기술이 끊임없이 전진하여 증가하는 데이터 저장 요구를 충족하도록 이끌고 있음을 깨닫게 됩니다.&lt;/p&gt;</description>
        </item>
        <item>
        <title>Windows에 내장된 디스크 정리 도구: 저장 공간</title>
        <link>https://ttf248.life/ko/p/windows-disk-cleanup-storage/</link>
        <pubDate>Mon, 06 Jan 2025 19:29:45 +0800</pubDate>
        
        <guid>https://ttf248.life/ko/p/windows-disk-cleanup-storage/</guid>
        <description>&lt;p&gt;어떤 버전부터인지는 정확히 기억나지 않지만, &lt;code&gt;Windows 11&lt;/code&gt;에서 디스크 정리 도구가 크게 개선되어 훨씬 더 스마트해졌습니다&lt;/p&gt;
&lt;p&gt;중요한 것은 공식 도구라는 점이며, 파일 삭제 오류가 없고, 광고도 없고, 팝업창도 없고, 백그라운드 프로세스도 없으며, 불필요한 기능이 전혀 없습니다&lt;/p&gt;
&lt;p&gt;Windows 11에서 설정-시스템-저장 공간-임시 파일로 이동하여 디스크 정리 도구를 열 수 있습니다&lt;/p&gt;
&lt;p&gt;저장 인터페이스&lt;/p&gt;
&lt;p&gt;일반 사용자는 &lt;code&gt;청소 제안&lt;/code&gt;을 선택하면 시스템에서 사용 상황에 따라 몇 가지 제안을 제공합니다&lt;/p&gt;
&lt;p&gt;개발자로서 저의 디스크에는 임시 파일이 많기 때문에 &lt;code&gt;임시 파일&lt;/code&gt;을 선택했습니다. 그 안에는 &lt;code&gt;Visual Studio&lt;/code&gt; 임시 파일, &lt;code&gt;Windows Update&lt;/code&gt; 임시 파일 등 다양한 임시 파일들이 포함되어 있습니다.&lt;/p&gt;
&lt;p&gt;임시 파일&lt;/p&gt;</description>
        </item>
        <item>
        <title>Windows 플랫폼에서 폴더 크기 빠르게 통계</title>
        <link>https://ttf248.life/ko/p/windows-platform-quick-folder-size-statistics/</link>
        <pubDate>Mon, 01 Aug 2022 19:54:18 +0800</pubDate>
        
        <guid>https://ttf248.life/ko/p/windows-platform-quick-folder-size-statistics/</guid>
        <description>&lt;p&gt;리눅스 플랫폼은 간단해서 &lt;code&gt;du -sh *&lt;/code&gt; 한 줄의 코드로 끝내 버릴 수 있다. 윈도우는 어떨까? 디스크가 많고, 파일을 정리하고 싶을 때, 파일이 많은 상황에서 시스템 내장 리소스 관리자는 폴더 크기를 통계적으로 계산하는 속도가 너무 느려서 포기하고 싶게 만든다.&lt;/p&gt;
&lt;h2 id=&#34;everything&#34;&gt;Everything
&lt;/h2&gt;&lt;p&gt;윈도우 플랫폼에서 개발하는 분이라면, 직접 사용해 보지 않더라도 친구에게 들어봤을 &lt;code&gt;Everything&lt;/code&gt;이라는 프로그램이 있을 겁니다. 검색 속도는 시스템 자체의 파일 탐색기보다 훨씬 빠릅니다. 시스템 수준에서 빠른 파일 인덱싱을 지원하는 만큼, 파일을 인덱스하고 동시에 파일 크기를 통계적으로 관리하는 유사한 도구를 찾을 수 있을 것입니다.&lt;/p&gt;
&lt;h2 id=&#34;wiztree&#34;&gt;WizTree
&lt;/h2&gt;&lt;p&gt;공식 웹사이트: &lt;a class=&#34;link&#34; href=&#34;https://www.diskanalyzer.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.diskanalyzer.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;일반 설치 모드나 그린 버전 압축 해제 후 실행&lt;/p&gt;
&lt;p&gt;속도가 빠르고, 데이터 표시 유형이 풍부하며, 왼쪽에 트리 형태의 모드와 오른쪽에 파일 유형이 있고, 물론 하단 막대에도 시각화된 표현 방식도 있습니다&lt;/p&gt;
&lt;h2 id=&#34;spacesniffer업데이트-2023년-이후-더-이상-업데이트되지-않습니다&#34;&gt;SpaceSniffer(업데이트 2023년 이후 더 이상 업데이트되지 않습니다.)
&lt;/h2&gt;&lt;p&gt;소프트웨어 공식 웹사이트: &lt;a class=&#34;link&#34; href=&#34;http://www.uderzo.it/main_products/space_sniffer/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.uderzo.it/main_products/space_sniffer/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;조작은 매우 간단합니다. 해당하는 디스크 문자를 선택하면 소프트웨어가 그래픽 방식으로 폴더 크기를 표시하는데, 크기가 클수록 이미지 내 해당 매트릭스도 커집니다. 나머지 조작은 직접 클릭해보면 알 수 있을 것이고, 조건 필터를 입력하여 파일을 지원합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;파일 크기 필터링&lt;/li&gt;
&lt;li&gt;파일 날짜 필터&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;기본 사용법&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;고급 사용법&lt;/p&gt;
&lt;h2 id=&#34;참고-자료&#34;&gt;참고 자료
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://moe.best/software/spacesniffer.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://moe.best/software/spacesniffer.html&lt;/a&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>Windows 플랫폼 편집을 위한 초대형 파일: EmEditor (텍스트 에디터)</title>
        <link>https://ttf248.life/ko/p/windows-platform-editing-large-files-emeditor-text-editor/</link>
        <pubDate>Sun, 31 Jul 2022 23:21:24 +0800</pubDate>
        
        <guid>https://ttf248.life/ko/p/windows-platform-editing-large-files-emeditor-text-editor/</guid>
        <description>&lt;p&gt;상하이 국안 데이터베이스 사건은 해커 커뮤니티에서 떠들썩하게 돌아다니고 있지만, 진실 여부는 알 수 없습니다. 2년 후에 다시 한번 살펴보겠습니다. 과거 경험에 따르면, 지역 소셜 엔지니어링 데이터베이스 자료가 업데이트되었는데, 17.9G라는 거대한 SQL 파일이 있었습니다. 일반적인 텍스트 편집기로는 미리 보기조차 어렵고 열기는 더더욱 불가능했습니다. 누리꾼과 대화하던 중 EmEditor라는 프로그램을 언급했습니다.&lt;/p&gt;
&lt;h2 id=&#34;본문&#34;&gt;본문
&lt;/h2&gt;&lt;p&gt;공식 웹사이트: &lt;a class=&#34;link&#34; href=&#34;https://www.emeditor.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.emeditor.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;주말에 시간 날 때 한번 해봤는데, 꽤 편리하네요. 디자인 자체가 큰 파일을 편집할 수 있게 되어 있고, 메모리가 충분하면 전체 파일이 메모리에 로드되어서 검색이나 편집 속도도 빠르고, 파일 분할 기능도 지원합니다.&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
