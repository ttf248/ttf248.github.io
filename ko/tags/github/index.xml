<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Github on 향숙의 수첩</title>
        <link>https://ttf248.life/ko/tags/github/</link>
        <description>Recent content in Github on 향숙의 수첩</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ko</language>
        <lastBuildDate>Wed, 28 May 2025 09:47:38 +0800</lastBuildDate><atom:link href="https://ttf248.life/ko/tags/github/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>GitHub 페이지 이스터에그: 여러 페이지 배포</title>
        <link>https://ttf248.life/ko/p/github-pages-easter-egg-deploy-multiple-sites/</link>
        <pubDate>Wed, 28 May 2025 02:55:54 +0800</pubDate>
        
        <guid>https://ttf248.life/ko/p/github-pages-easter-egg-deploy-multiple-sites/</guid>
        <description>&lt;p&gt;최근 생체 리듬이 좀 엉망이라 새벽 두시 넘게까지도 Github Pages 배포를 만지작거렸어&lt;/p&gt;
&lt;p&gt;밤늦게까지 일하고 밥을 먹으러 갔더니, 딱 먹고 나자 졸리고, 다 먹고 돌아오니 8시 반쯤 됐는데 너무 피곤해서 잠깐 눈을 붙이려다 잠이 들어버렸네요. 깨보니 이미 새벽 2시가 넘었어요.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;시작하기도 전에 사라진 분류: AI 학습회&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;망신당하다&#34;&gt;망신당하다
&lt;/h2&gt;&lt;p&gt;어제는 프론트엔드 일은 하지 말자고 했는데, 오늘은 프론트엔드가 아닌 UI/UX 경험을 개선해 봅시다&lt;/p&gt;
&lt;h2 id=&#34;프로젝트&#34;&gt;프로젝트
&lt;/h2&gt;&lt;p&gt;초청합니다, 우리의 오랜 친구 &lt;a class=&#34;link&#34; href=&#34;https://github.com/ttf248/ai-coding-demo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/ttf248/ai-coding-demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;맞아요, 바로 기존 자선주 프로젝트고요, 이 프로젝트에서 전체 구조를 재구성하고, 이후 AI 프로그래밍 관련 내용은 모두 이 프로젝트 아래로 둘 예정입니다&lt;/p&gt;
&lt;h2 id=&#34;여러-페이지-배포&#34;&gt;여러 페이지 배포
&lt;/h2&gt;&lt;p&gt;프로젝트가 &lt;a class=&#34;link&#34; href=&#34;https://cnb.cool/ttf248/ai-coding-demo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://cnb.cool/ttf248/ai-coding-demo&lt;/a&gt;에 호스팅되어 있는데, 널리 알려진 이유로 국내에서는 페이지를 게시할 수 없습니다. 따라서 해외 GitHub에 게시해야 합니다.&lt;/p&gt;
&lt;p&gt;블로그는 해외의 Github에 게시하는 것입니다. 아직 시도해보지는 않았지만, 여러 프로젝트 페이지를 발행하고, 현재 처리 중인 프로젝트는 전통적인 블로그 사이트가 아니라 문서가 많고 몇몇 정적 HTML 디자인 시안이 겹쳐져 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/github-pages-easter-egg-deploy-multiple-sites/20250528030230.png&#34;
	width=&#34;798&#34;
	height=&#34;530&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;pages&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;150&#34;
		data-flex-basis=&#34;361px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;맞아요, 이 페이지는 제가 처음 클릭했을 때 발견했는데, 여러 프로젝트의 페이지 배포가 블로그 게시물에 영향을 주지 않고, 블로그 도메인 아래 새로운 경로를 추가하는 방식이에요&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://ttf248.life/ai-coding-demo/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://ttf248.life/ai-coding-demo/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;여기 보니 완벽하다!&lt;/p&gt;
&lt;h2 id=&#34;ai-학습회&#34;&gt;AI 학습회
&lt;/h2&gt;&lt;p&gt;어제 새로 만든 분류인데, AI를 통해 컴퓨터 과목을 많이 배우려고 하는데, 예를 들어 알고리즘이나 LeetCode 문제 풀이 같은 것들이다&lt;/p&gt;
&lt;p&gt;매 학습 기록을 블로그에 게시하여 지식 기반을 구축합니다. 새로운 분류: AI 연구소&lt;/p&gt;
&lt;p&gt;지금으로서는, 다른 수업마다 새로운 프로젝트를 만들고 학습 노트는 모두 해당 프로젝트의 Readme.md 파일에 작성하는 것이 좋겠습니다&lt;/p&gt;</description>
        </item>
        <item>
        <title>Fork 저장소에 Pull Request 병합</title>
        <link>https://ttf248.life/ko/p/merge-pullrequest-to-fork-repository/</link>
        <pubDate>Wed, 07 May 2025 18:44:03 +0800</pubDate>
        
        <guid>https://ttf248.life/ko/p/merge-pullrequest-to-fork-repository/</guid>
        <description>&lt;p&gt;__INLINE_CODE_0__은 GitHub 프로필 통계 생성 도구로, 사용자가 자신의 GitHub 프로필에 다양한 통계 및 차트를 표시할 수 있도록 합니다. 사용자 요구사항에 맞춰 여러 가지 맞춤 설정 옵션을 제공합니다.&lt;/p&gt;
&lt;p&gt;저는 창고 관리를 프로젝트별로 그룹화하는 습관이 있는데, GitHub는 창고 그룹화를 지원하지 않으므로 여러 조직으로 분할해야 합니다. &lt;strong&gt;INLINE_CODE_0&lt;/strong&gt; 최신 브랜치는 서로 다른 조직에 걸쳐 있는 창고 통계를 지원하지 못하므로, 저는 한 개의 브랜치를 포크하여 해당 코드를 병합했습니다.&lt;/p&gt;
&lt;h2 id=&#34;최종-결과&#34;&gt;최종 결과
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats-chi-one-17.vercel.app/api?username=ttf248&amp;amp;hide_title=true&amp;amp;show_icons=true&amp;amp;hide=contribs&amp;amp;line_height=24&amp;amp;include_all_commits=true&amp;amp;count_private=true&amp;amp;bg_color=0000&amp;amp;text_color=8A919F&amp;amp;locale=cn&amp;amp;role=OWNER,COLLABORATOR,ORGANIZATION_MEMBER&amp;amp;timstamp=1746608356&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;GitHub Stats&#34;
	
	
&gt;
&lt;img src=&#34;https://github-readme-stats-chi-one-17.vercel.app/api/top-langs/?username=ttf248&amp;amp;hide_title=true&amp;amp;hide=html,javascript,css&amp;amp;layout=compact&amp;amp;bg_color=0000&amp;amp;text_color=8A919F&amp;amp;locale=cn&amp;amp;role=OWNER,COLLABORATOR,ORGANIZATION_MEMBER&amp;amp;timstamp=1746608356&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Top Languages&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;요청-주소-원본&#34;&gt;요청 주소 원본
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/anuraghazra/github-readme-stats/pull/2459&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Adds the ability to include data from organization repositories&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;fork-저장소에-pull-request-병합&#34;&gt;Fork 저장소에 Pull Request 병합
&lt;/h2&gt;&lt;p&gt;어떤 **Pull Request (PR)**을 당신의 &lt;strong&gt;fork 的仓库&lt;/strong&gt;에 병합하는 방법은 여러 가지가 있으며, 이는 무엇을 하고 싶으냐에 따라 달라집니다&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;上游（upstream）仓库&lt;/strong&gt; 병합 PR을 당신의 포크로 옮기는 것인가, 아니면&lt;/li&gt;
&lt;li&gt;다른 사람의 포크에서 PR을 합병하여 자신의 포크로 가져오거나,&lt;/li&gt;
&lt;li&gt;fork된 저장소에서 보낸 PR 병합 (예: 다른 사람이 당신의 fork에 PR을 제출한 경우)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;가장 흔한 시나리오 &lt;strong&gt;你 fork 了一个仓库，想把上游的某个 PR 合并到你的 fork&lt;/strong&gt;입니다. 절차는 다음과 같습니다 👇:&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;방법-1-명령줄-방식-가장-일반적&#34;&gt;방법 1: 명령줄 방식 (가장 일반적)
&lt;/h3&gt;&lt;h4 id=&#34;단계-1-자신만의-포크를-복제하세요&#34;&gt;단계 1: 자신만의 포크를 복제하세요
&lt;/h4&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/你的用户名/仓库名.git
cd 仓库名
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;단계-2-상위-저장소원래-리포지토리-주소-추가&#34;&gt;단계 2: 상위 저장소(원래 리포지토리 주소) 추가
&lt;/h4&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git remote add upstream https://github.com/原作者用户名/仓库名.git
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;단계-3-상위upstream-pr-분기-가져오기&#34;&gt;단계 3: 상위(upstream) PR 분기 가져오기
&lt;/h4&gt;&lt;p&gt;찾으려는 병합 PR 번호를 찾습니다. 예: PR #123.&lt;/p&gt;
&lt;p&gt;이 PR의 코드는 다음과 같이 가져올 수 있습니다:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git fetch upstream pull/123/head:pr-123
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;단계-4-분기-전환-및-병합&#34;&gt;단계 4: 분기 전환 및 병합
&lt;/h4&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout main    # 或者你自己的目标分支
git merge pr-123
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;모든 것이 정상이라면, 포크한 GitHub 저장소에 푸시할 수 있습니다&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push origin main
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3 id=&#34;방법-2-github-웹-인터페이스-간단하지만-기능-제한적&#34;&gt;방법 2: GitHub 웹 인터페이스 (간단하지만 기능 제한적)
&lt;/h3&gt;&lt;p&gt;GitHub 웹페이지에서 특정 PR이 상위 저장소에 대한 것이라면 다음과 같이 할 수 있습니다:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;해당 PR 페이지로 이동합니다&lt;/li&gt;
&lt;li&gt;오른쪽 상단의 &amp;ldquo;&lt;strong&gt;Commits&lt;/strong&gt;&amp;rdquo; 또는 &amp;ldquo;&lt;strong&gt;Files changed&lt;/strong&gt;&amp;ldquo;을 클릭하여 이 PR이 어떤 브랜치를 기반으로 하는지 확인하세요&lt;/li&gt;
&lt;li&gt;포크 페이지에서 새 브랜치를 만들고, 수동으로 PR 커밋을 체리픽하세요 (Git 기술이 필요합니다)&lt;/li&gt;
&lt;li&gt;또는 “&lt;strong&gt;Open in GitHub Desktop&lt;/strong&gt;”을 클릭하여 GUI 도구를 사용하여 병합하세요&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;-다른-사람이-당신의-포크에-대한-pr을-제안했다면&#34;&gt;🚀 다른 사람이 당신의 포크에 대한 PR을 제안했다면
&lt;/h3&gt;&lt;p&gt;PR 페이지로 바로 들어가서 &amp;ldquo;&lt;strong&gt;Merge pull request&lt;/strong&gt;&amp;rdquo; 버튼을 클릭하면 됩니다&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;현재 구체적인 상황(예: PR 링크, 웹 페이지 또는 명령줄 사용)에 맞춰 제가 직접 시연해 드릴까요? 아니면 구체적인 링크를 주시면 가장 간단한 방법을 분석해 드리겠습니다&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
