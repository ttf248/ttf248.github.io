<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Fork on 향숙의 수첩</title>
        <link>https://ttf248.life/ko/tags/fork/</link>
        <description>Recent content in Fork on 향숙의 수첩</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ko</language>
        <lastBuildDate>Sun, 25 May 2025 14:10:37 +0800</lastBuildDate><atom:link href="https://ttf248.life/ko/tags/fork/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Fork 저장소에 Pull Request 병합</title>
        <link>https://ttf248.life/ko/p/merge-pullrequest-to-fork-repository/</link>
        <pubDate>Wed, 07 May 2025 18:44:03 +0800</pubDate>
        
        <guid>https://ttf248.life/ko/p/merge-pullrequest-to-fork-repository/</guid>
        <description>&lt;p&gt;&lt;code&gt;github-readme-stats&lt;/code&gt;는 GitHub 프로필에 대한 통계 정보 생성기로, 사용자가 자신의 GitHub 프로필에 다양한 통계 정보와 차트를 표시할 수 있도록 합니다. 또한 사용자의 필요에 따라 조정할 수 있는 다양한 사용자 정의 옵션을 제공합니다.&lt;/p&gt;
&lt;p&gt;저는 창고 관리를 프로젝트별로 그룹화하는 습관이 있는데, GitHub는 창고 그룹화를 지원하지 않아서 여러 조직으로 분할해야 합니다. &lt;code&gt;github-readme-stats&lt;/code&gt; 최신 브랜치는 서로 다른 조직에 걸쳐 있는 창고 통계를 지원하지 못하기 때문에, 저는 포크하여 해당 코드를 병합했습니다.&lt;/p&gt;
&lt;h2 id=&#34;최종-효과&#34;&gt;최종 효과
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats-chi-one-17.vercel.app/api?username=ttf248&amp;amp;hide_title=true&amp;amp;show_icons=true&amp;amp;hide=contribs&amp;amp;line_height=24&amp;amp;include_all_commits=true&amp;amp;count_private=true&amp;amp;bg_color=0000&amp;amp;text_color=8A919F&amp;amp;locale=cn&amp;amp;role=OWNER,COLLABORATOR,ORGANIZATION_MEMBER&amp;amp;timstamp=1746608356&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;GitHub Stats&#34;
	
	
&gt;
&lt;img src=&#34;https://github-readme-stats-chi-one-17.vercel.app/api/top-langs/?username=ttf248&amp;amp;hide_title=true&amp;amp;hide=html,javascript,css&amp;amp;layout=compact&amp;amp;bg_color=0000&amp;amp;text_color=8A919F&amp;amp;locale=cn&amp;amp;role=OWNER,COLLABORATOR,ORGANIZATION_MEMBER&amp;amp;timstamp=1746608356&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Top Languages&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;풀-리퀘스트-원본-주소&#34;&gt;풀 리퀘스트 원본 주소
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/anuraghazra/github-readme-stats/pull/2459&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Adds the ability to include data from organization repositories&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;fork-저장소에-pull-request-병합&#34;&gt;Fork 저장소에 Pull Request 병합
&lt;/h2&gt;&lt;p&gt;어떤 **풀 리퀘스트(PR)**를 당신이 &lt;strong&gt;포크한 저장소&lt;/strong&gt;에 병합하려면 몇 가지 방법이 있으며, 어떤 방식으로 하고 싶은지에 따라 달라집니다&lt;/p&gt;
&lt;p&gt;상위(上游) 저장소에서 PR을 병합할지,
다른 사람의 포크에서 PR을 병합하여 자신의 포크로 가져오거나,
fork하신 분이 제안한 PR(예: 다른 사람이 당신의 저장소를 포크하여 PR을 제출한 경우)를 병합하세요&lt;/p&gt;
&lt;p&gt;나는 먼저 가장 흔한 시나리오를 하나 제시할게: &lt;strong&gt;어떤 저장소를 포크했고, 상위 저장소의 특정 PR을 너의 포크에 병합하고 싶다고 가정해 보자.&lt;/strong&gt; 절차는 다음과 같다 👇:&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;방법-1-명령줄-방식가장-일반적&#34;&gt;방법 1: 명령줄 방식(가장 일반적)
&lt;/h3&gt;&lt;h4 id=&#34;단계-1-자신의-포크를-복제하세요&#34;&gt;단계 1: 자신의 포크를 복제하세요
&lt;/h4&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/你的用户名/仓库名.git
cd 仓库名
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;단계-2-업스트림원본-저장소-주소-추가&#34;&gt;단계 2: 업스트림(원본 저장소 주소) 추가
&lt;/h4&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git remote add upstream https://github.com/原作者用户名/仓库名.git
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;단계-3-업스트림-pr-분기-가져오기&#34;&gt;단계 3: 업스트림 PR 분기 가져오기
&lt;/h4&gt;&lt;p&gt;찾으려는 병합 PR 번호를 찾습니다. 예를 들어 PR #123입니다.&lt;/p&gt;
&lt;p&gt;이 PR의 코드는 다음과 같이 가져올 수 있습니다:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git fetch upstream pull/123/head:pr-123
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;단계-4-분기-전환-및-병합&#34;&gt;단계 4: 분기 전환 및 병합
&lt;/h4&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout main    # 或者你自己的目标分支
git merge pr-123
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;모든 것이 정상이라면, 포크한 GitHub 저장소에 푸시할 수 있습니다&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push origin main
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3 id=&#34;방법-두-번째-github-웹-인터페이스간단하지만-기능이-제한적임&#34;&gt;방법 두 번째: GitHub 웹 인터페이스(간단하지만 기능이 제한적임)
&lt;/h3&gt;&lt;p&gt;GitHub 웹페이지에서 특정 PR이 상위 저장소에 대한 것이라면 다음과 같이 할 수 있습니다:&lt;/p&gt;
&lt;p&gt;해당 PR 페이지로 이동합니다
오른쪽 상단의 “&lt;strong&gt;Commits&lt;/strong&gt;” 또는 “&lt;strong&gt;Files changed&lt;/strong&gt;”를 클릭하여 이 PR이 어떤 브랜치를 기반으로 하는지 확인하세요
포크 페이지에서 새 브랜치를 만들고, 수동으로 PR 커밋을 체리픽하십시오(Git 기술이 필요합니다)
또는 “&lt;strong&gt;GitHub Desktop에서 열기&lt;/strong&gt;”를 클릭하여 GUI 도구를 사용하여 병합하세요&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;-만약-다른-사람이-당신의-포크에-대한-pr을-제안했다면&#34;&gt;🚀 만약 다른 사람이 당신의 포크에 대한 PR을 제안했다면
&lt;/h3&gt;&lt;p&gt;PR 페이지로 바로 들어가서 “&lt;strong&gt;Merge pull request&lt;/strong&gt;” 버튼을 클릭하면 됩니다&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;현재 구체적인 상황(예: PR 링크, 웹 페이지 또는 명령줄 사용)에 따라 제가 직접 시연해 드릴까요? 아니면 구체적인 링크를 주시면 가장 간단한 방법을 분석해 드리겠습니다&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
