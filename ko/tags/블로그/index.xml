<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>블로그 on 향숙의 수첩</title>
        <link>https://blog.ttf248.life/ko/tags/%EB%B8%94%EB%A1%9C%EA%B7%B8/</link>
        <description>Recent content in 블로그 on 향숙의 수첩</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ko</language>
        <lastBuildDate>Wed, 28 May 2025 09:47:38 +0800</lastBuildDate><atom:link href="https://blog.ttf248.life/ko/tags/%EB%B8%94%EB%A1%9C%EA%B7%B8/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>사이트 가속 및 도메인 설정</title>
        <link>https://blog.ttf248.life/ko/p/website-acceleration-and-domain-setup/</link>
        <pubDate>Sat, 20 Jun 2020 10:36:27 +0800</pubDate>
        
        <guid>https://blog.ttf248.life/ko/p/website-acceleration-and-domain-setup/</guid>
        <description>&lt;p&gt;국내 접속이 느린 GitHub Pages 때문에, 저자는 개인 도메인을 신청하고 국내 클라우드 호스트 제공업체의 CDN 가속 서비스를 구매했습니다. 설정 과정에서 www 서브도메인에 접근할 수 없는 문제가 발생했는데, 최종적으로 와일드카드 도메인 해석을 삭제하고 2차 도메인을 개별적으로 설정하여 해결했습니다. 저자는 또한 CDN 가속 원리 및 설정 경험과 Nginx 리버스 프록시를 사용한 시도와 그 교훈을 공유했습니다.&lt;/p&gt;
&lt;h3 id=&#34;배경&#34;&gt;배경
&lt;/h3&gt;&lt;p&gt;GitHub Pages에 호스팅되어 있어, 몇 가지 이유로 인해 국내 접속이 다소 느립니다. 그래서 개인 도메인을 신청하고 국내 클라우드 호스트 제공업체의 CDN 가속 서비스를 구매했습니다. 가속 서비스를 설정하면서 개발 머신에 Docker, frp, k8s 등 여러 서비스가 배포되어 있고, 이 서비스들에 대한 대시보드가 있다는 점을 떠올랐습니다. 낭비하지 않겠다는 생각으로 몇 개의 리버스 프록시를 구성하고 모두 2차 도메인에 연결했습니다.&lt;/p&gt;
&lt;p&gt;二级 도메인을 사용하던 중 갑자기 www 서브도메인에 접속할 수 없게 되었고, 알리바바 클라우드에서 DNS 설정이 &lt;a class=&#34;link&#34; href=&#34;https://www.xiangtianlong.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;www.xiangtianlong.com&lt;/a&gt;과 xiangtianlong.com으로 동시에 해석되도록 되어 있었으며, CDN 가속을 적용하기 전에는 두 도메인이 모두 정상적으로 작동했습니다&lt;/p&gt;
&lt;p&gt;CDN 설정 시, 2차 도메인이 너무 많아 일반 도메인 규칙을 적용하고 개발 머신으로 통합 라우팅했는데, 결과적으로 www 2차 도메인도 함께 접속이 안 되게 됐습니다. 네, 맞아요, www 접두사도 2차 도메인입니다. 실제 웹사이트는 GitHub Pages에 배포되어 있고, 개발 머신에는 웹사이트 캐시 정보가 없습니다.&lt;/p&gt;
&lt;p&gt;개발 환경에 사이트 배포 안 하고, GitHub Actions으로 자동 통합해서 배포하는 게 훨씬 편하네요&lt;/p&gt;
&lt;h3 id=&#34;도메인&#34;&gt;도메인
&lt;/h3&gt;&lt;p&gt;비전문적인 웹 개발에서는 도메인 이해가 SEO나 크로스 도메인 문제와 관련이 없습니다. 블로그 사이트로서 누드 도메인은 블로거의 사이트를 돋보이게 하며, 제처럼 한자 병음으로 된 도메인을 사용하는 초보에게 유리하고, 현재 모바일 접속이 많으므로 입력할 수 있는 문자 수를 줄일 수 있습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;컴퓨터에서 단축키를 사용하면 www와 com을 입력할 필요가 없습니다&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;cdn&#34;&gt;CDN
&lt;/h3&gt;&lt;p&gt;알리바다 클라우드와 텐센트 클라우드를 모두 사용해 봤는데, 신규 사용자도 쉽게 시작할 수 있습니다. 텐센트 클라우드는 관련 개념을 설명하는 비디오도 제공합니다. CDN 가속 원리는 제이동 창고와 같은 이치입니다. 신상품 판매 시 전국 각지에 미리 배송하여 배송 요청 발생 시 가장 가까운 창고에서 배송합니다.&lt;/p&gt;
&lt;p&gt;원래 주소: 웹사이트 리소스가 원래 보관된 주소&lt;/p&gt;
&lt;p&gt;캐시 파일 설정, 브라우저 F12, 관리 콘솔, 정적 및 동적 리소스 간략 분석&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;전부 0일 유효기간&lt;/li&gt;
&lt;li&gt;유효기간 0일&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;INLINE_CODE_0&lt;/strong&gt; 1일 유효&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;텐센트 클라우드 설정 규칙:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;최대 10개의 캐시 만료 규칙을 구성할 수 있습니다&lt;/li&gt;
&lt;li&gt;하위 규칙 우선&lt;/li&gt;
&lt;li&gt;캐시 만료 시간은 최대 365일까지 설정할 수 있습니다&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;비참한-자수지어&#34;&gt;비참한 자수지어
&lt;/h3&gt;&lt;p&gt;이전에 Nginx를 사용해 본 적이 없어 웹사이트 검색만으로 리버스 프록시 설정을 이해할 수 있을 줄 알았는데, 결과가 좀 혼란스러웠다. 반나절을 끙끙거려도 302 리디렉션은 제대로 설정하지 못했고 결국 아무 소용 없었다. 그래서 어리석은 방법으로 해결하기 위해 DNS 파싱의 와일드카드 도메인 파싱을 삭제하고 개별 2차 도메인을 독립적으로 설정했다. 그때 갑자기 알리바바 클라우드 DNS 파싱에 &amp;ldquo;표시 URL 리디렉션&amp;quot;이라는 모드가 있다는 것을 알아차렸고, 시도해 보니 이게 바로 내가 원하는 302 리디렉션이었다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;첫차 단계별 도메인 설정은 잘 되는데, 둘째 도메인을 설정하려니 안 되고 거의 좌절할 지경이었어요. 잠시 기다리니까 갑자기 되는 걸 보니, 알리바바 클라우드 DNS 전파가 가끔씩 오류를 일으키는 것 같네요.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;참고-자료&#34;&gt;참고 자료
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;죄송합니다, 번역할 중국어 텍스트가 제공되지 않았습니다. 텍스트를 제공해 주시면 번역해 드리겠습니다.&lt;/li&gt;
&lt;li&gt;죄송합니다, 번역할 중국어 텍스트가 제공되지 않았습니다. 텍스트를 제공해 주시면 번역해 드리겠습니다.&lt;/li&gt;
&lt;li&gt;죄송합니다, 번역할 중국어 텍스트가 제공되지 않았습니다. 텍스트를 제공해 주시면 번역해 드리겠습니다.&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>블로그 IDE 환경과 잡담</title>
        <link>https://blog.ttf248.life/ko/p/blog-ide-environment-and-ramblings/</link>
        <pubDate>Tue, 31 Mar 2020 13:54:27 +0800</pubDate>
        
        <guid>https://blog.ttf248.life/ko/p/blog-ide-environment-and-ramblings/</guid>
        <description>&lt;p&gt;이 글은 Markdown의 기본 개념과 다양한 소프트웨어에서의 활용을 소개하고, VSCode를 IDE로 추천하며 관련 플러그인을 제시합니다. 또한 Hexo에서 Hugo로 전환한 경험을 공유하며 Hugo의 유연성과 사용자 정의 기능을 강조합니다. 마지막으로 새로운 기술을 빠르게 시작하기 위한 팁과 함께 Hugo 테마 스타일 업데이트 문제 해결 방법도 제공합니다.&lt;/p&gt;
&lt;h2 id=&#34;서론&#34;&gt;서론
&lt;/h2&gt;&lt;h3 id=&#34;markdown&#34;&gt;Markdown
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;가볍고 사람이 읽기 쉽고 쓰기 쉬운 일반 텍스트 형식으로 문서를 작성할 수 있게 해주는 경량 마크업 언어입니다&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;상세한 Markdown 문법 설명은 생략하고, 전자책을 추천합니다. &lt;a class=&#34;link&#34; href=&#34;https://markdown-zh.readthedocs.io/en/latest/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;点击此处&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;시판되는 많은 소프트웨어들이 이미 md를 작성 방식으로 지원합니다. csdn 블로그 시스템은 md 문법을 지원하는 온라인 편집기를 출시했으며, 처음 사용할 때 md 문법에 대한 소개 글이 있는데 괜찮습니다. 에버노트도 2018년에 md 노트 지원을 추가했고, 단축키 바에 다양한 md 마크업 옵션이 있어 일반 문서 편집과 거의 비슷하며 전반적인 인터페이스는 초보자에게 친숙합니다.&lt;/p&gt;
&lt;h3 id=&#34;ide-추천&#34;&gt;IDE 추천
&lt;/h3&gt;&lt;p&gt;글을 쓰고 있을 때 2020년이었고, vscode는 이미 많이 들어봤을 것이다. git page를 사용하여 블로그 시스템을 구축할 생각을 하는 사람은 어차피 업계 관계자일 테니까. 과거에는 sublime이나 atom도 괜찮은 선택이었지만, 2년간의 오픈소스 커뮤니티 주도로 vscode가 빠르게 발전하여 초보자가 입문하기에 가장 좋은 선택이 되었다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;마이크로소프트의 거대한 변화와 오픈소스 커뮤니티와의 관계가 단절 상태에서 훈정기로 성공적으로 전환되었습니다. 오픈소스에 대한 포용적인 태도죠. 저희 회사 역시 최근 2년간 Java 생태계를 적극적으로 도입했습니다. 바꿔 말하면, 현재 국내에서의 Java 환경은 정말 매력적입니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;vs-code-플러그인-추천&#34;&gt;VS Code 플러그인 추천
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://blog.ttf248.life/p/blog-ide-environment-and-ramblings/2020-03-31-14-07-17.png&#34;
	width=&#34;310&#34;
	height=&#34;306&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;插件清单&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;101&#34;
		data-flex-basis=&#34;243px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;플러그인에는 자체 Readme 파일이 있어 기본 사용법과 핵심 기능을 설명하고 있으며, 일부 플러그인 제작자는 동적 효과 시연 이미지를 제공합니다&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;INLINE_CODE_0&lt;/strong&gt;, Hugo의 이미지 플러그인 방식과 함께 사용하면 간편하게 이미지를 추가할 수 있습니다&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;단축키를 외우지 못해서, VS Code 단축키 관리 메뉴에서 md를 검색하고 여러 번 보고, 플러그인 사용 설명서를 다시 확인해 봐&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;hugo&#34;&gt;hugo
&lt;/h2&gt;&lt;p&gt;글쓰는 일이 내 본성과는 거리가 멀다. 참지 못하고 덤비는 성향 때문이다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Hugo는 이미지와 md 문서를 별도의 폴더에 배치하는 것을 지원합니다&lt;/li&gt;
&lt;li&gt;학술 주제는 디자인에서 다양한 문서 스타일을 지원합니다&lt;/li&gt;
&lt;li&gt;다양한 맞춤형 확장 기능&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;academic&#34;&gt;academic
&lt;/h2&gt;&lt;p&gt;공식 웹사이트 기본 &lt;strong&gt;인라인_5&lt;/strong&gt; 굵게_3__인라인__인라인_6__ 굵게_4__인라인__&lt;/p&gt;
&lt;p&gt;URL 패턴은 클릭하면 단일 페이지로 이동하고, 홈페이지에서 스크롤하는 방식이 아니라서 개인적인 취향입니다&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;스타일별: 에세이, 강연, 전자책&lt;/li&gt;
&lt;li&gt;유연성: 전체 스타일 사용자 정의, CSS 스타일 사용자 정의&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이 테마는 중국어 지원이 아직 완벽하지 않은데, 주로 시각적인 측면에서 폰트 크기가 중국어 읽기 습관에 잘 맞지 않습니다. Hexo 개발팀의 대부분이 중국인이므로 이 점에서는 Hugo보다 우수합니다.&lt;/p&gt;
&lt;p&gt;하지만, 직접 만들어서 입고 먹는 것처럼, 브라우저에서 요소들을 검사합니다. 요소를 찾았으면 수정해야 할 CSS 스타일 이름이 궁금할 때 사이드바에서 &lt;strong&gt;Insert Style Rule Below&lt;/strong&gt;을 클릭하면 여러 겹으로 중첩된 CSS에서도 노드 이름을 쉽게 얻을 수 있습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;죄송합니다, 번역할 중국어 텍스트가 제공되지 않았습니다. 텍스트를 제공해 주시면 번역해 드리겠습니다.&lt;/li&gt;
&lt;li&gt;죄송합니다, 번역할 중국어 텍스트가 제공되지 않았습니다. 텍스트를 제공해 주시면 번역해 드리겠습니다.&lt;/li&gt;
&lt;li&gt;주제 내장 문법 강조 설정, &lt;a class=&#34;link&#34; href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/#highlighting-options.&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;마무리&#34;&gt;마무리
&lt;/h2&gt;&lt;p&gt;애가 또 뭐라 하네, 처음부터 끝까지 얼버무려 말하고 구체적인 내용은 하나도 안 짚어주잖아&lt;/p&gt;
&lt;p&gt;이것들만 있으면 충분할 거예요:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;공식 매뉴얼&lt;/li&gt;
&lt;li&gt;플러그인 설명&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;새로운 기술을 빠르게 익히려면 먼저 공식 문서를 읽어보는 것이 좋습니다. 한 번에 다 이해하려고 하기보다는, 적어도 대략적인 내용을 파악하는 것이 중요합니다. 검색 엔진 결과는 최신 버전과 일치하지 않아 오해를 불러일으킬 수도 있습니다. 새 책도 마찬가지입니다. 목차를 살펴보고 저자가 무엇을 설명하려 하는지 파악한 후 읽으면 좋습니다. 때로는 서문을 먼저 읽는 것도 좋은데, 일부 외국 저작물의 경우 번역자의 서문이 책의 핵심 내용을 담고 있는 경우도 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;이스터-에그&#34;&gt;이스터 에그
&lt;/h2&gt;&lt;p&gt;Hugo Academic 내장 스타일 시선을 변경하고 사이트에 게시했지만, 방문했을 때 스타일이 변하지 않았습니다. 똑똑한 분들은 이미 생각했을 겁니다. 로컬 브라우저 캐시를 지우면 문제가 해결됩니다. 저의 기발한 방법은 F12 개발자 모드로 들어가 __INLINE_CODE_0__BOLD_2&lt;code&gt;disable cache&lt;/code&gt;로 변경 후 새로 고침하면 됩니다!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.ttf248.life/p/blog-ide-environment-and-ramblings/2020-03-31-14-27-15.png&#34;
	width=&#34;399&#34;
	height=&#34;142&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;network&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;280&#34;
		data-flex-basis=&#34;674px&#34;
	
&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>자동 통합 시스템 전환</title>
        <link>https://blog.ttf248.life/ko/p/auto-integration-system-switch/</link>
        <pubDate>Sun, 29 Mar 2020 02:11:33 +0800</pubDate>
        
        <guid>https://blog.ttf248.life/ko/p/auto-integration-system-switch/</guid>
        <description>&lt;p&gt;GitHub Actions를 사용하여 Hugo 블로그를 GitHub Pages 및 Gitee에 자동으로 배포합니다&lt;/p&gt;
&lt;h4 id=&#34;배경-소개&#34;&gt;배경 소개
&lt;/h4&gt;&lt;p&gt;블로그 업데이트 중 Travis 서비스가 작동하지 않는 것을 발견했는데, Travis 웹페이지를 확인해보니 소스 코드 가져오기 단계에서 멈춰있었습니다. 그때 GitHub에서 출시한 Action 서비스가 떠올랐습니다.&lt;/p&gt;
&lt;p&gt;비교적 바쁠 것 같고, 사용하려면 신청도 해야 해서, 지금부터 정식으로 출시되었으니 주말에 시간 나면 새로운 장난감을 한번 해볼까요?&lt;/p&gt;
&lt;p&gt;공식 자료는 웹사이트에서 직접 확인하시면 되고, 이 글은 더 이상 인용하지 않겠습니다. 이전부터 Kubernetes를 사용해 보신 분들은 action의 YAML 파일 설정이 Kubernetes와 비슷하다고 느끼실 겁니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;阮一峰的博客&lt;/strong&gt;을 검색해 보세요. 두 개의 기사가 있는데, 첫 번째는 기초 문법 소개이고, 두 번째는 실제 사례입니다.&lt;/p&gt;
&lt;h4 id=&#34;본문&#34;&gt;본문
&lt;/h4&gt;&lt;p&gt;필요한 지식점&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;github secrets&lt;/li&gt;
&lt;li&gt;행동 구문&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;기존 컴포넌트를 활용하여 핵심 작업이 완료되었고, 명령어를 사용하여 국내 gitee에 푸시했습니다. 명령어 부분은 다소 거칠며 강제 푸시 방식으로 구현되어 있으며, travis 사용 로직을 이어받았습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;name: github pages and gitee pages

on:
  push:
    branches:
      - hugo

jobs:
  deploy:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: &#39;latest&#39;
          extended: true

      - name: Build Github and Gitee ## 单个step只能写一个run命令
        run: hugo -b &amp;quot;https://www.xiangtianlong.com/&amp;quot; -d &amp;quot;github_public&amp;quot; &amp;amp;&amp;amp; hugo -b &amp;quot;https://www.xiangtianlong.com/&amp;quot; -d &amp;quot;gitee_public&amp;quot; &amp;amp;&amp;amp; ls

      - name: Deploy Github
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.BLOG_TOKEN }}
          publish_dir: ./github_public
          publish_branch: master
          cname: xiangtianlong.com

      - name: Deploy Gitee
        run: cd ./gitee_public &amp;amp;&amp;amp; git init &amp;amp;&amp;amp; git config user.name &amp;quot;TianlongXiang&amp;quot; &amp;amp;&amp;amp; git config user.email &amp;quot;tianlongxiang51@gmail.com&amp;quot; &amp;amp;&amp;amp; git add . &amp;amp;&amp;amp; git commit -m &amp;quot;Update TianlongXiang&#39;s Blog&amp;quot; &amp;amp;&amp;amp; git push --force &amp;quot;https://xiangtianlong:${{ secrets.GITEE_PASSWORD }}@gitee.com/xiangtianlong/xiangtianlong.git&amp;quot; master:master   
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;사후기&#34;&gt;사후기
&lt;/h4&gt;&lt;p&gt;공식 시장에서 제공하는 기능들을 보면 현재 지원되는 플레이 방식이 꽤 많고, Docker 이미지 빌드 후에는 더 이상 Docker Hub의 서비스를 의존하지 않아도 된다&lt;/p&gt;
&lt;p&gt;Hugo 이슈를 확인해 보니, GitHub Actions을 사용하여 Git Pages를 자동 배포하려면 최종적으로 게시되는 웹 페이지가 master 브랜치에 있어야 합니다. 다른 브랜치에 배포하면 설정 인터페이스에서 GitHub가 배포된 웹 페이지에 구문 오류가 있다는 것을 알립니다.&lt;/p&gt;
&lt;p&gt;실제로 hugo의 원본 파일이 master 브랜치에 위치하여 github가 jelly 블로그 소스 코드로 간주하고 검사를 진행하면서, 검사 및 통과 실패로 인한 오류가 발생한 것입니다&lt;/p&gt;
&lt;p&gt;솔루션도 간단합니다. Hugo 소스 파일은 다른 분기에 두고, 정적 파일은 master 분기를 통해 배포하면 됩니다.&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
