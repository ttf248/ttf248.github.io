<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>도메인 on 향숙의 수첩</title>
        <link>https://ttf248.life/ko/tags/%EB%8F%84%EB%A9%94%EC%9D%B8/</link>
        <description>Recent content in 도메인 on 향숙의 수첩</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ko</language>
        <lastBuildDate>Sun, 25 May 2025 14:10:37 +0800</lastBuildDate><atom:link href="https://ttf248.life/ko/tags/%EB%8F%84%EB%A9%94%EC%9D%B8/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>사이트 가속 및 도메인 설정</title>
        <link>https://ttf248.life/ko/p/website-acceleration-and-domain-setup/</link>
        <pubDate>Sat, 20 Jun 2020 10:36:27 +0800</pubDate>
        
        <guid>https://ttf248.life/ko/p/website-acceleration-and-domain-setup/</guid>
        <description>&lt;p&gt;국내에서 GitHub Pages 접속이 느려서, 저자는 개인 도메인을 신청하고 국내 클라우드 호스트 제공업체의 CDN 가속 서비스를 구매했습니다. 설정 과정에서 www 서브도메인에 접근할 수 없는 문제가 발생했는데, 최종적으로 와일드카드 도메인 해석을 삭제하고 개별 2차 도메인을 설정하여 해결했습니다. 저자는 또한 CDN 가속의 원리와 설정 경험, 그리고 Nginx 리버스 프록시를 사용한 시도와 그 교훈을 공유했습니다.&lt;/p&gt;
&lt;h3 id=&#34;배경&#34;&gt;배경
&lt;/h3&gt;&lt;p&gt;GitHub Pages에 호스팅되어 있는데, 몇 가지 잘 알려진 이유로 GitHub Pages의 국내 접속이 약간 느립니다. 그래서 개인 도메인을 신청하고 국내 클라우드 호스트 제공업체의 CDN 가속 서비스를 구매했습니다. 가속 서비스를 설정하면서 개발 머신에 docker, frp, k8s 등 여러 서비스가 배포되어 있고, 이 서비스들은 모두 관련 대시보드를 가지고 있다는 것을 떠올랐습니다. 낭비하지 않겠다는 원칙을 가지고 몇 개의 리버스 프록시를 구성하여 모든 것을 하위 도메인에 연결했습니다.&lt;/p&gt;
&lt;p&gt;二级 도메인을 사용하고 있는데 갑자기 www 서브도메인에 접속할 수 없게 되었고, 알리바바 클라우드에서 DNS 설정이 &lt;a class=&#34;link&#34; href=&#34;https://www.xiangtianlong.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;www.xiangtianlong.com&lt;/a&gt;과 xiangtianlong.com으로 동시에 해석되도록 되어 있습니다. CDN 가속을 아직 활성화하지 않았을 때는 두 도메인이 모두 정상적으로 작동했습니다.&lt;/p&gt;
&lt;p&gt;CDN 가속을 설정할 때, 2차 도메인이 너무 많아서 와일드카드 도메인 규칙을 활성화했고, 모두 개발 머신으로 라우팅했는데, 그 결과 www라는 2차 도메인도 함께 접속이 안 되게 됐습니다. 네, 맞아요, www 접두사도 2차 도메인입니다. 실제 웹사이트는 GitHub Pages에 배포되어 있고, 개발 머신에는 웹사이트 캐시 정보가 전혀 없습니다.&lt;/p&gt;
&lt;p&gt;개발 환경에 사이트를 배포하지 않아도 되는 이유는 정적 블로그이고, GitHub에서 제공하는 action을 활용하면 자동으로 통합되어 게시되니 정말 좋네요&lt;/p&gt;
&lt;h3 id=&#34;도메인&#34;&gt;도메인
&lt;/h3&gt;&lt;p&gt;비전문적인 웹 개발에서는 도메인에 대한 이해가 SEO나 교차 영역 문제와 관련이 없습니다. 블로그 사이트로서, 누드 도메인은 블로거의 사이트를 돋보이게 할 수 있는데, 이는 저처럼 한자 병음으로 도메인을 사용하는 어린아이들에게 해당하며, 현재 모바일 접속이 많은 만큼 몇몇 문자를 줄일 수 있습니다.&lt;/p&gt;
&lt;p&gt;컴퓨터에서는 www와 com을 입력할 필요 없이 바로 사용할 수 있습니다&lt;/p&gt;
&lt;h3 id=&#34;cdn&#34;&gt;CDN
&lt;/h3&gt;&lt;p&gt;알리바바 클라우드와 텐센트 클라우드를 모두 사용해 봤는데, 신규 사용자도 쉽게 시작할 수 있습니다. 텐센트 클라우드는 관련 개념을 설명하는 비디오도 따로 제공하고 있습니다. CDN 가속의 원리와 제이동(JD) 창고는 같은 원리입니다. 신상품을 출시하면 미리 전국 각지의 창고에 통일적으로 배송한 후, 배송 요청이 발생했을 때 가장 가까운 창고에서 배송합니다.&lt;/p&gt;
&lt;p&gt;원본 주소: 웹사이트 리소스가 원래 보관된 주소&lt;/p&gt;
&lt;p&gt;캐시 파일 설정, 브라우저 F12, 관리 콘솔, 간단한 정적 리소스 및 동적 리소스 분석&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;전부 0일 유효기간&lt;/li&gt;
&lt;li&gt;.php;.jsp;.asp;.aspx 파일은 유효 기간이 0일입니다&lt;/li&gt;
&lt;li&gt;.jpg;.png;.js;.css;.woff2 유효기간 1일&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;텐센트 클라우드 설정 규칙:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;캐시 만료 규칙은 최대 10개까지 구성할 수 있습니다&lt;/li&gt;
&lt;li&gt;여러 캐시 만료 규칙 간의 우선순위는 하단 우선입니다&lt;/li&gt;
&lt;li&gt;캐시 만료 시간은 최대 365일까지 설정할 수 있습니다&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;비참한-자수풀&#34;&gt;비참한 자수풀
&lt;/h3&gt;&lt;p&gt;예전에는 Nginx를 사용해 본 적이 없어서 웹사이트 검색으로만 역방향 프록시 설정을 이해할 수 있을 거라고 생각했는데, 결과가 좀 혼란스러웠습니다. 반나절을 끙끙거려도 302 리디렉션조차 제대로 설정하지 못해서 결국 아무 소용이 없었습니다. 그래서 어리석은 방법으로 해결하려고 DNS 파싱에서 *모드와 같은 일반 도메인 파싱을 삭제하고 개별 2단계 하위 도메인을 독립적으로 설정했습니다. 그때 갑자기 알리바바 클라우드 DNS 파싱에 &amp;lsquo;표시 URL 리디렉션&amp;rsquo;이라는 모드가 있다는 것을 알아차렸고, 시도해 보니 이게 제가 원하는 302 리디렉션이었습니다.&lt;/p&gt;
&lt;p&gt;첫 번째 2차 도메인을 설정하니 정상적으로 접속되는데, 두 번째를 설정하려니 안 되어서 거의 인생의 의미를 의심할 지경이었어요. 잠시 기다리니까 갑자기 잘 된다는 걸 보니, 알리바바 클라우드의 DNS 전파가 가끔씩 고장 나는 것 같네요.&lt;/p&gt;
&lt;h3 id=&#34;참고-자료&#34;&gt;참고 자료
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;www가 없는 웹사이트 주소가 점점 더 많아지는 이유는 무엇인가요?&lt;/li&gt;
&lt;li&gt;www가 포함된 도메인과 미포함된 도메인의 차이점은 무엇인가요?&lt;/li&gt;
&lt;li&gt;도커 Nginx 리버스 프록시 설정&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
    </channel>
</rss>
