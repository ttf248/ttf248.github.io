<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Git on 향숙의 수첩</title>
        <link>https://ttf248.life/ko/tags/git/</link>
        <description>Recent content in Git on 향숙의 수첩</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ko</language>
        <lastBuildDate>Wed, 28 May 2025 09:47:38 +0800</lastBuildDate><atom:link href="https://ttf248.life/ko/tags/git/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>깃 커밋 기록 수정</title>
        <link>https://ttf248.life/ko/p/git-modify-commit-message/</link>
        <pubDate>Wed, 07 May 2025 18:38:31 +0800</pubDate>
        
        <guid>https://ttf248.life/ko/p/git-modify-commit-message/</guid>
        <description>&lt;p&gt;스크립트는 Git 히스토리의 여러 커밋에 대한 작성자 정보를 일괄적으로 수정하며, git filter-branch를 사용하여 히스토리를 재작성합니다&lt;/p&gt;
&lt;p&gt;제공하신 스크립트는 Git 저장소의 과거 커밋 작성자 정보를 일괄적으로 수정하는 데 사용되며, 전체적인 아이디어는 옳지만 &lt;code&gt;git filter-branch&lt;/code&gt;BOLD_4&lt;code&gt;--env-filter&lt;/code&gt;BOLD_5&lt;code&gt;OLD_EMAILS=(&amp;quot;...&amp;quot;)&lt;/code&gt;BOLD_6__INLINE_CODE_3__）에서는 배열 구문을 지원하지 않습니다&lt;/p&gt;
&lt;p&gt;호환성 향상을 위해 배열을 공백으로 구분된 문자열로 바꾸고, &lt;strong&gt;INLINE_CODE_0&lt;/strong&gt; 루프를 사용하여 각 기존 이메일 주소를 반복하는 것이 좋습니다. 다음은 수정된 스크립트 예제입니다:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/sh

git filter-branch --env-filter &#39;
OLD_EMAILS=&amp;quot;TianlongXiang51@gmail.com nick@qq.com tianlongxiang51@gmail.com&amp;quot;
CORRECT_NAME=&amp;quot;tianlong.xiang&amp;quot;
CORRECT_EMAIL=&amp;quot;tianlong.xiang@foxmail.com&amp;quot;

for OLD_EMAIL in $OLD_EMAILS
do
    if [ &amp;quot;$GIT_COMMITTER_EMAIL&amp;quot; = &amp;quot;$OLD_EMAIL&amp;quot; ]
    then
        export GIT_COMMITTER_NAME=&amp;quot;$CORRECT_NAME&amp;quot;
        export GIT_COMMITTER_EMAIL=&amp;quot;$CORRECT_EMAIL&amp;quot;
    fi
    if [ &amp;quot;$GIT_AUTHOR_EMAIL&amp;quot; = &amp;quot;$OLD_EMAIL&amp;quot; ]
    then
        export GIT_AUTHOR_NAME=&amp;quot;$CORRECT_NAME&amp;quot;
        export GIT_AUTHOR_EMAIL=&amp;quot;$CORRECT_EMAIL&amp;quot;
    fi
done
&#39; --tag-name-filter cat -- --branches --tags
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;注意事项：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;스크립트 실행 전, 혹시 모를 상황에 대비하여 저장소 백업을 권장합니다&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이 작업은 Git 기록을 덮어쓰고, 커밋 작성자 정보를 수정하여 커밋 해시 값이 변경될 수 있습니다&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;변경 사항을 원격 저장소에 푸시했다면 강제 푸시를 사용해야 합니다&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push --force --tags origin &#39;refs/heads/*&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;강제 푸시를 신중하게 사용하고, 특히 여러 사람이 협업하는 프로젝트에서는 다른 사람에게 영향을 미치지 않도록 주의하세요&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;저장소의 모든 중복되지 않는 작성자 이메일 주소를 확인합니다&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git log --format=&#39;%an &amp;lt;%ae&amp;gt;&#39; | sort -u
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        <item>
        <title>Git 비활성화 http 저장소</title>
        <link>https://ttf248.life/ko/p/git-disable-http-repositories/</link>
        <pubDate>Mon, 08 Jan 2024 21:22:04 +0800</pubDate>
        
        <guid>https://ttf248.life/ko/p/git-disable-http-repositories/</guid>
        <description>&lt;p&gt;소프트웨어 버전 업데이트를 습관화했지만, 어떤 버전의 &lt;strong&gt;INLINE_CODE_0__开始，禁止从__INLINE_CODE_1&lt;/strong&gt; 저장소에서 코드를 가져와야 할지 모르겠네요&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;fatal: Unencrypted HTTP is not supported for GitLab. Ensure the repository remote URL is using HTTPS
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;배경-소개&#34;&gt;배경 소개
&lt;/h2&gt;&lt;p&gt;환경: Windows 플랫폼, 항상 작은 거북이로 git을 사용하고 있었고, 키 설정도 작은 거북이로 처리했으며, 이전에 스크립트를 통해 로컬 저장소를 일괄적으로 업데이트한 적이 있습니다&lt;/p&gt;
&lt;p&gt;이전 링크: &lt;a class=&#34;link&#34; href=&#34;https://ttf248.life/ko/p/bulk-update-local-git-repository-and-legacy-permission-issues/&#34; &gt;批量更新本地Git仓库&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;오늘 코드 업데이트를 하려는데, 앞서 발생했던 오류가 발생해서 저장소를 정상적으로 업데이트할 수 없게 됐습니다. __INLINE_CODE_0__应该提供了配置，让我继续使用__INLINE_CODE_1__의 프로토콜 업데이트 저장소를 찾으려고 했는데, 관련 설정 항목을 찾을 수가 없네요.&lt;/p&gt;
&lt;p&gt;가장 간단한 해결책은 당연히 __INLINE_CODE_0__BOLD_3&lt;code&gt;gitlab&lt;/code&gt;BOLD_4&lt;code&gt;https&lt;/code&gt;프로토콜로 전환하는 것입니다&lt;/p&gt;
&lt;h2 id=&#34;미결-문제&#34;&gt;미결 문제
&lt;/h2&gt;&lt;p&gt;앞서 작성한 로컬 저장소 일괄 업데이트 스크립트에서 __INLINE_CODE_0__BOLD_2&lt;code&gt;git&lt;/code&gt; 설정 정보가 config에 동기화되지 않아 명령줄 실행 시 발생했습니다&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git pull #提示没有权限，无法正常更新仓库
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;명령을 통해 키 설정도 확인하는 것은 올바르다: &lt;strong&gt;INLINE_CODE_0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;TortoiseGit으로 코드를 정상적으로 가져올 수 있지만 명령줄에서 git pull 명령을 사용할 때 키가 올바르지 않다고 표시되면 TortoiseGit이 PuTTY의 SSH 키를 사용하는 반면 명령줄은 OpenSSH의 SSH 키를 사용하기 때문일 수 있습니다&lt;/p&gt;
&lt;p&gt;작은 거북이의 키 설정은 시스템 .ssh 폴더에서 키 파일 정보를 읽어오는 대신, 인터페이스 저장소 구성 시 별도로 키 파일 경로를 설정합니다. 유용한 팁: 첫 번째 저장소를 가져오기 위한 키를 설정하면 나머지 저장소는 이 키 파일을 재사용할 수 있습니다. PuTTY가 키를 로드한 후 즉시 종료되지 않고 프록시 서비스를 시작합니다.&lt;/p&gt;
&lt;p&gt;전역 설정을 조정하여 시스템 기본 &lt;strong&gt;INLINE_CODE_0&lt;/strong&gt; 설정 대신, 이렇게 설정하면 Git Bash는 TortoisePlink를 사용하여 SSH 작업을 수행합니다. 이 설정은 TortoiseGit에 포함된 PuTTY 도구를 사용하는 경우에 적합합니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --global core.sshCommand &amp;quot;&#39;C:/Program Files/TortoiseGit/bin/TortoisePlink.exe&#39; -batch -ssh&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;위에 설정된 실행 파일 경로를 해당 작은 거북이 경로로 직접 수정하면 시스템 환경 변수에 경로를 추가할 필요가 없습니다&lt;/p&gt;</description>
        </item>
        <item>
        <title>대량 업데이트 및 기존 권한 문제 해결</title>
        <link>https://ttf248.life/ko/p/bulk-update-local-git-repository-and-legacy-permission-issues/</link>
        <pubDate>Thu, 19 Oct 2023 14:16:22 +0800</pubDate>
        
        <guid>https://ttf248.life/ko/p/bulk-update-local-git-repository-and-legacy-permission-issues/</guid>
        <description>&lt;p&gt;팀 내 프로젝트 간 의존 관계가 존재하며, 과거의 사유로 인해 __INLINE_CODE_0__을 사용하여 의존성을 관리하지 않아, 일상적인 개발 시 코드 업데이트를 수동으로 순차적으로 진행해야 합니다. 그렇지 않으면 다양한 문제가 발생할 수 있습니다.&lt;/p&gt;
&lt;p&gt;온라인 자료를 참고하여 구조가 기본적으로 유사하므로, 로컬에서 &lt;strong&gt;git_list.txt&lt;/strong&gt;라는 저장소 디렉터리를 수동으로 관리하고, 스크립트를 작성하여 디렉터리를 순회하며 한 번에 업데이트합니다. 이후 작업 전에 스크립트를 실행하세요.&lt;/p&gt;
&lt;h2 id=&#34;linux&#34;&gt;linux
&lt;/h2&gt;&lt;p&gt;create new file: batch_pull.sh&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#!/bin/bash

echo &amp;quot;============ 更新仓库 ===================&amp;quot;

# 检查 git_list.txt 是否存在
if [ ! -f &amp;quot;git_list.txt&amp;quot; ]; then
  echo &amp;quot;git_list.txt 文件不存在！请创建并添加要拉取的 git 仓库 URL。&amp;quot;
  exit 1
else
  echo &amp;quot;============ 检测到了 git 仓库清单文件 ====&amp;quot;
fi

# 逐行读取 git_list.txt 中的 URL，并执行拉取操作
while read -r url; do
  if [ -d &amp;quot;$url&amp;quot; ]; then
    cd &amp;quot;$url&amp;quot; || continue
    git pull
    cd ..
    echo &amp;quot;Pull $url 完成！&amp;quot;
    echo &amp;quot;========================================&amp;quot;
  else
    echo &amp;quot;目录 $url 不存在，跳过拉取。&amp;quot;
  fi
done &amp;lt; &amp;quot;git_list.txt&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;windows&#34;&gt;windows
&lt;/h2&gt;&lt;p&gt;create a new file: batch_pull.bat&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bat&#34;&gt;@echo off
chcp 65001 &amp;gt; nul
rem 进入脚本所在目录
cd /d &amp;quot;%~dp0&amp;quot;

rem 检查 git_list.txt 是否存在
if not exist &amp;quot;git_list.txt&amp;quot; (
  echo git_list.txt 文件不存在！请创建并添加要拉取的 git 仓库 URL。
  exit /b 1
) else (
  echo ============ 检测到了 git 仓库清单文件 ====
)

rem 逐行读取 git_list.txt 中的 URL，并执行拉取操作
for /f %%i in (git_list.txt) do (
  if exist &amp;quot;%%i&amp;quot; (
    pushd &amp;quot;%%i&amp;quot;
    git pull
    popd
    echo Pull %%i 完成！
    echo ========================================
  ) else (
    echo 目录 %%i 不存在，跳过拉取。
  )
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;역사-유산-문제&#34;&gt;역사 유산 문제
&lt;/h3&gt;&lt;p&gt;시스템 재설치 후 발생한 &lt;strong&gt;인라인 이탤릭 2&lt;/strong&gt; &lt;strong&gt;볼드 1&lt;/strong&gt; 치명적인 오류(&amp;ldquo;안전하지 않은 저장소(&amp;rsquo;/home/repon&amp;rsquo;은 다른 사용자가 소유함&amp;rdquo;)&lt;/p&gt;
&lt;p&gt;온라인 제안의 대부분은 __INLINE_CODE_0__에서 비롯됩니다&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;창고 목록 신뢰 추가:&lt;/li&gt;
&lt;li&gt;수동으로 설정 파일 __INLINE_CODE_0__을 수정하여, 디렉터리 추가 신뢰&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;[safe]
    directory = /home/repon
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;위의 방식으로 처리한 후, 창고 업데이트는 정상적으로 이루어지지만, &lt;strong&gt;INLINE_CODE_0&lt;/strong&gt; 콘솔에서 사용자 소유권 오류를 포함한 많은 경고 메시지가 표시됩니다&lt;/p&gt;
&lt;h3 id=&#34;데스크톱-재설치&#34;&gt;데스크톱 재설치
&lt;/h3&gt;&lt;p&gt;개발한 기계가 너무 오래돼서 시스템을 재설치하지 않았더니, 쓰레기 파일이 폭발해서 해결할 방법이 없었습니다. 시간을 내어 시스템을 재설치했는데 또 권한 문제가 발생했고, 기존 스크립트가 실행되지 않으며, 수정된 권한이 불완전합니다.&lt;/p&gt;
&lt;p&gt;새로운 방식에 따라 &lt;code&gt;*&lt;/code&gt;BOLD_2&lt;code&gt;git&lt;/code&gt;을 직접 추가하면 모든 디렉터리를 자동으로 신뢰합니다&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --global --add safe.directory &amp;quot;*&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;알 수 없는 사용자 권한 문제인지, 아니면 다들 &lt;strong&gt;INLINE_CODE_0__平台其实也有类似__INLINE_CODE_1&lt;/strong&gt; 명령에 익숙하지 않은 건지 모를 것 같습니다. 폴더 소유자를 수정하려고 했는데, 만약 디렉토리가 많지 않다면 수동으로 소유자를 변경하는 것도 괜찮습니다. 하지만 이 업무용 컴퓨터에는 도메인 정보가 추가되어 있는데, 회사에서 배포한 도메인에 문제가 있는 걸까요, 아니면 로컬 시스템 설정에 문제가 있는 걸까요? 사용자 목록에서 로그인에 사용된 사용자를 찾을 수 없었고, 결국 명령줄로 처리했습니다.&lt;/p&gt;
&lt;p&gt;관리자 권한으로 &lt;code&gt;powershell&lt;/code&gt;脚本__INLINE_CODE_1__，记得调整脚本文件编码为__INLINE_CODE_2__을 실행하고, 중국어 운영체제를 사용해야 인코딩 문제가 발생하지 않습니다&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;# 获取当前用户的用户名
$currentUserName = [System.Security.Principal.WindowsIdentity]::GetCurrent().Name

# 设置 PowerShell 的字符编码为 UTF-8
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8

# 要更改所有者的根目录路径
$rootDirectory = &amp;quot;G:\workspace&amp;quot;  # 替换为实际的目录路径

# 递归遍历目录并更改文件和文件夹的所有者
Get-ChildItem -Path $rootDirectory -Recurse | ForEach-Object {
    $itemPath = $_.FullName

    # 检查是文件还是文件夹
    if ($_ -is [System.IO.DirectoryInfo]) {
        # 如果是文件夹，使用 icacls 更改所有者权限
        $icaclsResult = icacls $itemPath /setowner &amp;quot;$currentUserName&amp;quot; 2&amp;gt;&amp;amp;1
        if ($LASTEXITCODE -eq 0) {
            Write-Host &amp;quot;已更改文件夹 $itemPath 的所有者为 $currentUserName&amp;quot;
        } else {
            Write-Host &amp;quot;无法更改文件夹 $itemPath 的所有者。错误信息: $icaclsResult&amp;quot;
        }
    } else {
        # 如果是文件，使用 icacls 更改所有者权限
        $takeownResult = icacls $itemPath /setowner &amp;quot;$currentUserName&amp;quot; 2&amp;gt;&amp;amp;1
        if ($LASTEXITCODE -eq 0) {
            # Write-Host &amp;quot;已更改文件 $itemPath 的所有者为 $currentUserName&amp;quot;
        } else {
            Write-Host &amp;quot;无法更改文件 $itemPath 的所有者。错误信息: $takeownResult&amp;quot;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;예상치 못한 상황이 발생했는데, 스크립트 실행 시 출력되는 중국어 정보가 엉망이고, 콘솔 문자 인코딩을 설정하고 스크립트 인코딩을 조정해도 여전히 깨져서 머리가 제대로 작동하지 않는 것 같았습니다. 제어판-지역-언어 설정의 베타 기능을 활성화하고 전역적으로 유니코드 인코딩을 켰더니 스크립트는 정상적으로 실행되었지만, 여러 개발 소프트웨어가 제대로 작동하지 않았습니다. 뒤돌아보니 자료를 정리하면서 스크립트 파일의 인코딩을 &lt;strong&gt;INLINE_CODE_0&lt;/strong&gt; 로 설정해야 한다는 것을 깨달았습니다.&lt;/p&gt;
&lt;h2 id=&#34;자료&#34;&gt;자료
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://ganzhixiong.com/p/f1b9f4fc/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://ganzhixiong.com/p/f1b9f4fc/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/71901632/fatal-error-unsafe-repository-home-repon-is-owned-by-someone-else&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stackoverflow.com/questions/71901632/fatal-error-unsafe-repository-home-repon-is-owned-by-someone-else&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>자주 사용하지 않는 GIT 명령어 몇 가지 정리</title>
        <link>https://ttf248.life/ko/p/git-less-common-commands-summary/</link>
        <pubDate>Fri, 17 Feb 2023 10:08:57 +0800</pubDate>
        
        <guid>https://ttf248.life/ko/p/git-less-common-commands-summary/</guid>
        <description>&lt;p&gt;자주 사용하지는 않지만 유용한 &lt;code&gt;git&lt;/code&gt; 명령&lt;/p&gt;
&lt;h3 id=&#34;시스템-재설치로-인해-__inline_code_0__-폴더-소유자-정보가-변경되었습니다&#34;&gt;시스템 재설치로 인해 &lt;strong&gt;INLINE_CODE_0&lt;/strong&gt; 폴더 소유자 정보가 변경되었습니다
&lt;/h3&gt;&lt;p&gt;새 버전은 보안 검사를 추가하여 위험을 알리고, 이로 인해 작업을 계속할 수 없습니다&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --global --add safe.directory
git config --global --add safe.directory &amp;quot;*&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;새-컴퓨터-계정-정보-저장&#34;&gt;새 컴퓨터 계정 정보 저장
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --global credential.helper store
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;정보를 업데이트하기 전에 먼저 기존 증거를 정리하세요&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --system --unset credential.helper
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        
    </channel>
</rss>
