<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Anti-Debug on 향숙의 수첩</title>
        <link>https://ttf248.life/ko/tags/anti-debug/</link>
        <description>Recent content in Anti-Debug on 향숙의 수첩</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ko</language>
        <lastBuildDate>Sun, 25 May 2025 14:10:37 +0800</lastBuildDate><atom:link href="https://ttf248.life/ko/tags/anti-debug/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>프로그램이 디버깅을 어떻게 회피하는가</title>
        <link>https://ttf248.life/ko/p/program-how-to-anti-debug/</link>
        <pubDate>Tue, 23 Jan 2024 19:46:36 +0800</pubDate>
        
        <guid>https://ttf248.life/ko/p/program-how-to-anti-debug/</guid>
        <description>&lt;p&gt;뜻밖에도 벽지 새로 해보자는 생각이 들어서, 평소 검은색 계열을 선호하는지라 부분적으로 색상을 넣고 싶어요. 바탕화면에는 아이콘을 배치해야 해서 다른 색상으로 배경을 설정하면 아이콘이 잘 보이지 않네요.&lt;/p&gt;
&lt;p&gt;위 어셈블리 코드에 대해 잠시 생각해 보았는데, 무슨 뜻인지 모르겠어. AI에게 시도해 봤더니 명령어를 설명은 했지만 상황은 설명하지 않았고, 분명히 특정 상황에서 사용되는 명령어일 것이다. 일반적인 코드는 이런 방식이 아니다.&lt;/p&gt;
&lt;p&gt;AI는 현재 검색 엔진보다 낫지 않다, 어셈블리의 지식 저장량은 부족하다&lt;/p&gt;
&lt;h2 id=&#34;벽지&#34;&gt;벽지
&lt;/h2&gt;&lt;p&gt;검은색 조립 벽지&lt;/p&gt;
&lt;h2 id=&#34;어셈블리-코드&#34;&gt;어셈블리 코드
&lt;/h2&gt;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;PUSHFD
MOV DWORD PTR [ESP],0X100
POPFD
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;실제 사용 시나리오&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;bool IsDebugged()
{
    __try
    {
        __asm
        {
            pushfd
            mov dword ptr [esp], 0x100
            popfd
            nop
        }
        return true;
    }
    __except(GetExceptionCode() == EXCEPTION_SINGLE_STEP
        ? EXCEPTION_EXECUTE_HANDLER
        : EXCEPTION_CONTINUE_EXECUTION)
    {
        return false;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;설명&#34;&gt;설명
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;TrapFlag&lt;/code&gt;은 플래그 레지스터 내의 플래그 비트이며, 이 플래그 비트가 설정되면 예외 &lt;code&gt;SINGLE_STEP&lt;/code&gt;이 발생합니다. 왜냐하면 우리가 코드를 추적할 때 디버거가 이 플래그 비트를 초기화하기 때문에 이 예외를 볼 수 없기 때문입니다.&lt;/p&gt;
&lt;p&gt;실제 테스트 시 발견한 내용인데, 검사 디버깅 함수를 직접 건너뛰면 디버깅이 감지되지 않고, 검사 함수 실행에 들어가야만 감지된다 (자료 조사 중이며 아직 실제 확인은 되지 않음)&lt;/p&gt;
&lt;h2 id=&#34;참고-자료&#34;&gt;참고 자료
&lt;/h2&gt;&lt;p&gt;관련 자료는 모두 웹사이트의 영어 원문을 번역한 것이며, 해당 사이트는 다양한 디버깅 방지 기술을 설명하고 있습니다&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://anti-debug.checkpoint.com/techniques/assembly.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://anti-debug.checkpoint.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://song-10.gitee.io/2021/08/08/Reverse-2021-08-08-anti-debug/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://song-10.gitee.io/2021/08/08/Reverse-2021-08-08-anti-debug/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
    </channel>
</rss>
