<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>데스크톱 컴퓨터 on 향숙의 수첩</title>
        <link>https://ttf248.life/ko/tags/%EB%8D%B0%EC%8A%A4%ED%81%AC%ED%86%B1-%EC%BB%B4%ED%93%A8%ED%84%B0/</link>
        <description>Recent content in 데스크톱 컴퓨터 on 향숙의 수첩</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ko</language>
        <lastBuildDate>Sun, 25 May 2025 14:10:37 +0800</lastBuildDate><atom:link href="https://ttf248.life/ko/tags/%EB%8D%B0%EC%8A%A4%ED%81%AC%ED%86%B1-%EC%BB%B4%ED%93%A8%ED%84%B0/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>컴퓨터 조립 그거</title>
        <link>https://ttf248.life/ko/p/computer-assembly-tips/</link>
        <pubDate>Sat, 18 Jul 2020 14:33:46 +0800</pubDate>
        
        <guid>https://ttf248.life/ko/p/computer-assembly-tips/</guid>
        <description>&lt;p&gt;저자는 어릴 때부터 컴퓨터 조립에 대한 관심이 많았으며, 대학교 이후로 하드웨어 조립을 접하기 시작했습니다. CPU, SSD, HDD, 메모리 주파수 등 하드웨어 성능 비교 웹사이트 및 구매 추천 정보를 제공하고, 하드웨어 선택 경험과 주의사항을 공유합니다.&lt;/p&gt;
&lt;h3 id=&#34;인연은-말로-다-할-수-없네&#34;&gt;인연은 말로 다 할 수 없네
&lt;/h3&gt;&lt;p&gt;어렸을 때부터 내 컴퓨터를 조립하고 싶었는데, 안타깝게도 경제적인 상황이 허락하지 않았다. 어렵게 대학에 와서는 휴대성을 고려해서 노트북으로 샀다. 정확한 시점을 꼽자면, 고향 도서관에서 시작된 것 같은데. 어쨌든 시내 수준의 도서관이라 전자 열람실(사실 가본 적은 없고 유료였다고 함)도 있었지만, 잡지 열람실에서 《大众软件》이나 《电脑报》같은 잡지를 보게 되었는데, 컴퓨터를 많이 접해보지 못했던 나에게는 거의 신과 같은 과학 지식 자료였다. 몬스터 사냥하는 챕터를 보면 내 컴퓨터를 만들어서 같이 몬스터를 잡아 주력 딜러가 되고 싶었고, 첨단 기술에 대한 내용을 보면 책에서 보던 대로 따라 하면 설명된 효과를 낼 수 있을 거라고 상상했다(해킹 도구 사용에 대한 이야기). 물론 고등학교 과제가 많았고, 내가 알던 한도 내에서도 공부도 해야 하고 놀이도 해야 하니, 순수하고 천진난만하게 지냈다고 할 수 있다. 핑계로 도서관에 가서 책을 보러 가는 척하면 작은 가방 하나 들고 시내를 걸어가서 도서관에 갔다. 도착해서 에어컨을 틀고 소설, 만화, 게임 잡지를 보거나 가끔은 진지한 책도 읽었다.&lt;/p&gt;
&lt;p&gt;나이가 들면 건망증이 생기기 쉬운데, 도서관에서 벌어진 일은 처음 있는 일이 아니었다. 중학교 때 친척 집에서 컴퓨터를 조립한 적이 있는데, 그때 그 기계를 조립한 이유가 무엇이었는지 기억도 안 난다. 운영체제는 윈도우 2003이고, 게임은 시스템에 내장된 카드 + 문명 시대로 이루어져 있었다. 온갖 “꾀와 용기”를 발휘해서 열쇠를 훔쳐 동생과 함께 게임을 하곤 했다.&lt;/p&gt;
&lt;p&gt;방금 중학교에 입학했는데 바로 컴퓨터 기초 교육이 있었고, 나중에 전학하면서 컴퓨터 경시대회라는 개념을 조금 접하게 됐어. 고등학교 때에는 NOIP 한 번 치뤘지. 여기서 얘기를 하면 꼭 해야 할 말이 있는데, 동문들의 힘이 정말 대단했어. 고등학교의 컴퓨터 건물은 동문의 기부로 지어졌고, 컴퓨터 교실과 도서관을 포함하고 있어. 그때는 사실 국내 인터넷 물결의 초기에 해당했지. 학교 관계자들도 컴퓨터 경시대회 참여를 지원했는데, 어쨌든 앞선 두 학년 선배들 여러 명이 컴퓨터를 통해 명문 대학에 진학했으니까.&lt;/p&gt;
&lt;p&gt;나와 컴퓨터에 대한 일들을 이렇게 되돌아본 적은 없었다. 졸업 후 자동화 전공을 과감하게 포기하고 컴퓨터 업계로 넘어간 것도 이해가 된다. 이미 씨앗이 뿌려져 있었고, 다만 관련자들은 미처 알지 못했을 뿐이다. 어릴 때부터 많이 접해 두었기에 자신이 대단하다고 생각했지만, 사실은 겉핱기만 할 줄 알았고, 가장 큰 장점은 처음의 열정이었다.&lt;/p&gt;
&lt;h3 id=&#34;하드웨어-조립&#34;&gt;하드웨어 조립
&lt;/h3&gt;&lt;p&gt;카드바, 칩헬, 지후 컴퓨터 조립 게시판을 많이 둘러보면 초보자도 비교적 간단하게 자신이 원하는 기계 목록을 작성할 수 있습니다. 2019년 이후 CPU를 구매하는데 경제적인 여유가 없다면 더 높은 성능을 원한다면 AMD를 우선적으로 선택하세요.&lt;/p&gt;
&lt;p&gt;자주 사용하는 하드웨어 성능 비교 웹사이트를 추천합니다: &lt;a class=&#34;link&#34; href=&#34;https://cpu.userbenchmark.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://cpu.userbenchmark.com/&lt;/a&gt; 가격은 거의 중고나라 미국 버전과 비교할 수 있습니다. 진정한 고수라면 중고나라에서 중고 제품을 구매하면 훨씬 저렴하게 살 수 있습니다. 하지만 잘 모르는 분들은 중고나라를 이용하지 않는 것이 좋습니다. 저는 가짜 메모리를 구매했는데, 현재 사용하면서는 문제가 없는 것 같지만 정확히는 모르겠습니다. 모델과 파라미터가 완전히 일치하지 않습니다.&lt;/p&gt;
&lt;h4 id=&#34;sn550-vs-sn750&#34;&gt;SN550 VS SN750
&lt;/h4&gt;&lt;p&gt;SN550 1TB 용량과 SN750 1TB 용량의 차이는 지속적인 읽기/쓰기 속도가 두 배 정도 다르다는 것인데, 하나는 850MB이고 다른 하나는 1.6GB입니다. 하지만 일상 사용에서는 차이가 없는데, 둘 다 4K 성능은 동일하기 때문입니다. 물론 여기서 말하는 것은 1TB 용량의 SN550이고, 500G와 250G 모델은 순차 읽기/쓰기 속도가 더 느립니다. 사실 돈을 신경 쓰지 않는다면 일상 사용에는 SN550로 충분하다고 생각합니다. 제가 이 제품을 사지 않은 가장 큰 이유는 순차 읽기/쓰기 속도 때문이 아니라 최대 용량이 1TB인 것에 있고, SN750은 2TB 용량을 제공하기 때문입니다. 저에게는 추가 확장 없이 메인보드의 M.2 Nvme 슬롯이 이러한 SSD의 가격 차이보다 더 가치 있다고 생각합니다.&lt;/p&gt;
&lt;p&gt;여러 누리꾼들의 결론을 종합해 볼 때, 어댑터 하나를 구입하면 B150 메인보드도 M.2 인터페이스의 SSD를 지원할 수 있습니다&lt;/p&gt;
&lt;h4 id=&#34;기계식-하드-디스크-구매-가이드&#34;&gt;기계식 하드 디스크 구매 가이드
&lt;/h4&gt;&lt;p&gt;기계식 하드 디스크는 현재 가격이 안정적인 추세이며, 대용량 저장 공간이 필요한 사용자라면 적절한 기계식 하드 디스크를 선택해야 합니다. 자주 자료를 다운로드하는 사용자에게는 엔터프라이즈급 하드 디스크를 추천하며, 흔히 볼 수 있는 제품으로는 다음과 같은 것들이 있습니다:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;서부 데이터 디스크&lt;/li&gt;
&lt;li&gt;시게 exos&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;대용량 기계식 하드 디스크는 파티션을 나누어 사용하는 것이 좋습니다. 잦은 다운로드 작업은 특정 파티션에서 고정하고, 나중에 불량 섹터가 발생하면 해당 파티션만 버리면 되므로 수명을 효과적으로 연장할 수 있습니다.&lt;/p&gt;
&lt;p&gt;시지 게이트 &lt;a class=&#34;link&#34; href=&#34;https://www.seagate.com/cn/zh/enterprise-storage/exos-drives/exos-e-drives/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;공식 소개&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;시게 기업용 하드 디스크 개요&lt;/p&gt;
&lt;p&gt;시게 기업용 하드 디스크 개요&lt;/p&gt;
&lt;h4 id=&#34;메모리-주파수&#34;&gt;메모리 주파수
&lt;/h4&gt;&lt;p&gt;일상 업무의 관점에서 보면, 빈도는 성능에 큰 영향을 미치지 않습니다&lt;/p&gt;
&lt;p&gt;메모리 타이밍(메모리.png) ! [짜충 메모리](짜충 메모리.png)&lt;/p&gt;
&lt;p&gt;메모리 타이밍(Memory timings 또는 RAM timings)은 동기식 동적 랜덤 액세스 메모리(SDRAM) 성능을 설명하는 네 가지 매개변수: CL, TRCD, TRP 및 TRAS로, 클럭 주기 단위입니다. 이들은 일반적으로 7-8-8-24와 같이 하이픈으로 구분된 네 개의 숫자로 표시됩니다. 네 번째 매개변수(RAS)는 종종 생략되며 때로는 다섯 번째 매개변수인 명령 레이트(Command rate)가 추가되기도 하는데, 이는 보통 2T 또는 1T로 표기되거나 2N, 1N으로 쓰이기도 합니다. 이러한 매개변수는 랜덤 액세스 메모리 속도에 영향을 미치는 지연 시간(latency)을 지정합니다. 낮은 숫자는 일반적으로 더 빠른 성능을 의미합니다. 시스템 성능을 결정하는 최종 요소는 실제 지연 시간이며, 이는 보통 나노초 단위로 표시됩니다.&lt;/p&gt;
&lt;p&gt;메모리 타이밍을 실제 지연으로 변환할 때는 시계 주기 단위로 측정된다는 점이 가장 중요합니다. 시계 주기의 시간을 모르면 숫자 세트가 다른 숫자 세트보다 빠른지 알 수 없습니다.&lt;/p&gt;
&lt;p&gt;예를 들어, DDR3-2000 메모리의 클럭 주파수는 1000MHz이고 클럭 주기는 1ns입니다. 이 1ns의 클럭을 기준으로 CL=7은 절대 지연 7ns를 나타냅니다. 반면에 더 빠른 DDR3-2666(클럭 1333MHz, 주기 0.75ns)은 더 큰 CL=9를 사용할 수 있지만, 결과적으로 절대 지연은 6.75ns로 더 짧습니다.&lt;/p&gt;
&lt;p&gt;현대 DIMM은 자동 구성 권장 메모리 타이밍이 포함된 직렬 존재 감지(SPD) ROM 칩을 포함합니다. PC의 BIOS는 성능 향상을 위해 타이밍을 조정할 수 있지만(안정성 저하 위험이 있음), 특정 상황에서는 안정성을 높일 수도 있습니다(예: 권장 타이밍 사용).&lt;/p&gt;
&lt;p&gt;주의: 메모리 대역폭은 메모리의 처리량을 측정하며, 일반적으로 지연 시간보다는 전송 속도에 의해 제한됩니다. SDRAM의 여러 내부 bank를 교차적으로 접근하면 이론상 최고 속도로 연속적인 데이터 전송이 가능합니다. 대역폭을 늘리기 위해서는 지연 시간을 증가시킬 수 있습니다. 구체적으로 말해, 새로운 DDR 메모리 세대는 높은 전송 속도를 가지고 있지만 절대 지연 시간은 크게 변하지 않습니다. 특히 시장에 처음 출시된 제품들은 이전 세대보다 더 긴 지연 시간을 가지는 경향이 있습니다.&lt;/p&gt;
&lt;p&gt;메모리 지연이 증가하더라도 메모리 대역폭을 늘리면 다중 프로세서 또는 여러 실행 스레드를 가진 컴퓨터 시스템의 성능을 향상시킬 수 있습니다. 더 높은 대역폭은 전용 그래픽 메모리가 없는 통합 그래픽 카드의 성능도 높여줄 것입니다.&lt;/p&gt;
&lt;p&gt;메모리 타이밍 파라미터 설명&lt;/p&gt;
&lt;h3 id=&#34;참고-자료&#34;&gt;참고 자료
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;메모리 타이밍 파라미터 설명&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
    </channel>
</rss>
