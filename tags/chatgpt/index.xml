<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>chatgpt on 向叔记事簿</title>
    <link>https://ttf248.github.io/tags/chatgpt/</link>
    <description>Recent content in chatgpt on 向叔记事簿</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 22 Dec 2023 08:44:26 +0800</lastBuildDate><atom:link href="https://ttf248.github.io/tags/chatgpt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AI编程和任务拆解</title>
      <link>https://ttf248.github.io/post/2023/12-22-ai%E7%BC%96%E7%A8%8B%E5%92%8C%E4%BB%BB%E5%8A%A1%E6%8B%86%E8%A7%A3/</link>
      <pubDate>Fri, 22 Dec 2023 08:44:26 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2023/12-22-ai%E7%BC%96%E7%A8%8B%E5%92%8C%E4%BB%BB%E5%8A%A1%E6%8B%86%E8%A7%A3/</guid>
      <description>&lt;p&gt;两年前给站点添加代码区域的拷贝功能，前后折腾了小半天，最终渲染效果有点不如意，作为半吊子前端开发，也没想着改进，能用就行，今年用&lt;code&gt;AI&lt;/code&gt;开发了小程序，对于前端的开发也更加熟悉了，重构一波（AI重新设计）。&lt;/p&gt;
&lt;p&gt;悟道：任务拆解开，很多小任务，&lt;code&gt;AI&lt;/code&gt;开发起来还是顺手的。已经倒闭的小程序，&lt;code&gt;75%&lt;/code&gt;代码由&lt;code&gt;AI&lt;/code&gt;提供，拆解了多个任务交付，人工进行项目代码的&lt;code&gt;组装&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AI辅助编程，生产力的进化</title>
      <link>https://ttf248.github.io/post/2023/02-28-ai%E8%BE%85%E5%8A%A9%E7%BC%96%E7%A8%8B%E7%94%9F%E4%BA%A7%E5%8A%9B%E7%9A%84%E8%BF%9B%E5%8C%96/</link>
      <pubDate>Tue, 28 Feb 2023 17:05:17 +0800</pubDate>
      
      <guid>https://ttf248.github.io/post/2023/02-28-ai%E8%BE%85%E5%8A%A9%E7%BC%96%E7%A8%8B%E7%94%9F%E4%BA%A7%E5%8A%9B%E7%9A%84%E8%BF%9B%E5%8C%96/</guid>
      <description>&lt;p&gt;&lt;code&gt;GitHub Copilot&lt;/code&gt; 发布也不到两年时间，&lt;code&gt;ChatGPT&lt;/code&gt; 问世了，不是很懂背后的原理，都用了一段时间。两个工具的辅助层面完全不同，但是都做到了大幅提高生产力。&lt;/p&gt;
&lt;p&gt;太复杂的事情，&lt;code&gt;AI&lt;/code&gt;还做不到，毕竟他们没有逻辑，有套路的或者说范式固定的事情，训练的语料足够，&lt;code&gt;AI&lt;/code&gt;的效果能打个九分。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
