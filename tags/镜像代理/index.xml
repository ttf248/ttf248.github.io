<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>镜像代理 on 向叔记事簿</title>
        <link>https://ttf248.github.io/tags/%E9%95%9C%E5%83%8F%E4%BB%A3%E7%90%86/</link>
        <description>Recent content in 镜像代理 on 向叔记事簿</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Sat, 04 Jan 2025 18:39:06 +0800</lastBuildDate><atom:link href="https://ttf248.github.io/tags/%E9%95%9C%E5%83%8F%E4%BB%A3%E7%90%86/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Docker 国内镜像代理失效</title>
        <link>https://ttf248.github.io/p/docker-%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E4%BB%A3%E7%90%86%E5%A4%B1%E6%95%88/</link>
        <pubDate>Sat, 04 Jan 2025 18:29:25 +0800</pubDate>
        
        <guid>https://ttf248.github.io/p/docker-%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E4%BB%A3%E7%90%86%E5%A4%B1%E6%95%88/</guid>
        <description>&lt;p&gt;国内服务器部署docker，部署以后，如果公司没有提供镜像中心，开发首先要做的就是配置一个国内的镜像加速地址。巧了今天有台服务器，配置了镜像加速地址，但是发现拉取镜像的时候，一直拉取不到。&lt;/p&gt;
&lt;p&gt;报错信息：&lt;code&gt;Error response from daemon: Get &amp;quot;https://registry-1.docker.io/v2/&amp;quot;: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;故障排查与修复尝试&#34;&gt;故障排查与修复尝试
&lt;/h2&gt;&lt;p&gt;起初，尝试切换至其他镜像加速地址，期望借此解决问题，然而事与愿违，问题依旧。&lt;/p&gt;
&lt;p&gt;紧接着，着手修改本地 DNS 配置，试图从网络解析层面找到突破口，遗憾的是，经过一番调试，故障依然存在。&lt;/p&gt;
&lt;p&gt;此时，本地网络的稳定性已备受质疑，于是果断切换至手机热点，试图绕过可能存在的本地网络故障点，可结果还是令人沮丧，问题毫无改善迹象。&lt;/p&gt;
&lt;h2 id=&#34;问题蔓延&#34;&gt;问题蔓延
&lt;/h2&gt;&lt;p&gt;手头尚有几台部署于国内的服务器，且均安装了 Docker 环境。尝试在这些服务器上拉取镜像，本以为能另辟蹊径，结果发现无一例外，均无法成功拉取，所反馈的报错信息如出一辙，这表明问题并非局限于某一台设备。&lt;/p&gt;
&lt;p&gt;进一步探究发现，镜像代理似乎瞬间失灵，在这紧急关头，迅速切换至境外机器进行尝试，令人稍感欣慰的是，镜像拉取在此处恢复正常，这意味着问题大概率出在国内的网络链路或相关配置上。&lt;/p&gt;
&lt;h2 id=&#34;策略调整迂回解决&#34;&gt;策略调整：迂回解决
&lt;/h2&gt;&lt;p&gt;鉴于国内直接拉取镜像的途径已被重重阻碍，而国外镜像却能正常访问，为尽快推进项目，决定采取迂回战术。首先切换至国外服务器，顺利拉取所需镜像，随后将其推送至国内镜像仓库，以此搭建起一座“数据桥梁”。&lt;/p&gt;
&lt;p&gt;与此同时，同步对 Dockerfile 文件进行修改，将镜像地址替换为适配国内环境的地址，再重新构建镜像，最终成功部署。&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
