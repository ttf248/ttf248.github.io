<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>主题 on 向叔记事簿</title>
        <link>https://ttf248.life/tags/theme/</link>
        <description>Recent content in 主题 on 向叔记事簿</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language><atom:link href="https://ttf248.life/tags/theme/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>闲的蛋疼，想要设计一个中国水墨风格的主题</title>
        <link>https://ttf248.life/p/%E9%97%B2%E7%9A%84%E8%9B%8B%E7%96%BC%E6%83%B3%E8%A6%81%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E4%B8%AD%E5%9B%BD%E6%B0%B4%E5%A2%A8%E9%A3%8E%E6%A0%BC%E7%9A%84%E4%B8%BB%E9%A2%98/</link>
        <pubDate>Tue, 08 Apr 2025 03:42:47 +0800</pubDate>
        
        <guid>https://ttf248.life/p/%E9%97%B2%E7%9A%84%E8%9B%8B%E7%96%BC%E6%83%B3%E8%A6%81%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E4%B8%AD%E5%9B%BD%E6%B0%B4%E5%A2%A8%E9%A3%8E%E6%A0%BC%E7%9A%84%E4%B8%BB%E9%A2%98/</guid>
        <description>&lt;p&gt;五彩斑斓的主页看腻歪了，突然想要走个极简风格，设计一个中国水墨风格的主题。&lt;/p&gt;
&lt;p&gt;由于现在样式表是魔改出来的，针对不同的元素，配置了特定的样式，用于覆盖主题默认的样式。&lt;/p&gt;
&lt;p&gt;没有重构的情况下，尝试用 AI 直接生成一个新的主题，出来的效果，怎么说呢，很不稳定。&lt;/p&gt;
&lt;p&gt;碰巧还遇到了 trae claude 大模型排队，切换到 vscode agent 模式，效果就很差，修改出来的东西，没有任何设计感。&lt;/p&gt;
&lt;p&gt;归根到底，还是自己不懂前端，无法有效的拆解任务交付给AI。&lt;/p&gt;</description>
        </item>
        <item>
        <title>Hugo Module自定义修改主题：思路讲解</title>
        <link>https://ttf248.life/p/hugo-module%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98%E6%80%9D%E8%B7%AF%E8%AE%B2%E8%A7%A3/</link>
        <pubDate>Fri, 15 Nov 2024 22:01:17 +0800</pubDate>
        
        <guid>https://ttf248.life/p/hugo-module%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98%E6%80%9D%E8%B7%AF%E8%AE%B2%E8%A7%A3/</guid>
        <description>&lt;p&gt;翻看历史提交记录，站点切换过很多次主题，每次切换主题都会有一些自定义的修改，这里记录一下自定义修改主题的思路。笔者的&lt;code&gt;Github&lt;/code&gt;也有个仓库，短暂的维护过even主题，后来由于强迫症，非想要升级&lt;code&gt;hugo&lt;/code&gt;编译器到最新版本，导致even主题不兼容，所以又切换到了&lt;code&gt;stack&lt;/code&gt;主题。&lt;/p&gt;
&lt;h2 id=&#34;hugo的模块化&#34;&gt;Hugo的模块化
&lt;/h2&gt;&lt;p&gt;提到模块化，大家可能会想到的是Nginx模块，IDEA插件等等。 通常是我可以通过上传一些模块，来满足我的差异化需求。 之所以大家都喜欢这种模块，主要是因为足够灵活，不用费太大的劲就可以满足自身的需求。 因为很多时候，虽然大体上差不多，但总有一些细节上的差异。 这也正说明软件的复杂度，除了技术上的复杂度，还有业务上的复杂度。 大多数情况下，我们面对的主要是业务复杂度。 这也正是在软件领域，对”隔行如隔山”这句俗语最好的阐述。 如今，不仅互联网行业，金融行业，就算传统的制造业，都已经使用上了信息化系统，来帮助企业的生产和管理。 同样是请假系统，哪怕在同样的行业，不同的公司，都会有所差异。&lt;/p&gt;
&lt;p&gt;而&lt;code&gt;Hugo&lt;/code&gt;的模块和大家印象中的模块有点不一样，并不是以功能为单位，来满足差异化需求。 而是以目录结构为主，来识别相同的结构。&lt;/p&gt;
&lt;p&gt;资料链接：&lt;a class=&#34;link&#34; href=&#34;https://medium.com/@sunwei.xyz/07-hugo%E6%9E%B6%E6%9E%84-hugo%E7%9A%84%E6%A8%A1%E5%9D%97-8ef5a520a822&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;07. Hugo架构 — Hugo的模块&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[[imports]]
path = &amp;quot;github.com/CaiJimmy/hugo-theme-stack/v3&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;git submodule&lt;/code&gt; 方式依旧能用，本文不建议使用，如果引入主题的发生了更新，维护起来会比较麻烦，要单独的 git 仓库管理主题。&lt;/p&gt;
&lt;h2 id=&#34;主题的修改逻辑httpsstackjimmycaicomguidemodify-theme&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://stack.jimmycai.com/guide/modify-theme&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;主题的修改逻辑&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;有了前面模块化的基础概念理解，再来理解自定义主题，就简单那很多了，&lt;code&gt;hugo&lt;/code&gt;现在的主题，也是多个不同的模块组装起来的，我们想要修改其中一个模块，找到对应的模板文件，修改即可。&lt;/p&gt;
&lt;p&gt;摘取自&lt;code&gt;stack&lt;/code&gt;官方文档：&lt;/p&gt;
&lt;p&gt;Using this method, there won&amp;rsquo;t be any file under &lt;code&gt;themes&lt;/code&gt; directory. In order to modify the theme, you will have to copy the file you want to modify to the same directory under &lt;code&gt;layouts&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;For example, in order to modify the &lt;code&gt;themes/hugo-theme-stack/layouts/partials/head/custom.html&lt;/code&gt; file, you will have to copy it to &lt;code&gt;layouts/partials/head/custom.html&lt;/code&gt; and modify it there (copy the code from theme&amp;rsquo;s repository). The same applies to &lt;code&gt;assets&lt;/code&gt; and &lt;code&gt;static&lt;/code&gt; directories。&lt;/p&gt;
&lt;h2 id=&#34;如何找到模板文件&#34;&gt;如何找到模板文件
&lt;/h2&gt;&lt;h3 id=&#34;正统思路&#34;&gt;正统思路
&lt;/h3&gt;&lt;p&gt;翻阅主题的源码文件，理解主题的设计思路，找到对应的模板文件，修改即可。&lt;/p&gt;
&lt;h3 id=&#34;粗暴思路&#34;&gt;粗暴思路
&lt;/h3&gt;&lt;p&gt;笔者并不是很懂前端代码，所以有时候会采用粗暴的方式，比如直接在浏览器中打开对应的页面，找到想要修改的地方，通过&lt;code&gt;审查元素&lt;/code&gt;的方式，定位到&lt;code&gt;css name&lt;/code&gt;，主题源码中搜索，找到对应的文件，复制一份到站点目录，修改即可。&lt;/p&gt;
&lt;h2 id=&#34;小技巧&#34;&gt;小技巧
&lt;/h2&gt;&lt;p&gt;官方默认就提供了一个文件，用于自定义样式，我们需要改造的地方地方，可以通过拆分多个文件，&lt;code&gt;custom.scss&lt;/code&gt; 文件引入我们其他的文件，这样可以更好的管理样式文件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/hugo-module%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98%E6%80%9D%E8%B7%AF%E8%AE%B2%E8%A7%A3/image.png&#34;
	width=&#34;141&#34;
	height=&#34;375&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;alt text&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;37&#34;
		data-flex-basis=&#34;90px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;汇总修改内容6h&#34;&gt;汇总修改内容(6h)
&lt;/h2&gt;&lt;p&gt;现在已经是&lt;code&gt;AI&lt;/code&gt;编码的元年，详细的内容，这里就不详细贴出来了，只是简单的列举一下，本站点的一些修改内容，比如调整复制按钮的样式，重新设置代码的块的样式，&lt;code&gt;ChatGPT&lt;/code&gt;都是能轻松搞定的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整体：全局文字样式，沿用以前 &lt;code&gt;even&lt;/code&gt; 融合 &lt;code&gt;info cn&lt;/code&gt; 的显示风格，中文友好&lt;/li&gt;
&lt;li&gt;首页：右侧导航增加鼠标交互动画&lt;/li&gt;
&lt;li&gt;首页：文章新增摘要预览（耗时颇多，用了取巧的办法实现）&lt;/li&gt;
&lt;li&gt;滚动栏：美化了一下滚动栏的样式&lt;/li&gt;
&lt;li&gt;代码块：引入了 &lt;code&gt;highlight.js&lt;/code&gt; 代码高亮插件，美化代码块样式&lt;/li&gt;
&lt;li&gt;文章详情：部分内容属于转载，新增原作者信息展示，原链接展示&lt;/li&gt;
&lt;li&gt;归档页面：顶部的分类图片，移除主题自带的颜色蒙版，显示原图&lt;/li&gt;
&lt;li&gt;归档页面：新增了按照年份的分类的统计展示面板&lt;/li&gt;
&lt;li&gt;归档页面：两栏显示布局&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;stack&lt;/code&gt; 主题的组件复用率很高，也导致首页文章新增摘要预览耗时颇多，改了对应的组件，文章的详情页面也随之发生了变动，导致正文重复展示内容，&lt;code&gt;golang 模板&lt;/code&gt;的语法也不是很熟悉，所以花费了不少时间，组件之间的参数传递一直没搞定，最后通过取巧的办法，主页单独引入&lt;code&gt;JavaScript&lt;/code&gt;脚本，通过自定义特殊变量，来实现摘要预览。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有时候代码复用率太高也是个问题，会导致修改一个地方，其他地方也会受到影响，所以在修改主题的时候，一定要注意，不要破坏原有的逻辑。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;评论区&#34;&gt;评论区
&lt;/h3&gt;&lt;p&gt;这哥们的修改更加完善：&lt;a class=&#34;link&#34; href=&#34;https://blog.reincarnatey.net/2024/0719-better-waline/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.reincarnatey.net/2024/0719-better-waline/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;本站点简单的启用了 &lt;code&gt;Waline&lt;/code&gt; 评论系统，&lt;code&gt;stack&lt;/code&gt; 主题默认支持 &lt;code&gt;Waline&lt;/code&gt;，只需要在 &lt;code&gt;config.toml&lt;/code&gt; 中配置即可。&lt;/del&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;推荐首页邮箱联系、本站点不开放评论区&lt;/p&gt;
&lt;/blockquote&gt;</description>
        </item>
        
    </channel>
</rss>
