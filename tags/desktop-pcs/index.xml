<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>台式机 on 向叔记事簿</title>
        <link>https://ttf248.life/tags/desktop-pcs/</link>
        <description>Recent content in 台式机 on 向叔记事簿</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language><atom:link href="https://ttf248.life/tags/desktop-pcs/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>内存时序 C36、C30、C28 是什么意思？6000MHz 频率下选哪个更合适？</title>
        <link>https://ttf248.life/p/memory-timing-c36-c30-and-c28-what-do-these-mean-which-one-is-more-suitable-at-a-frequency-of-6000mhz/</link>
        <pubDate>Wed, 24 Sep 2025 21:48:19 +0800</pubDate>
        
        <guid>https://ttf248.life/p/memory-timing-c36-c30-and-c28-what-do-these-mean-which-one-is-more-suitable-at-a-frequency-of-6000mhz/</guid>
        <description>&lt;p&gt;在组装或升级电脑时，我们常常会看到内存条上标注着类似“DDR5-6000 CL36”、“DDR5-6000 CL30”这样的参数。其中，“6000”代表的是内存频率（MHz），而“CL36”、“CL30”中的“CL”则是“CAS Latency”（列地址选通延迟）的缩写，也就是我们常说的“时序”。&lt;/p&gt;
&lt;p&gt;那么，&lt;strong&gt;C36、C30、C28 到底有什么区别？在频率相同的情况下，它们对性能影响大吗？又该如何选择？&lt;/strong&gt; 今天我们就来详细聊聊这个话题。&lt;/p&gt;
&lt;p&gt;以前写到一点内存频率的内容：&lt;a class=&#34;link&#34; href=&#34;https://ttf248.life/p/computer-assembly/&#34; &gt;电脑组装那些事&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;什么是内存时序cas-latency&#34;&gt;什么是内存时序（CAS Latency）？
&lt;/h2&gt;&lt;p&gt;简单来说，&lt;strong&gt;CAS Latency（CL）&lt;/strong&gt; 表示的是内存从接收到读取命令到实际开始输出数据之间需要等待的时钟周期数。这个数值越小，说明内存响应速度越快，延迟越低。&lt;/p&gt;
&lt;p&gt;举个例子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DDR5-6000 CL36：表示在 6000MHz 频率下，内存需要等待 36 个时钟周期才能响应读取请求。&lt;/li&gt;
&lt;li&gt;DDR5-6000 CL30：同样的频率下，只需要 30 个周期。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虽然频率一样，但 CL 值越低，实际延迟（Latency）就越小。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;实际延迟怎么算&#34;&gt;实际延迟怎么算？
&lt;/h2&gt;&lt;p&gt;很多人误以为频率越高性能就一定越好，但其实&lt;strong&gt;真实延迟 = (CL ÷ 频率) × 2000&lt;/strong&gt;（单位：纳秒，ns）。我们来对比一下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;型号&lt;/th&gt;
&lt;th&gt;频率（MHz）&lt;/th&gt;
&lt;th&gt;CL 值&lt;/th&gt;
&lt;th&gt;实际延迟（ns）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;DDR5-6000 CL36&lt;/td&gt;
&lt;td&gt;6000&lt;/td&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;td&gt;(36 ÷ 6000) × 2000 ≈ &lt;strong&gt;12.0 ns&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DDR5-6000 CL30&lt;/td&gt;
&lt;td&gt;6000&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;(30 ÷ 6000) × 2000 ≈ &lt;strong&gt;10.0 ns&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DDR5-6000 CL28&lt;/td&gt;
&lt;td&gt;6000&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;(28 ÷ 6000) × 2000 ≈ &lt;strong&gt;9.33 ns&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;可以看到，&lt;strong&gt;CL28 比 CL36 的实际延迟低了约 22%&lt;/strong&gt;。在对延迟敏感的应用（如游戏、高频交易、实时渲染等）中，这种差异可能会带来可感知的性能提升。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;性能差异真的大吗&#34;&gt;性能差异真的大吗？
&lt;/h2&gt;&lt;p&gt;在日常办公、网页浏览、视频播放等场景中，CL36 与 CL28 的差别几乎无法察觉。但在以下场景中，低时序内存的优势会更明显：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;游戏帧生成时间（Frame Time）稳定性&lt;/strong&gt;：更低的延迟有助于减少卡顿，尤其是在 CPU-bound 的游戏中（如《CS2》《英雄联盟》《永劫无间》等）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内容创作与编译&lt;/strong&gt;：某些依赖内存带宽和延迟的工作流（如大型代码编译、3D 渲染缓存）也会受益。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;超频潜力&lt;/strong&gt;：通常低时序内存使用的颗粒（如海力士 A-die、M-die）体质更好，更适合进一步超频。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不过也要注意：&lt;strong&gt;低时序往往意味着更高的价格和对主板/BIOS兼容性的更高要求&lt;/strong&gt;。如果你的主板不支持 EXPO/XMP 2.0 或 BIOS 较旧，可能无法稳定运行 CL28 的高频内存。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;那么6000mhz-下推荐选哪个&#34;&gt;那么，6000MHz 下推荐选哪个？
&lt;/h2&gt;&lt;p&gt;对于大多数用户，尤其是搭配 &lt;strong&gt;AMD Ryzen 7000/8000 系列处理器&lt;/strong&gt; 的用户，&lt;strong&gt;DDR5-6000 CL30 是目前的“甜点”配置&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;官方 JEDEC 规范推荐频率为 6000MHz，CL30 是 AMD 官方验证的稳定时序；&lt;/li&gt;
&lt;li&gt;性价比高，价格适中，兼容性好；&lt;/li&gt;
&lt;li&gt;实际延迟控制在 10ns 左右，兼顾性能与稳定性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你是&lt;strong&gt;极致性能玩家&lt;/strong&gt;或追求极限帧率，且主板支持良好（如 B650/X670 高端型号），可以考虑 &lt;strong&gt;CL28 甚至 CL26&lt;/strong&gt; 的型号，但要做好可能需要手动调参、电压微调的准备。&lt;/p&gt;
&lt;p&gt;而 &lt;strong&gt;CL36&lt;/strong&gt; 虽然也能用，但通常属于入门级 DDR5 内存，延迟偏高，&lt;strong&gt;除非预算非常紧张，否则不太推荐&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;C36、C30、C28 指的是内存的 CAS Latency（时序）&lt;/strong&gt;，数值越低，延迟越小；&lt;/li&gt;
&lt;li&gt;在相同频率下，CL28 比 CL36 实际延迟低约 22%，性能更有优势；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DDR5-6000 CL30 是目前最均衡的选择&lt;/strong&gt;，适合绝大多数用户；&lt;/li&gt;
&lt;li&gt;追求极致性能可选 CL28，预算有限可接受 CL36，但需权衡延迟与价格。&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>台式升级到2.5G网卡，加速局域网互联</title>
        <link>https://ttf248.life/p/desktop-upgrade-to-2-5g-network-card-accelerates-local-area-network-interconnection/</link>
        <pubDate>Fri, 10 Jan 2025 00:37:52 +0800</pubDate>
        
        <guid>https://ttf248.life/p/desktop-upgrade-to-2-5g-network-card-accelerates-local-area-network-interconnection/</guid>
        <description>&lt;p&gt;台式机硬件三连发，前文我们提到了固态硬盘 PCIE 转接器，老的固态哪里去了呢？当然没有浪费，有没有坏掉，拆下来安装到了新买的&lt;code&gt;机械师创物者Mini-3765H&lt;/code&gt;上（一年前）。&lt;/p&gt;
&lt;p&gt;新机器，硬件规格还是给力的，2.5G 双网口、PCIE4.0、WiFi6。&lt;/p&gt;
&lt;p&gt;最近搬家了房间没有单独的路由器组网，机器都是走无线网络连接，华硕主板台式机的无线网卡性能不太行，也可能是路由器无线接入，局域网之间上传速度不行，导致机器之间的网速不太行。新购买 2.5G 网卡，安装到台式机上。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;至此，主板的插槽用完了：显卡、无线网卡、2.5G 网卡、固态硬盘 PCIE 转接器。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;网络说明&#34;&gt;网络说明
&lt;/h2&gt;&lt;p&gt;两台机器上网还是靠原本的无线网卡，但是两台之间走网线直连，两端都是 2.5G 网卡。怎么网线直连两台机器，这里就不多说明了，网上有很多教程，记得放开防火墙。任选一台作为网关即可。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph TD;
    A[机器1&amp;lt;br&amp;gt;IP: 192.168.4.1&amp;lt;br&amp;gt;子网掩码: 255.255.255.0&amp;lt;br&amp;gt;默认网关: - &amp;lt;br&amp;gt;自动获取DNS] --&amp;gt;|网线直连（2.5G）| B[机器2&amp;lt;br&amp;gt;IP: 192.168.4.2&amp;lt;br&amp;gt;子网掩码: 255.255.255.0&amp;lt;br&amp;gt;默认网关: 192.168.4.1&amp;lt;br&amp;gt;自动获取DNS];
    A --&amp;gt;|无线网卡| Internet;
    B --&amp;gt;|无线网卡| Internet;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;两个网段测速&#34;&gt;两个网段测速
&lt;/h2&gt;&lt;h3 id=&#34;路由器局域网&#34;&gt;路由器局域网
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;C:\Users\core\Desktop\iperf-3.1.3-win32&amp;gt;iperf3.exe -c 192.168.3.237
Connecting to host 192.168.3.237, port 5201
[  4] local 192.168.3.122 port 1656 connected to 192.168.3.237 port 5201
[ ID] Interval           Transfer     Bandwidth
[  4]   0.00-1.00   sec  9.17 MBytes  76.7 Mbits/sec
[  4]   1.00-2.00   sec  9.91 MBytes  83.2 Mbits/sec
[  4]   2.00-3.00   sec  8.74 MBytes  73.3 Mbits/sec
[  4]   3.00-4.00   sec  10.2 MBytes  85.2 Mbits/sec
[  4]   4.00-5.00   sec  9.23 MBytes  77.1 Mbits/sec
[  4]   5.00-6.00   sec  8.80 MBytes  73.9 Mbits/sec
[  4]   6.00-7.01   sec  8.00 MBytes  66.8 Mbits/sec
[  4]   7.01-8.00   sec  7.69 MBytes  64.9 Mbits/sec
[  4]   8.00-9.01   sec  9.72 MBytes  81.1 Mbits/sec
[  4]   9.01-10.01  sec  7.63 MBytes  63.6 Mbits/sec
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bandwidth
[  4]   0.00-10.01  sec  89.0 MBytes  74.6 Mbits/sec                  sender
[  4]   0.00-10.01  sec  89.0 MBytes  74.6 Mbits/sec                  receiver

iperf Done.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;直连局域网&#34;&gt;直连局域网
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;C:\Users\core\Desktop\iperf-3.1.3-win32&amp;gt;iperf3.exe -c 192.168.4.1
Connecting to host 192.168.4.1, port 5201
[  4] local 192.168.4.2 port 1524 connected to 192.168.4.1 port 5201
[ ID] Interval           Transfer     Bandwidth
[  4]   0.00-1.01   sec   178 MBytes  1.48 Gbits/sec
[  4]   1.01-2.00   sec   204 MBytes  1.72 Gbits/sec
[  4]   2.00-3.00   sec   214 MBytes  1.80 Gbits/sec
[  4]   3.00-4.00   sec   229 MBytes  1.92 Gbits/sec
[  4]   4.00-5.00   sec   202 MBytes  1.69 Gbits/sec
[  4]   5.00-6.00   sec   213 MBytes  1.79 Gbits/sec
[  4]   6.00-7.00   sec   230 MBytes  1.93 Gbits/sec
[  4]   7.00-8.00   sec   192 MBytes  1.61 Gbits/sec
[  4]   8.00-9.00   sec   220 MBytes  1.84 Gbits/sec
[  4]   9.00-10.00  sec   230 MBytes  1.93 Gbits/sec
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bandwidth
[  4]   0.00-10.00  sec  2.06 GBytes  1.77 Gbits/sec                  sender
[  4]   0.00-10.00  sec  2.06 GBytes  1.77 Gbits/sec                  receiver

iperf Done.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://wutongsuimeng.github.io/post/%E7%BB%99hugo%E6%B7%BB%E5%8A%A0mermaid%E6%94%AF%E6%8C%81/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;给hugo添加mermaid支持&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>电脑组装那些事</title>
        <link>https://ttf248.life/p/computer-assembly/</link>
        <pubDate>Sat, 18 Jul 2020 14:33:46 +0800</pubDate>
        
        <guid>https://ttf248.life/p/computer-assembly/</guid>
        <description>&lt;p&gt;作者从小对组装电脑充满兴趣，大学后开始接触硬件组装。推荐了硬件性能对比网站和选购建议，包括CPU、固态硬盘、机械硬盘和内存频率等。分享了硬件选购经验和注意事项&lt;/p&gt;
&lt;h3 id=&#34;缘妙不可言&#34;&gt;缘·妙不可言
&lt;/h3&gt;&lt;p&gt;打小呢就想着组装一台自己的电脑，奈何经济条件不允许。好不容易熬到了大学，为了便于携带，配置的也是笔记本。如果非要有个具体的时间点，我是什么时候开始有组装电脑这个念想的，就要说到老家的图书馆。毕竟也是个市区级别的图书馆，不仅有电子阅览室（其实从没去过，据说是按时计费），还有个杂志阅览室，也就是在这里，翻阅到了《大众软件》、《电脑报》这类杂志，对接触电脑不多的我来说，堪称神级科普资料。看到打副本的章节，就想着自己弄个电脑，也去拉怪，当主力输出；看到黑科技呢，幻想自己照着书上的做，也能达到描述的效果（论黑客工具的使用）。虽说高中课业重，就我那会的认知，书要读，玩也要玩，过的也算是“天真烂漫”，打着去图书馆看书的由头，没事就拎着个小包溜达过去，市区不大，一般都是徒步走去图书馆。到了地，吹着空调，看着小说、漫画、游戏杂志，偶尔也看点正经的书籍。&lt;/p&gt;
&lt;p&gt;年纪大了就容易忘事，图书馆引发的还不算是初次萌芽。初中的时候，亲戚家组装过一台电脑，也不知道当初组装那台机器是干嘛用的。操作系统还是 windows 2003，游戏有系统自带的纸牌 + 帝国时代。各种“斗智斗勇”想着偷到钥匙，带着堂弟一起玩游戏。&lt;/p&gt;
&lt;p&gt;刚入初中，学校就有就计算机的初级培训，后来转学，也接触到了一点计算机竞赛的概念。等到了高中，NOIP混过一次。说道这里，就不得不提，校友的力量，高中的计算机大楼是校友捐赠的，包含计算机教学室+图书馆。其实那会也是国内互联网浪潮的初浪。校领导也支持参与计算机竞赛，毕竟前面两届的学长，好几位前辈通过计算机保送了重点大学。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;从未这样回顾过我和电脑这些事。也难怪我毕业后硬是从自动化专业义无反顾的转到了计算机行业，种子早已种下，局中人不自知而已。从小接触的多了，以为自己很厉害，其实也就懂个皮毛，最大的优势也就是最初的那份热情。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;硬件组装&#34;&gt;硬件组装
&lt;/h3&gt;&lt;p&gt;多逛逛卡吧、chiphell、知乎电脑组装的板块，萌新能较为简单的给出一份自己需要的机器清单。2019年后选购CPU，经济条件不充裕的情况下，想要更高的性能，首选AMD。&lt;/p&gt;
&lt;p&gt;推荐一个常用的硬件性能对比网站：&lt;a class=&#34;link&#34; href=&#34;https://cpu.userbenchmark.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://cpu.userbenchmark.com/&lt;/a&gt;，价格这块基本可以和咸鱼的美版做个对比。真大佬可以去咸鱼淘二手的，能便宜很多。如果不是很精通，不推荐去咸鱼，本人就购买了假内存，虽说目前使用没发现问题，不太确定太多了，型号和参数完全对不上。&lt;/p&gt;
&lt;h4 id=&#34;sn550-vs-sn750&#34;&gt;SN550 VS SN750
&lt;/h4&gt;&lt;p&gt;SN550 1TB容量和SN750 1TB容量差别就是，两者持续读写差一倍，一个850MB，一个1.6GB，但日常使用没区别，因为两者4K都一样。当然这里说的是1TB容量的SN550，500G和250G速度顺序读写更慢。其实我觉得只要不是不差钱的，日常使用买SN550就行，我没买这个最大原因不是因为它的顺序读写速度，而是它最大只有1TB容量，而SN750有2TB容量。对我来说，在不额外扩展的情况下，主板的M.2 Nvme接口比这些固态的差价更值钱&lt;/p&gt;
&lt;p&gt;综合网友的结论，入手一块转接板，B150 主板也能支持 M2 接口的固态。&lt;/p&gt;
&lt;h4 id=&#34;机械硬盘选购&#34;&gt;机械硬盘选购
&lt;/h4&gt;&lt;p&gt;机械硬盘目前价格趋于稳定，对于有大量存储需求的用户，需要选购一款合适的机械硬盘，频繁下载资源的用户推荐企业级硬盘，常见的有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;西数金盘&lt;/li&gt;
&lt;li&gt;希捷exos&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;大容量的机械硬盘推荐进行分区，频繁的下载操作固定在某个分区进行，日后出现坏道，可以集中在某个分区，废弃当前分区即可，能有效延长机械硬盘寿命。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;希捷系列&lt;a class=&#34;link&#34; href=&#34;https://www.seagate.com/cn/zh/enterprise-storage/exos-drives/exos-e-drives/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官网介绍&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/computer-assembly/%E5%B8%8C%E6%8D%B7exos1.png&#34;
	width=&#34;589&#34;
	height=&#34;659&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;希捷企业级硬盘概述&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;89&#34;
		data-flex-basis=&#34;214px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/computer-assembly/%E5%B8%8C%E6%8D%B7exos2.png&#34;
	width=&#34;588&#34;
	height=&#34;661&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;希捷企业级硬盘概述&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;88&#34;
		data-flex-basis=&#34;213px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;内存频率&#34;&gt;内存频率
&lt;/h4&gt;&lt;p&gt;日常工作的角度出发，频率不会对性能产生太大的影响。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/computer-assembly/%E5%86%85%E5%AD%98.png&#34;
	width=&#34;407&#34;
	height=&#34;404&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;内存时序&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;241px&#34;
	
&gt; &lt;img src=&#34;https://ttf248.life/p/computer-assembly/%E5%92%B8%E9%B1%BC%E5%86%85%E5%AD%98.png&#34;
	width=&#34;407&#34;
	height=&#34;404&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;咸鱼内存&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;241px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;内存时序（英语：Memory timings或RAM timings）是描述同步动态随机存取存储器（SDRAM）性能的四个参数：CL、TRCD、TRP和TRAS，单位为时钟周期。它们通常被写为四个用破折号分隔开的数字，例如7-8-8-24。第四个参数（RAS）经常被省略，而有时还会加入第五个参数：Command rate（命令速率），通常为2T或1T，也写作2N、1N。这些参数指定了影响随机存取存储器速度的潜伏时间（延迟时间）。较低的数字通常意味着更快的性能。决定系统性能的最终元素是实际的延迟时间，通常以纳秒为单位。&lt;/p&gt;
&lt;p&gt;当将内存时序转换为实际的延迟时，最重要的是注意它是以时钟周期为单位。如果不知道时钟周期的时间，就不可能了解一组数字是否比另一组数字更快。&lt;/p&gt;
&lt;p&gt;举例来说，DDR3-2000内存的时钟频率是1000 MHz，其时钟周期为1 ns。基于这个1 ns的时钟，CL=7给出的绝对延迟为7 ns。而更快的DDR3-2666（时钟1333 MHz，每个周期0.75 ns）则可能用更大的CL=9，但产生的绝对延迟6.75 ns更短。&lt;/p&gt;
&lt;p&gt;现代DIMM包括一个串行存在检测（SPD）ROM芯片，其中包含为自动配置推荐的内存时序。PC上的BIOS可能允许用户调整时序以提高性能（存在降低稳定性的风险），或在某些情况下增加稳定性（如使用建议的时序）。&lt;/p&gt;
&lt;p&gt;注意：内存带宽是测量内存的吞吐量，并通常受到传输速率而非潜伏时间的限制。通过交错访问SDRAM的多个内部bank，有可能以峰值速率连续传输。可能以增加潜伏时间为代价来增加带宽。具体来说，每个新一代的DDR内存都有着较高的传输速率，但绝对延迟没有显著变化，尤其是市场上的第一批新一代产品，通常有着较上一代更长的延迟。&lt;/p&gt;
&lt;p&gt;即便增加了内存延迟，增加内存带宽也可以改善多处理器或多个执行线程的计算机系统的性能。更高的带宽也将提升没有专用显存的集成显卡的性能。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/computer-assembly/%E5%86%85%E5%AD%98%E6%97%B6%E5%BA%8F%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E.png&#34;
	width=&#34;731&#34;
	height=&#34;477&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;内存时序参数说明&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;153&#34;
		data-flex-basis=&#34;367px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;参考资料&#34;&gt;参考资料
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://zh.wikipedia.org/wiki/%E5%86%85%E5%AD%98%E6%97%B6%E5%BA%8F&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;内存时序参数说明&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
    </channel>
</rss>
