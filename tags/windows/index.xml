<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>windows on 向叔记事簿</title>
        <link>https://ttf248.life/tags/windows/</link>
        <description>Recent content in windows on 向叔记事簿</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language><atom:link href="https://ttf248.life/tags/windows/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>PowerShell 7 与持久化设置命令行预测视图</title>
        <link>https://ttf248.life/p/powershell-7-persisting-settings-commandline-prediction-view/</link>
        <pubDate>Fri, 07 Feb 2025 22:19:12 +0800</pubDate>
        
        <guid>https://ttf248.life/p/powershell-7-persisting-settings-commandline-prediction-view/</guid>
        <description>&lt;p&gt;用习惯了 Linux 上面的 zsh，前两天写博客的时候，突然发现 PowerShell 7 也支持持久化设置命令行预测视图，于是就试了一下，发现还是挺好用的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;也不知道是做了什么操作，开启了这个功能，反正就是有了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在当今多样化的操作系统环境下，系统管理员和开发者们一直在寻找一款能够跨平台、高效且功能强大的工具，以满足他们在系统管理和自动化任务方面的需求。PowerShell 7正是这样一款备受瞩目的工具，它不仅提供了强大的脚本编写能力，还实现了跨Windows、Linux和macOS等操作系统的运行，为用户带来了前所未有的便利。&lt;/p&gt;
&lt;h2 id=&#34;powershell-7跨平台的强大工具&#34;&gt;PowerShell 7：跨平台的强大工具
&lt;/h2&gt;&lt;h3 id=&#34;跨平台特性&#34;&gt;跨平台特性
&lt;/h3&gt;&lt;p&gt;PowerShell 7打破了平台的限制，无论是在Windows系统上进行企业级的服务器管理，还是在Linux环境下进行系统运维，亦或是在macOS上进行日常开发任务，用户都可以使用统一的PowerShell 7工具。这极大地提高了工作效率，减少了因平台差异而带来的学习成本和操作复杂性。&lt;/p&gt;
&lt;h3 id=&#34;强大的功能&#34;&gt;强大的功能
&lt;/h3&gt;&lt;p&gt;它具备强大的脚本编写能力，支持面向对象编程、函数、模块等高级编程特性。通过PowerShell 7，用户可以轻松地操作文件系统，对文件和文件夹进行创建、删除、复制、移动等操作；可以访问和修改注册表，对系统的配置进行深度调整；能够管理进程和服务，实现对系统运行状态的有效监控和控制。此外，PowerShell 7还能与各种Windows和非Windows技术进行交互，例如在Active Directory中进行用户和权限管理，在Azure云平台上进行资源调配和管理等。&lt;/p&gt;
&lt;h3 id=&#34;开源生态&#34;&gt;开源生态
&lt;/h3&gt;&lt;p&gt;PowerShell 7是开源的，这一特性使得全球的开发者和爱好者能够积极参与到它的开发和改进中来。大量的开源模块和工具不断涌现，丰富了PowerShell 7的功能和应用场景。用户可以根据自己的需求，在开源社区中找到合适的模块来扩展PowerShell 7的功能，或者贡献自己的代码，推动整个社区的发展。&lt;/p&gt;
&lt;h3 id=&#34;兼容性与稳定性&#34;&gt;兼容性与稳定性
&lt;/h3&gt;&lt;p&gt;PowerShell 7在保持对旧版本PowerShell一定兼容性的同时，引入了许多新的功能和改进。这些改进不仅提升了性能，还增强了稳定性，使得用户在使用过程中能够更加流畅地完成各种任务，减少了因软件故障而导致的工作中断。&lt;/p&gt;
&lt;h2 id=&#34;开启命令行预测视图&#34;&gt;开启命令行预测视图
&lt;/h2&gt;&lt;p&gt;在PowerShell 7的众多实用功能中，&lt;code&gt;Set-PSReadLineOption -PredictionViewStyle ListView&lt;/code&gt; 命令是一个能够提升用户命令行输入体验的实用工具。&lt;/p&gt;
&lt;p&gt;不开启命令，也能实现自动补全，但是仅仅是行内的补全，开启后，可以实现预测视图，以列表的形式展示所有可能的补全选项，用户可以通过上下键选择需要的选项，从而提高了命令输入的准确性和效率。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/powershell-7-persisting-settings-commandline-prediction-view/20250207222546.png&#34;
	width=&#34;814&#34;
	height=&#34;205&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;powershell7&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;397&#34;
		data-flex-basis=&#34;952px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;让命令持久生效的方法&#34;&gt;让命令持久生效的方法
&lt;/h2&gt;&lt;p&gt;为了让 &lt;code&gt;Set-PSReadLineOption -PredictionViewStyle ListView&lt;/code&gt; 命令在每次启动PowerShell时都能生效，我们可以将其添加到PowerShell的配置文件中。PowerShell的配置文件是一个特殊的脚本，在PowerShell启动时会自动执行其中的命令。&lt;/p&gt;
&lt;h3 id=&#34;确定配置文件路径&#34;&gt;确定配置文件路径
&lt;/h3&gt;&lt;p&gt;在PowerShell中，我们可以使用 &lt;code&gt;$PROFILE&lt;/code&gt; 变量来查看配置文件的路径。如果该路径下的文件不存在，用户可以手动创建一个。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;echo $PROFILE
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;打开配置文件&#34;&gt;打开配置文件
&lt;/h3&gt;&lt;p&gt;使用文本编辑器，如功能强大的Notepad++或者轻量级的Visual Studio Code，打开通过 &lt;code&gt;$PROFILE&lt;/code&gt; 变量获取到的配置文件路径对应的文件。&lt;/p&gt;
&lt;h3 id=&#34;添加命令&#34;&gt;添加命令
&lt;/h3&gt;&lt;p&gt;在打开的配置文件中，添加 &lt;code&gt;Set-PSReadLineOption -PredictionViewStyle ListView&lt;/code&gt; 命令。确保命令的书写准确无误，以保证配置文件在执行时能够正确生效。&lt;/p&gt;
&lt;h3 id=&#34;保存配置文件&#34;&gt;保存配置文件
&lt;/h3&gt;&lt;p&gt;完成命令添加后，保存配置文件并关闭文本编辑器。此时，配置文件已经包含了我们希望在每次PowerShell启动时执行的命令。&lt;/p&gt;
&lt;h3 id=&#34;验证设置&#34;&gt;验证设置
&lt;/h3&gt;&lt;p&gt;关闭当前的PowerShell窗口，重新启动PowerShell。在新启动的PowerShell中，输入命令时，命令行输入预测视图样式应该已经按照我们的设置，以列表视图的形式展示，这表明我们的设置已经成功生效。&lt;/p&gt;
&lt;p&gt;通过以上步骤，我们不仅深入了解了PowerShell 7的强大功能和特性，还掌握了如何通过设置命令行输入预测视图样式来提升操作体验，并且学会了如何让这些设置持久生效。希望这些知识能够帮助你在使用PowerShell 7的过程中更加得心应手，高效地完成各种系统管理和自动化任务。&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/PowerShell/PowerShell/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/PowerShell/PowerShell/releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.v2ex.com/t/911909&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.v2ex.com/t/911909&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>台式升级到2.5G网卡，加速局域网互联</title>
        <link>https://ttf248.life/p/desktop-upgrade-to-2-5g-network-card-accelerates-local-area-network-interconnection/</link>
        <pubDate>Fri, 10 Jan 2025 00:37:52 +0800</pubDate>
        
        <guid>https://ttf248.life/p/desktop-upgrade-to-2-5g-network-card-accelerates-local-area-network-interconnection/</guid>
        <description>&lt;p&gt;台式机硬件三连发，前文我们提到了固态硬盘 PCIE 转接器，老的固态哪里去了呢？当然没有浪费，有没有坏掉，拆下来安装到了新买的&lt;code&gt;机械师创物者Mini-3765H&lt;/code&gt;上（一年前）。&lt;/p&gt;
&lt;p&gt;新机器，硬件规格还是给力的，2.5G 双网口、PCIE4.0、WiFi6。&lt;/p&gt;
&lt;p&gt;最近搬家了房间没有单独的路由器组网，机器都是走无线网络连接，华硕主板台式机的无线网卡性能不太行，也可能是路由器无线接入，局域网之间上传速度不行，导致机器之间的网速不太行。新购买 2.5G 网卡，安装到台式机上。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;至此，主板的插槽用完了：显卡、无线网卡、2.5G 网卡、固态硬盘 PCIE 转接器。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;网络说明&#34;&gt;网络说明
&lt;/h2&gt;&lt;p&gt;两台机器上网还是靠原本的无线网卡，但是两台之间走网线直连，两端都是 2.5G 网卡。怎么网线直连两台机器，这里就不多说明了，网上有很多教程，记得放开防火墙。任选一台作为网关即可。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph TD;
    A[机器1&amp;lt;br&amp;gt;IP: 192.168.4.1&amp;lt;br&amp;gt;子网掩码: 255.255.255.0&amp;lt;br&amp;gt;默认网关: - &amp;lt;br&amp;gt;自动获取DNS] --&amp;gt;|网线直连（2.5G）| B[机器2&amp;lt;br&amp;gt;IP: 192.168.4.2&amp;lt;br&amp;gt;子网掩码: 255.255.255.0&amp;lt;br&amp;gt;默认网关: 192.168.4.1&amp;lt;br&amp;gt;自动获取DNS];
    A --&amp;gt;|无线网卡| Internet;
    B --&amp;gt;|无线网卡| Internet;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;两个网段测速&#34;&gt;两个网段测速
&lt;/h2&gt;&lt;h3 id=&#34;路由器局域网&#34;&gt;路由器局域网
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;C:\Users\core\Desktop\iperf-3.1.3-win32&amp;gt;iperf3.exe -c 192.168.3.237
Connecting to host 192.168.3.237, port 5201
[  4] local 192.168.3.122 port 1656 connected to 192.168.3.237 port 5201
[ ID] Interval           Transfer     Bandwidth
[  4]   0.00-1.00   sec  9.17 MBytes  76.7 Mbits/sec
[  4]   1.00-2.00   sec  9.91 MBytes  83.2 Mbits/sec
[  4]   2.00-3.00   sec  8.74 MBytes  73.3 Mbits/sec
[  4]   3.00-4.00   sec  10.2 MBytes  85.2 Mbits/sec
[  4]   4.00-5.00   sec  9.23 MBytes  77.1 Mbits/sec
[  4]   5.00-6.00   sec  8.80 MBytes  73.9 Mbits/sec
[  4]   6.00-7.01   sec  8.00 MBytes  66.8 Mbits/sec
[  4]   7.01-8.00   sec  7.69 MBytes  64.9 Mbits/sec
[  4]   8.00-9.01   sec  9.72 MBytes  81.1 Mbits/sec
[  4]   9.01-10.01  sec  7.63 MBytes  63.6 Mbits/sec
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bandwidth
[  4]   0.00-10.01  sec  89.0 MBytes  74.6 Mbits/sec                  sender
[  4]   0.00-10.01  sec  89.0 MBytes  74.6 Mbits/sec                  receiver

iperf Done.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;直连局域网&#34;&gt;直连局域网
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;C:\Users\core\Desktop\iperf-3.1.3-win32&amp;gt;iperf3.exe -c 192.168.4.1
Connecting to host 192.168.4.1, port 5201
[  4] local 192.168.4.2 port 1524 connected to 192.168.4.1 port 5201
[ ID] Interval           Transfer     Bandwidth
[  4]   0.00-1.01   sec   178 MBytes  1.48 Gbits/sec
[  4]   1.01-2.00   sec   204 MBytes  1.72 Gbits/sec
[  4]   2.00-3.00   sec   214 MBytes  1.80 Gbits/sec
[  4]   3.00-4.00   sec   229 MBytes  1.92 Gbits/sec
[  4]   4.00-5.00   sec   202 MBytes  1.69 Gbits/sec
[  4]   5.00-6.00   sec   213 MBytes  1.79 Gbits/sec
[  4]   6.00-7.00   sec   230 MBytes  1.93 Gbits/sec
[  4]   7.00-8.00   sec   192 MBytes  1.61 Gbits/sec
[  4]   8.00-9.00   sec   220 MBytes  1.84 Gbits/sec
[  4]   9.00-10.00  sec   230 MBytes  1.93 Gbits/sec
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bandwidth
[  4]   0.00-10.00  sec  2.06 GBytes  1.77 Gbits/sec                  sender
[  4]   0.00-10.00  sec  2.06 GBytes  1.77 Gbits/sec                  receiver

iperf Done.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://wutongsuimeng.github.io/post/%E7%BB%99hugo%E6%B7%BB%E5%8A%A0mermaid%E6%94%AF%E6%8C%81/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;给hugo添加mermaid支持&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>华硕主板 Z490 安装磁盘太多，偶发性磁盘无法识别</title>
        <link>https://ttf248.life/p/asus-z490-motherboard-disk-recognition-issues/</link>
        <pubDate>Fri, 10 Jan 2025 00:08:51 +0800</pubDate>
        
        <guid>https://ttf248.life/p/asus-z490-motherboard-disk-recognition-issues/</guid>
        <description>&lt;p&gt;紧接上文，莫名出现无线网卡无法识别的问题，在重建分区之前，网上也查到了其他方案，比如说：主板电池卸载，断电十五分钟；升级最新版本的 BOIS 驱动，但是都有问题。&lt;/p&gt;
&lt;p&gt;想着还有事情要处理，切换到有限网络，从客厅拉网线的到房间，这个时候，问题又来了，有线网络也无法识别。上大招重装系统，出现引导分区丢失。如果是一直出现问题，也不会折腾这么久，华硕这个磁盘冲突，是偶发性的，系统重启不稳定触发。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上周台式机添置了新的磁盘，长江存储的 2T 固态硬盘，M2 接口，然后机器就一直没重启，直到昨天关机了一次。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/asus-z490-motherboard-disk-recognition-issues/20250110002801.png&#34;
	width=&#34;553&#34;
	height=&#34;322&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;磁盘全家福&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;171&#34;
		data-flex-basis=&#34;412px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;重装系统&#34;&gt;重装系统
&lt;/h2&gt;&lt;p&gt;算算时间也都两年没有重装系统，C盘已经不够用了，windows 老问题，日常各种软件都喜欢在 C盘 存点东西。于是，决定重装系统。系统重装以后，网卡问题都正常了，隔天恢复了日常的开发环境，准备做个系统备份，这个时候新的问题来了，系统重启以后，引导分区丢失。&lt;/p&gt;
&lt;p&gt;按照上一篇文章的步骤，重建了引导分区，但是不太稳定，重启以后，引导分区随时可能加载不到，开始怀疑折腾机箱的时候，硬盘线松动了，但是检查了几次，都没有问题。&lt;/p&gt;
&lt;h2 id=&#34;记忆复苏&#34;&gt;记忆复苏
&lt;/h2&gt;&lt;p&gt;很多年前，这台机器加装过一次固态硬盘，那会是新买了一个 PCIE 转换器（插在显卡接口上），没有直接将硬盘安装到主板上。这次，直接安装到主板上，可能是主板的问题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/asus-z490-motherboard-disk-recognition-issues/20250110002148.png&#34;
	width=&#34;325&#34;
	height=&#34;545&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;固态转换器&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;59&#34;
		data-flex-basis=&#34;143px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;主板说明书&#34;&gt;主板说明书
&lt;/h2&gt;&lt;p&gt;主板说明书，存在问题，标注的 SATA 接口的位置和实际的位置不同，由于磁盘太多，接口上都安装了硬盘，老的固态都是 SATA 接口，按照主板说明书，接口之间是存在冲突的，经过实际的测试，发现这个冲突是不稳定触发，触发的时候，就会导致对应的磁盘无法加载，刚好这个是系统磁盘，引导也在对应的磁盘上，系统启动就会出现引导加载失败。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/asus-z490-motherboard-disk-recognition-issues/20250110002401.png&#34;
	width=&#34;807&#34;
	height=&#34;847&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Z490&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;95&#34;
		data-flex-basis=&#34;228px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;解决方案&#34;&gt;解决方案
&lt;/h2&gt;&lt;p&gt;重新安装固态硬盘到 PCIE 转换器上，这个时候，主板上的 SATA 接口就不会有冲突了，系统启动正常。&lt;/p&gt;</description>
        </item>
        <item>
        <title>探秘 ESP 分区、GPT 分区表与 Windows 操作系统的协同奥秘</title>
        <link>https://ttf248.life/p/esp-partitioning-gpt-windows-cooperation/</link>
        <pubDate>Thu, 09 Jan 2025 23:58:20 +0800</pubDate>
        
        <guid>https://ttf248.life/p/esp-partitioning-gpt-windows-cooperation/</guid>
        <description>&lt;p&gt;昨个下班到家，惯例启动台式机，系统启动正常，无法加载无线网卡，以为网卡松动了，拆机，重新安装无线网卡，问题大发了，系统直接无法启动，引导加载失败。&lt;/p&gt;
&lt;p&gt;太久没有折腾台式机，分区引导有点陌生，DisGenius 重新划分一个空白分区（一般习惯划分到磁盘前部），然后分配为 ESP 分区（默认300M），进入 PE 系统重建引导，相关资料网上都能查到。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/esp-partitioning-gpt-windows-cooperation/20250110000433.png&#34;
	width=&#34;330&#34;
	height=&#34;269&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;新建ESP分区&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;122&#34;
		data-flex-basis=&#34;294px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/esp-partitioning-gpt-windows-cooperation/20250110000509.png&#34;
	width=&#34;433&#34;
	height=&#34;355&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;可以去掉MSR分区&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;121&#34;
		data-flex-basis=&#34;292px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在计算机的存储世界里，ESP分区、GPT分区表和Windows操作系统紧密相连，它们各自扮演着独特且关键的角色，共同支撑起系统的稳定运行与高效管理。然而，在深入了解它们之前，不得不提及计算机分区历史长河中的“前辈”——MBR分区表格式，它与后来的新技术相互映照，更凸显出科技演进的脉络。今天，就让我们深入剖析它们的内在关联与精妙之处。&lt;/p&gt;
&lt;h2 id=&#34;一mbr分区表传统硬盘分区的基石&#34;&gt;一、MBR分区表——传统硬盘分区的“基石”
&lt;/h2&gt;&lt;p&gt;MBR，全称主引导记录（Master Boot Record），自个人计算机诞生初期便已存在，统治硬盘分区领域长达数十年之久。&lt;/p&gt;
&lt;h3 id=&#34;1-基本架构&#34;&gt;1. 基本架构
&lt;/h3&gt;&lt;p&gt;它位于硬盘的第一个扇区，也就是 0 号扇区，占用 512 字节空间。这 512 字节主要分为三个部分：一是引导程序代码，负责在计算机启动时加载操作系统的引导加载器，通常为 446 字节；二是磁盘分区表，占据 64 字节，最多可定义 4 个主分区信息，每个分区描述占用 16 字节，记录着分区的起始磁头、扇区、柱面，以及分区类型、大小等关键参数；最后 2 字节为 MBR 结束标志“55 AA”，用于标识该扇区为合法的 MBR。&lt;/p&gt;
&lt;h3 id=&#34;2-历史功绩与局限&#34;&gt;2. 历史功绩与局限
&lt;/h3&gt;&lt;p&gt;在早期，MBR 分区表完全满足了个人计算机相对简单的存储需求。它使得操作系统能够顺利识别硬盘分区，实现数据的有序存储与读取。但随着时代发展，其局限性愈发明显。一方面，受限于 64 字节的分区表空间，最多只能划分 4 个主分区，若要创建更多分区，需借助扩展分区及逻辑分区这种略显复杂的方式，给磁盘管理带来不便；另一方面，其最大仅支持 2TB 的硬盘容量，在如今动辄数 TB 甚至数十 TB 的大容量硬盘面前，显得力不从心，这成为制约存储技术进一步发展的瓶颈。&lt;/p&gt;
&lt;h2 id=&#34;二esp分区系统的隐形启动钥匙&#34;&gt;二、ESP分区——系统的“隐形启动钥匙”
&lt;/h2&gt;&lt;p&gt;ESP，全称为 EFI System Partition，即 EFI 系统分区。它是基于 UEFI（统一可扩展固件接口）标准的电脑所必需的一个特殊分区。&lt;/p&gt;
&lt;h3 id=&#34;1-功能特性&#34;&gt;1. 功能特性
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;启动引导&lt;/strong&gt;：当电脑通电启动，UEFI 固件首先会在硬盘上寻找 ESP 分区，读取其中存放的启动加载程序（如 Windows Boot Manager），进而启动操作系统。这就像是一把精准的钥匙，开启系统启动的大门，没有它，系统将在开机时陷入迷茫，不知何去何从。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;存储驱动&lt;/strong&gt;：ESP 分区还存储了一些系统启动过程中必需的驱动程序，以确保在早期启动阶段，硬件设备（如硬盘控制器、显卡等）能正常工作，为后续操作系统的顺利接管奠定基础。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-空间需求与格式&#34;&gt;2. 空间需求与格式
&lt;/h3&gt;&lt;p&gt;通常情况下，ESP 分区建议大小在 100MB - 500MB 之间，一般分配 200MB 左右即可满足基本需求。其文件系统格式必须为 FAT32，这是因为 UEFI 固件只能识别 FAT32 格式来读取启动文件，确保了兼容性与跨平台性。&lt;/p&gt;
&lt;h2 id=&#34;三gpt分区表硬盘的智能管家&#34;&gt;三、GPT分区表——硬盘的“智能管家”
&lt;/h2&gt;&lt;p&gt;GPT（GUID Partition Table），即全局唯一标识分区表，是一种用来替代传统 MBR 分区表的新型分区方案。&lt;/p&gt;
&lt;h3 id=&#34;1-优势尽显&#34;&gt;1. 优势尽显
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;大容量支持&lt;/strong&gt;：在如今这个数据爆炸的时代，大容量硬盘层出不穷。GPT 分区表突破了 MBR 的 2TB 容量限制，理论上它能够支持高达 9.4ZB（泽字节，1ZB = 1024 EB，1EB = 1024 PB，1PB = 1024 TB）的超大存储空间，为海量数据存储提供了可能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分区数量多&lt;/strong&gt;：与 MBR 最多只能划分 4 个主分区不同，GPT 允许创建多达 128 个分区，这给予用户和系统管理员极大的灵活性，无论是划分多个系统分区、数据分区，还是为特殊用途预留分区，都游刃有余。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可靠性高&lt;/strong&gt;：GPT 分区表采用了冗余备份机制，在硬盘头部和尾部各保存一份分区表信息。当一处分区表损坏时，系统能够自动从另一处备份恢复，大大降低了因分区表故障导致的数据丢失风险，为数据安全保驾护航。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-结构剖析&#34;&gt;2. 结构剖析
&lt;/h3&gt;&lt;p&gt;GPT 分区表由多个部分组成，包括保护 MBR（这是为了兼容传统 BIOS 而保留的一小部分 MBR 结构，但不用于实际分区管理）、GPT 头（存储 GPT 分区表的基本信息，如分区表版本、分区数量、分区表大小等）以及分区项数组（每个分区项详细记录了分区的起始扇区、结束扇区、分区类型 GUID、分区唯一标识符等关键信息）。这些结构相互协作，精准地规划和管理硬盘空间。&lt;/p&gt;
&lt;h2 id=&#34;四windows操作系统用户的数字交互天地&#34;&gt;四、Windows操作系统——用户的“数字交互天地”
&lt;/h2&gt;&lt;p&gt;Windows 作为全球广泛使用的操作系统，构建起人与计算机硬件之间的友好桥梁。&lt;/p&gt;
&lt;h3 id=&#34;1-与-esp-分区和-gpt-分区表的融合&#34;&gt;1. 与 ESP 分区和 GPT 分区表的融合
&lt;/h3&gt;&lt;p&gt;在基于 UEFI 启动的 Windows 系统安装过程中，安装程序会自动创建 ESP 分区，并将启动文件部署其中。同时，会以 GPT 分区表格式对硬盘进行初始化，划分出系统保留分区（用于存放系统关键文件，类似传统 BIOS 下的系统引导文件区域）、Windows 系统分区（安装系统核心文件的地方）以及其他用户自定义的数据分区等。Windows 系统依靠 GPT 分区表精确识别各个分区，通过 ESP 分区顺利启动，三者无缝对接，为用户带来流畅的开机与使用体验。&lt;/p&gt;
&lt;h3 id=&#34;2-系统管理与优化依托&#34;&gt;2. 系统管理与优化依托
&lt;/h3&gt;&lt;p&gt;Windows 在运行过程中，充分利用 GPT 分区表的优势进行磁盘管理。例如，在磁盘管理工具中，能够轻松识别 GPT 分区，方便用户创建、删除、格式化分区，调整分区大小等操作，满足不同阶段的数据存储需求。而且，系统更新、软件安装等过程也与分区布局紧密相关，合理的分区规划有助于提升系统性能与稳定性，减少因磁盘空间不足或分区混乱引发的问题。&lt;/p&gt;
&lt;h2 id=&#34;五实战小贴士维护与故障排查&#34;&gt;五、实战小贴士：维护与故障排查
&lt;/h2&gt;&lt;p&gt;了解了它们的紧密关系，日常维护与故障排查就有章可循。&lt;/p&gt;
&lt;h3 id=&#34;1-磁盘空间管理&#34;&gt;1. 磁盘空间管理
&lt;/h3&gt;&lt;p&gt;定期检查 ESP 分区空间，避免因安装过多启动项相关软件导致空间不足，影响系统启动。对于 GPT 分区下的数据分区，合理规划存储，及时清理无用文件，防止单个分区爆满影响系统运行。&lt;/p&gt;
&lt;h3 id=&#34;2-启动故障排查&#34;&gt;2. 启动故障排查
&lt;/h3&gt;&lt;p&gt;若遇到系统无法启动，首先检查 ESP 分区是否损坏或文件丢失。可以借助 UEFI 固件自带的启动项修复工具，或者 Windows 安装介质进入修复环境，重建 ESP 分区的启动文件。若怀疑 GPT 分区表故障，利用专业磁盘工具（如 DiskGenius）检查分区表完整性，尝试修复备份分区表信息，找回丢失分区。&lt;/p&gt;
&lt;p&gt;ESP 分区、GPT 分区表和 Windows 操作系统宛如一个精密协作的团队，各自发挥专长，为我们打造稳定、高效的计算机使用环境。深入理解它们，不仅能帮助我们在系统安装、维护时得心应手，更能让我们洞悉计算机底层运行逻辑，畅游数字世界。与此同时，回顾 MBR 分区表的兴衰，更让我们感慨科技进步的力量，它推动着存储技术不断向前，以适应日益增长的数据存储需求。&lt;/p&gt;</description>
        </item>
        <item>
        <title>Windows自带的磁盘清理工具：存储</title>
        <link>https://ttf248.life/p/windows-disk-cleanup-storage/</link>
        <pubDate>Mon, 06 Jan 2025 19:29:45 +0800</pubDate>
        
        <guid>https://ttf248.life/p/windows-disk-cleanup-storage/</guid>
        <description>&lt;p&gt;从什么版本开始的我也不清楚，但是在&lt;code&gt;Windows 11&lt;/code&gt;中，磁盘清理工具已经有了很大的改进，变得更加智能了。&lt;/p&gt;
&lt;p&gt;重点它是官方的工具，不会误删文件，不会有广告，不会有弹窗，不会有后台进程，不会有任何不必要的东西。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;Windows 11&lt;/code&gt;中，可以通过&lt;code&gt;设置&lt;/code&gt;-&lt;code&gt;系统&lt;/code&gt;-&lt;code&gt;存储&lt;/code&gt;-&lt;code&gt;临时文件&lt;/code&gt;来打开磁盘清理工具。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/windows-disk-cleanup-storage/20250106194453.png&#34;
	width=&#34;1041&#34;
	height=&#34;775&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;存储界面&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;134&#34;
		data-flex-basis=&#34;322px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;普通用户选择&lt;code&gt;清理建议&lt;/code&gt;即可，系统会根据你的使用情况，给出一些建议。&lt;/p&gt;
&lt;p&gt;笔者作为一个开发者，磁盘上有很多临时文件，所以选择&lt;code&gt;临时文件&lt;/code&gt;，里面包含了很多临时文件，比如&lt;code&gt;Visual Studio&lt;/code&gt;的临时文件，&lt;code&gt;Windows Update&lt;/code&gt;的临时文件等等。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/windows-disk-cleanup-storage/Snipaste_2024-12-19_13-39-51.png&#34;
	width=&#34;465&#34;
	height=&#34;980&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;临时文件&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;47&#34;
		data-flex-basis=&#34;113px&#34;
	
&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>Windows平台快速统计文件夹大小</title>
        <link>https://ttf248.life/p/windows-platform-quick-folder-size-statistics/</link>
        <pubDate>Mon, 01 Aug 2022 19:54:18 +0800</pubDate>
        
        <guid>https://ttf248.life/p/windows-platform-quick-folder-size-statistics/</guid>
        <description>&lt;p&gt;&lt;code&gt;Linux&lt;/code&gt; 平台很简单 &lt;code&gt;du -sh *&lt;/code&gt; 一行代码就搞定了。&lt;code&gt;Windows&lt;/code&gt; 怎么办呢？磁盘很多，想清理一波，文件很多的情况下，系统自带的资源管理器，统计文件夹大小，速度慢的让你想放弃&lt;/p&gt;
&lt;h2 id=&#34;everything&#34;&gt;Everything
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;windows&lt;/code&gt; 平台下做开发的朋友，没有亲手用过 &lt;code&gt;everything&lt;/code&gt;，也应该听朋友提过。搜索速度远超系统自带的资源管理器。既然系统层面支持快速索引文件，肯定就能找到类似的工具，建立文件索引的同时，统计下文件的大小。&lt;/p&gt;
&lt;h2 id=&#34;wiztree&#34;&gt;WizTree
&lt;/h2&gt;&lt;p&gt;官网：&lt;a class=&#34;link&#34; href=&#34;https://www.diskanalyzer.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.diskanalyzer.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;普通的安装模式或者绿色版本解压运行&lt;/p&gt;
&lt;p&gt;速度快，数据展示类型丰富，左侧是树状图模式，右边是文件类型，当然也有图形化展示，在软件底栏。&lt;/p&gt;
&lt;h2 id=&#34;spacesnifferupdate-2023-不再维护更新了&#34;&gt;SpaceSniffer(update 2023 不再维护更新了)
&lt;/h2&gt;&lt;p&gt;软件官网：&lt;a class=&#34;link&#34; href=&#34;http://www.uderzo.it/main_products/space_sniffer/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.uderzo.it/main_products/space_sniffer/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;操作很简单，选择对应的盘符，软件会用图形化的方式，展示文件夹体积，体积越大，图像中对应的矩阵也就越大，其余操作，自己点点就明白了，支持输入条件过滤文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文件体积过滤&lt;/li&gt;
&lt;li&gt;文件日期过滤&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/windows-platform-quick-folder-size-statistics/space_sniffer.gif&#34;
	width=&#34;960&#34;
	height=&#34;540&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;基础用法&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/windows-platform-quick-folder-size-statistics/advance.gif&#34;
	width=&#34;960&#34;
	height=&#34;540&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;高级用法&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;参考资料
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://moe.best/software/spacesniffer.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://moe.best/software/spacesniffer.html&lt;/a&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>Windows平台编辑超大型文件：EmEditor (Text Editor)</title>
        <link>https://ttf248.life/p/windows-platform-edit-large-files-emeditor-text-editor/</link>
        <pubDate>Sun, 31 Jul 2022 23:21:24 +0800</pubDate>
        
        <guid>https://ttf248.life/p/windows-platform-edit-large-files-emeditor-text-editor/</guid>
        <description>&lt;p&gt;上海国安数据库事件，黑产圈子里面闹的沸沸扬扬，也不知道真假，过两年如果还记得，再回头看看。根据以往的经验，更新了一波本地的社工数据库资料，看到一个巨型SQL文件：17.9G，一般的文本编辑器，预览都是个问题，更别说打开了，和网友闲聊，提到了：EmEditor。&lt;/p&gt;
&lt;h2 id=&#34;正文&#34;&gt;正文
&lt;/h2&gt;&lt;p&gt;官网：&lt;a class=&#34;link&#34; href=&#34;https://www.emeditor.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.emeditor.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;周末抽空试了一下，挺方便的，设计上就支持编辑大型文件，内存足够的情况下，整个文件都载入到内存中，搜索、编辑速度都挺快，也支持分割文件。&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
