<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>github on 向叔记事簿</title>
        <link>https://ttf248.life/tags/github/</link>
        <description>Recent content in github on 向叔记事簿</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language><atom:link href="https://ttf248.life/tags/github/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>合并 PullRequest 到 Fork 的仓库</title>
        <link>https://ttf248.life/p/%E5%90%88%E5%B9%B6-pullrequest-%E5%88%B0-fork-%E7%9A%84%E4%BB%93%E5%BA%93/</link>
        <pubDate>Wed, 07 May 2025 18:44:03 +0800</pubDate>
        
        <guid>https://ttf248.life/p/%E5%90%88%E5%B9%B6-pullrequest-%E5%88%B0-fork-%E7%9A%84%E4%BB%93%E5%BA%93/</guid>
        <description>&lt;p&gt;&lt;code&gt;github-readme-stats&lt;/code&gt; 是一个 GitHub 个人资料的统计信息生成器，允许用户在其 GitHub 个人资料中显示各种统计信息和图表。它提供了多种自定义选项，可以根据用户的需求进行调整。&lt;/p&gt;
&lt;p&gt;笔者管理仓库习惯按照项目分组，github 不支持仓库分组，只能通过拆分不同的组织来实现。&lt;code&gt;github-readme-stats&lt;/code&gt; 最新分支无法支持跨越不同组织的仓库统计，笔者 fork 了一个分支，合并了对应的代码。&lt;/p&gt;
&lt;h2 id=&#34;最终效果&#34;&gt;最终效果
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats-chi-one-17.vercel.app/api?username=ttf248&amp;amp;hide_title=true&amp;amp;show_icons=true&amp;amp;hide=contribs&amp;amp;line_height=24&amp;amp;include_all_commits=true&amp;amp;count_private=true&amp;amp;bg_color=0000&amp;amp;text_color=8A919F&amp;amp;locale=cn&amp;amp;role=OWNER,COLLABORATOR,ORGANIZATION_MEMBER&amp;amp;timstamp=1746608356&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;GitHub Stats&#34;
	
	
&gt;
&lt;img src=&#34;https://github-readme-stats-chi-one-17.vercel.app/api/top-langs/?username=ttf248&amp;amp;hide_title=true&amp;amp;hide=html,javascript,css&amp;amp;layout=compact&amp;amp;bg_color=0000&amp;amp;text_color=8A919F&amp;amp;locale=cn&amp;amp;role=OWNER,COLLABORATOR,ORGANIZATION_MEMBER&amp;amp;timstamp=1746608356&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Top Languages&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;pull-request-原始地址&#34;&gt;Pull Request 原始地址
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/anuraghazra/github-readme-stats/pull/2459&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Adds the ability to include data from organization repositories&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;合并-pullrequest-到-fork-的仓库&#34;&gt;合并 PullRequest 到 Fork 的仓库
&lt;/h2&gt;&lt;p&gt;要将某个 &lt;strong&gt;Pull Request (PR)&lt;/strong&gt; 合并到你 &lt;strong&gt;fork 的仓库&lt;/strong&gt;，有几种方式可以做到，取决于你是想：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;从&lt;strong&gt;上游（upstream）仓库&lt;/strong&gt;合并 PR 到你的 fork，还是&lt;/li&gt;
&lt;li&gt;从其他人的 fork 中合并 PR 到你的 fork，或者&lt;/li&gt;
&lt;li&gt;合并一个开在你 fork 上的 PR（比如别人给你 fork 提了个 PR）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我先给你一个最常见的场景：&lt;strong&gt;你 fork 了一个仓库，想把上游的某个 PR 合并到你的 fork&lt;/strong&gt;。操作流程如下👇：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;-方法一命令行方式最通用&#34;&gt;✅ 方法一：命令行方式（最通用）
&lt;/h3&gt;&lt;h4 id=&#34;步骤-1克隆你自己的-fork&#34;&gt;步骤 1：克隆你自己的 fork
&lt;/h4&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/你的用户名/仓库名.git
cd 仓库名
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;步骤-2添加-upstream原仓库地址&#34;&gt;步骤 2：添加 upstream（原仓库地址）
&lt;/h4&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git remote add upstream https://github.com/原作者用户名/仓库名.git
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;步骤-3抓取-upstream-的-pr-分支&#34;&gt;步骤 3：抓取 upstream 的 PR 分支
&lt;/h4&gt;&lt;p&gt;找到你想合并的 PR 编号，例如 PR #123。&lt;/p&gt;
&lt;p&gt;你可以这样拉取该 PR 的代码：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git fetch upstream pull/123/head:pr-123
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;步骤-4切换并合并分支&#34;&gt;步骤 4：切换并合并分支
&lt;/h4&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout main    # 或者你自己的目标分支
git merge pr-123
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果一切正常，你可以推送到你 fork 上的 GitHub 仓库：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push origin main
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3 id=&#34;-方法二github-网页界面简单但有限&#34;&gt;✅ 方法二：GitHub 网页界面（简单但有限）
&lt;/h3&gt;&lt;p&gt;如果你在 GitHub 网页上看到某个 PR 是对上游仓库的，你可以：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;进入该 PR 页面。&lt;/li&gt;
&lt;li&gt;点击右上角 “&lt;strong&gt;Commits&lt;/strong&gt;” 或 “&lt;strong&gt;Files changed&lt;/strong&gt;”，看这个 PR 是基于哪个分支。&lt;/li&gt;
&lt;li&gt;在你的 fork 页面，新建一个分支，然后手动 cherry-pick PR 的 commit（需要点 Git 技术）。&lt;/li&gt;
&lt;li&gt;或者点“&lt;strong&gt;Open in GitHub Desktop&lt;/strong&gt;”，用 GUI 工具来合并。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;-如果别人是对你的-fork-提了-pr&#34;&gt;🚀 如果别人是对你的 fork 提了 PR
&lt;/h3&gt;&lt;p&gt;你就直接进入 PR 页面，点击 “&lt;strong&gt;Merge pull request&lt;/strong&gt;” 按钮即可。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;需要我根据你现在的具体场景（比如 PR 链接、你是用网页还是命令行）来手把手演示吗？也可以给我具体链接，我帮你分析最简单的做法。&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
