<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>字节 on 向叔记事簿</title>
        <link>https://ttf248.life/tags/byte/</link>
        <description>Recent content in 字节 on 向叔记事簿</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language><atom:link href="https://ttf248.life/tags/byte/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>字节AI编码新范式 SOLO</title>
        <link>https://ttf248.life/p/bytedance-ais-solo-encoding-new-paradigm/</link>
        <pubDate>Thu, 14 Aug 2025 21:49:06 +0800</pubDate>
        
        <guid>https://ttf248.life/p/bytedance-ais-solo-encoding-new-paradigm/</guid>
        <description>&lt;p&gt;以前用的产品，在进行代码开发的时候，大差不差，但是字节的SOLO，在代码开发的时候，就有了很大的不同。最开始通过邀请码参与内测，现在是提交邮箱，等待审核，审核通过后，就可以使用了。忘记什么时候进行的申请，今天打开 Trae 收到了审核通过的消息。&lt;/p&gt;
&lt;h2 id=&#34;字节solo的优势&#34;&gt;字节SOLO的优势
&lt;/h2&gt;&lt;p&gt;仿照正常项目开发的流程，引入了UI设计、需求分析、功能设计、技术方案实现，最后才是代码的开发。怎么说的，整体的交互逻辑对于小白是更加友好的，如果是复杂的项目，还是老的模式更加好用，AI作为辅助工具，进行代码的修改优化。&lt;/p&gt;
&lt;h2 id=&#34;港美股app开发&#34;&gt;港美股APP开发
&lt;/h2&gt;&lt;p&gt;没错，标题就是我写的 Prompt 语句，没有任何额外的描述。在 SOLO 模式下面，先输出了需求文档、技术架构文档，用户如果确认没有问题，就会进行代码的开发。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/ttf248/ai-coding-trae-solo/blob/master/.trae/documents/%E6%B8%AF%E7%BE%8E%E8%82%A1APP%E4%BA%A7%E5%93%81%E9%9C%80%E6%B1%82%E6%96%87%E6%A1%A3.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;需求文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/ttf248/ai-coding-trae-solo/blob/master/.trae/documents/%E6%B8%AF%E7%BE%8E%E8%82%A1APP%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84%E6%96%87%E6%A1%A3.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;技术架构文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;怎么说呢，不说设计的特别完美，当成初稿用完全是可以的。由于本人并没有 UI 的设计经验，没有测试 Figma 导入设计稿的功能。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;代码构建的过程中，也发现一些文档，SOLO 模式下面，AI 会尝试自行处理一切存在的问题，比如说，数据库在我本地，需要调增数据库的字段设计，会先生成对应的脚本，然后编写 js 脚本执行数据库脚本。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;也有开始看资料没发现的亮点，任务拆解功能，港美股那会的资料没有截图，这里用了以前的漫画阅读器项目。字节也是不差钱，一次请求，能执行一堆任务，但是这个场景实际也不多，新项目才会大量的消耗 token，当用户有了依赖性，这里才是赚钱的地方。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/bytedance-ais-solo-encoding-new-paradigm/20250814215722.png&#34;
	width=&#34;571&#34;
	height=&#34;236&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;任务拆解功能&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;241&#34;
		data-flex-basis=&#34;580px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;上面的都是优势，也有一个不足的地方，测试的项目都是生成的 web 网页，没有详细测试原生客户端的开发是否好用，比如：安卓原生、C# 客户端。&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
