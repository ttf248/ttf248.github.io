<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Stable-Diffusion on 向叔记事簿</title>
        <link>https://ttf248.github.io/tags/stable-diffusion/</link>
        <description>Recent content in Stable-Diffusion on 向叔记事簿</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 19 Oct 2023 19:49:54 +0800</lastBuildDate><atom:link href="https://ttf248.github.io/tags/stable-diffusion/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Stable-diffusion-从零安装的恩怨情仇</title>
        <link>https://ttf248.github.io/p/stable-diffusion-%E4%BB%8E%E9%9B%B6%E5%AE%89%E8%A3%85%E7%9A%84%E6%81%A9%E6%80%A8%E6%83%85%E4%BB%87/</link>
        <pubDate>Thu, 13 Apr 2023 00:23:54 +0800</pubDate>
        
        <guid>https://ttf248.github.io/p/stable-diffusion-%E4%BB%8E%E9%9B%B6%E5%AE%89%E8%A3%85%E7%9A%84%E6%81%A9%E6%80%A8%E6%83%85%E4%BB%87/</guid>
        <description>&lt;p&gt;国内的资料，基本都在推荐&lt;strong&gt;秋叶&lt;/strong&gt;大佬的一键部署包，想着都是基于&lt;code&gt;Python&lt;/code&gt;的开源项目，部署也不会很复杂，试试从零开始。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;折腾AI生成图，特意更换了显卡，&lt;code&gt;3060 12g&lt;/code&gt;入门版本；服役七年的&lt;code&gt;960&lt;/code&gt;光荣下线&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;核心的&lt;code&gt;pytorch cuda&lt;/code&gt;安装，以前编写&lt;code&gt;pyhton&lt;/code&gt;游戏辅助脚本时，本地安装过，没想到还是碰到坑，&lt;code&gt;cuda&lt;/code&gt;加密一直无法激活。&lt;/p&gt;
&lt;h2 id=&#34;待处理&#34;&gt;待处理
&lt;/h2&gt;&lt;p&gt;1.重新规划文章结构，先介绍 pytorch，版本的对应关系，如何查看版本
2.本地如何从零开始新建虚拟环境，部署 Pytorch
3.翻译稿子，从零开始 stable diffusion &lt;a class=&#34;link&#34; href=&#34;https://stable-diffusion-art.com/install-windows/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stable-diffusion-art.com/install-windows/&lt;/a&gt;
4.整理参考资料&lt;/p&gt;
&lt;h2 id=&#34;步骤&#34;&gt;步骤
&lt;/h2&gt;&lt;p&gt;用中文搜索可能找不到相关一步一步安装的教程。在&lt;code&gt;Google&lt;/code&gt;里面你用英文去搜索，有很多类似的教程，就是从零开始。介绍了一下，我们需要安装&lt;code&gt;git&lt;/code&gt;，然后又说明了一下，我们需要安装&lt;code&gt;python&lt;/code&gt;。然后就是你去把仓库下载过来，直接双击脚本搞定了。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/AUTOMATIC1111/stable-diffusion-webui&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/AUTOMATIC1111/stable-diffusion-webui&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;详细的使用和答疑，翻看&lt;code&gt;issues&lt;/code&gt;，&lt;a class=&#34;link&#34; href=&#34;https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我也不知道为什么就没人解释这个仓库是干嘛的。其实从名字也不难看出来，它是一个界面控制台，让我们用起来更方便。实际上在安装的时候，他会去下载官方的仓库内容，获取实际的&lt;code&gt;SD&lt;/code&gt;代码。&lt;/p&gt;
&lt;p&gt;仓库呢同时也做了一个安装启动脚本。会自动识别当前文件夹，是否有&lt;code&gt;Python&lt;/code&gt;虚拟环境。如果有的话默认使用当前路径的的&lt;code&gt;python&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果是纯小白用户，建议看一下：&lt;a class=&#34;link&#34; href=&#34;https://stable-diffusion-art.com/install-windows/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stable-diffusion-art.com/install-windows/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;pytorch&#34;&gt;pytorch
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://pytorch.org/get-started/locally/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://pytorch.org/get-started/locally/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里才是我今天想说的，首先你不要听他们的步骤直接启动脚本。Python通过requirement文件去安装依赖库，这个都是小问题。核心就是你的显卡版本驱动的版本，需要和pytorch对应。这个呢，也有很多人介绍相应的关系，网上找一找就有了。&lt;/p&gt;
&lt;p&gt;参考：&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/weixin_40660408/article/details/129896700&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/weixin_40660408/article/details/129896700&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;创建一个虚拟环境对，就是一个空的虚拟环境，你在里面直接先去官网执行脚本，把pytorch安装好了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python -c &lt;span class=&#34;s2&#34;&gt;&amp;#34;import torch; print(torch.version.cuda)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python -c &lt;span class=&#34;s2&#34;&gt;&amp;#34;import torch; print(torch.__version__, torch.cuda.is_available())&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面两个脚本可以检查一下你需要安装的cuda版本，也能检查一下你安装是否成功了。&lt;/p&gt;
&lt;p&gt;这里不建议花里胡哨的操作，你先按照官方页面的逻辑复制过来，直接安装就好了，直接pip去安装，你的pytorch很有可能失败，或者没有激活cuda。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;重点：文件夹的路径不要有乱七八糟的东西，不然很有可能导致pytorch无法使用。&lt;/p&gt;
&lt;p&gt;中间来来回回安装了很多次，也尝试了把官方的安装文件下载下来手动去安装。就是想着升级一下2.0的版本，因为官方的文档说2.0速度会快一些。但是之前用的不多，也不知道Python的版本和这个是不是有影响。中间呢也查看了官方的手册，说的是建议用3.8的版本。这里就产生了一个小冲突，之前用过一键安装部署包，它里面是3.10的版本。最后就是从零开始先新建文件夹，创建虚拟环境，确保torch已经安装成功了。&lt;/p&gt;
&lt;p&gt;然后把这个安装好的虚拟环境移动到web UI的文件夹里面。这个时候再去启动脚本安装，其他的依赖问题就不大了。&lt;/p&gt;
&lt;p&gt;移动后，需要执行：python -m pip install &amp;ndash;upgrade &amp;ndash;force-reinstall pip，修复一下 pip&lt;/p&gt;
&lt;p&gt;可能看起来挺莫名其妙的，但是这个地方折腾了挺久的。因为它一直无法正确的识别我torch。为了排除所有的干扰因素，才想到先安装它，再去安装其他的依赖库。&lt;/p&gt;
&lt;h2 id=&#34;xformers&#34;&gt;Xformers
&lt;/h2&gt;&lt;p&gt;建议开启，能加速图像生成和减少现存占用，副作用，同一组参数，&lt;strong&gt;生成的图像相对不是那么稳定&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Xformers&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;stable-diffusion-webui:Xformers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://huggingface.co/docs/diffusers/optimization/xformers&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;huggingface optimization&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Optimization Ratio&lt;/th&gt;
&lt;th&gt;Time taken&lt;/th&gt;
&lt;th&gt;Torch active/reserved&lt;/th&gt;
&lt;th&gt;Sys VRAM&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;100.00%&lt;/td&gt;
&lt;td&gt;2m 57.03s&lt;/td&gt;
&lt;td&gt;7440/10058 MiB&lt;/td&gt;
&lt;td&gt;12288/12288 MiB (100.0%)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;51.02%&lt;/td&gt;
&lt;td&gt;1m 29.21s&lt;/td&gt;
&lt;td&gt;4547/7164 MiB&lt;/td&gt;
&lt;td&gt;9298/12288 MiB (75.67%)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;masterpiece&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;,&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;best quality&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;,&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;high detial&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;,&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;realistic,&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Industrial age city, deep canyons in the middle,chinese architectural streets,bazaars, Bridges, &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;rainy days:1.2&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;steampunk:0.8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, chinese architecture
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Negative prompt: nsfw,&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;cowboy&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;,&lt;span class=&#34;o&#34;&gt;(((&lt;/span&gt;pubic&lt;span class=&#34;o&#34;&gt;)))&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;((((&lt;/span&gt;pubic_hair&lt;span class=&#34;o&#34;&gt;))))&lt;/span&gt;sketch, duplicate, ugly, huge eyes, text, logo, monochrome, worst face, &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;bad and mutated hands:1.3&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;worst quality:2.0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;low quality:2.0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;blurry:2.0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, horror, geometry, bad_prompt, &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;bad hands&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;missing fingers&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, multiple limbs, bad anatomy, &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;interlocked fingers:1.2&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, Ugly Fingers, &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;extra digit and hands and fingers and legs and arms:1.4&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, crown braid, &lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;2girl&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;deformed fingers:1.2&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;long fingers:1.2&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;,succubus wings,horn,succubus horn,succubus hairstyle, &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;bad-artist-anime&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, bad-artist, bad hand, borrowed character, text focus, watermark, sample watermark, character watermark, lofter username, photo date watermark, movie poster, magazine cover, journal, cover, cover page, doujin cover, album cover, manga cover, brand name imitation, EasyNegative,Tights, silk stockings,shorts
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Steps: 35, Sampler: DPM adaptive, CFG scale: 5.5, Seed: 2223996555, Size: 1088x1088, Model hash: 543bcbc212, Model: base_Anything-V3.0-pruned, Clip skip: 2, ENSD: &lt;span class=&#34;m&#34;&gt;31337&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;后记&#34;&gt;后记
&lt;/h2&gt;&lt;p&gt;为什么不是推荐那个一键部署包，因为他那个包里面，有部分设置是作者私人定制过的，和官方原模原样的是不一样的。如果你是初学者，你可能不知道为什么要设置那些参数最好的逻辑还是先用官方给的。随着你用的时间越来越长，多去看看官方的手册，你就知道哪些参数需要调整了。&lt;/p&gt;
&lt;h2 id=&#34;显卡的选择&#34;&gt;显卡的选择
&lt;/h2&gt;&lt;p&gt;数据货币矿难之后, 显卡的价格相对来说不是那么高了，普通的入门玩家，&lt;code&gt;3060&lt;/code&gt;和&lt;code&gt;3060ti&lt;/code&gt;之间抉择，一般都会推荐大显存&lt;code&gt;12G&lt;/code&gt;版本的3060，毕竟能生成更大分辨率的图，为什么需要更大的分辨率，因为你可以在生成的时候，把分辨率调大，这样生成的图像就会更加清晰，更加细腻。如果你是想要生成一些小图，那么&lt;code&gt;8G&lt;/code&gt;的显存也是够用的。&lt;/p&gt;
&lt;p&gt;还有一点，&lt;strong&gt;高清放大&lt;/strong&gt;选项，具化细节，让画面细节更加丰富，也需要更多的显存。&lt;/p&gt;
&lt;p&gt;以下是NVIDIA GeForce GTX 970、GeForce RTX 3060 Ti、GeForce RTX 3060、GeForce RTX 3080和GeForce RTX 3080 Ti的单精度（FP32）、半精度（FP16）和双精度（FP64）浮点数计算能力的规格汇总表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;显卡型号&lt;/th&gt;
&lt;th&gt;发布年份&lt;/th&gt;
&lt;th&gt;单精度浮点数计算能力（TFLOPS）&lt;/th&gt;
&lt;th&gt;半精度浮点数计算能力（TFLOPS）&lt;/th&gt;
&lt;th&gt;双精度浮点数计算能力（TFLOPS）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;GeForce GTX 970&lt;/td&gt;
&lt;td&gt;2014&lt;/td&gt;
&lt;td&gt;3.49&lt;/td&gt;
&lt;td&gt;87.2&lt;/td&gt;
&lt;td&gt;0.109&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GeForce RTX 3060 Ti&lt;/td&gt;
&lt;td&gt;2020&lt;/td&gt;
&lt;td&gt;16.2&lt;/td&gt;
&lt;td&gt;32.4&lt;/td&gt;
&lt;td&gt;0.51&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GeForce RTX 3060&lt;/td&gt;
&lt;td&gt;2021&lt;/td&gt;
&lt;td&gt;12.7&lt;/td&gt;
&lt;td&gt;25.4&lt;/td&gt;
&lt;td&gt;0.39&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GeForce RTX 3080&lt;/td&gt;
&lt;td&gt;2020&lt;/td&gt;
&lt;td&gt;29.8&lt;/td&gt;
&lt;td&gt;58.9&lt;/td&gt;
&lt;td&gt;0.93&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GeForce RTX 3080 Ti&lt;/td&gt;
&lt;td&gt;2021&lt;/td&gt;
&lt;td&gt;34.8&lt;/td&gt;
&lt;td&gt;68.7&lt;/td&gt;
&lt;td&gt;1.36&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;摘录来的，&lt;a class=&#34;link&#34; href=&#34;https://docs.google.com/spreadsheets/d/1Zlv4UFiciSgmJZncCujuXKHwc4BcxbjbSBg71-SdeNk/edit#gid=0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;各种显卡性能测试数据&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;更新&#34;&gt;更新
&lt;/h2&gt;&lt;p&gt;间隔半年，本来还想再梳理一下安装步骤，科普更多的基础概念，结果发现，普通人玩AI画图，真就是基于大佬给的图片参数，进行参数调整，或者基于已有的图片，进行格式化的重新渲染。&lt;/p&gt;
&lt;p&gt;中间有过项目，尝试用AI来绘制小程序的UI素材，结果折腾半天，效果都不如意，不如我直接从官方的小程序拉资源图片。&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
