<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Golang on Uncle Xiang&#39;s Notebook</title>
        <link>https://ttf248.life/en/tags/golang/</link>
        <description>Recent content in Golang on Uncle Xiang&#39;s Notebook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Mon, 02 Jun 2025 21:13:56 +0800</lastBuildDate><atom:link href="https://ttf248.life/en/tags/golang/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Find all functions not referenced in the Go project.</title>
        <link>https://ttf248.life/en/p/find-all-functions-not-referenced-in-the-go-project/</link>
        <pubDate>Mon, 02 Jun 2025 21:10:47 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/find-all-functions-not-referenced-in-the-go-project/</guid>
        <description>&lt;p&gt;In a Go language project, using &lt;code&gt;staticcheck&lt;/code&gt; to find unused functions is an efficient static analysis method.&lt;/p&gt;
&lt;h3 id=&#34;1-install-staticcheck&#34;&gt;&lt;strong&gt;1. Install staticcheck&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;Ensure that Go (version 1.16+) is installed, and then execute the following command to install &lt;code&gt;staticcheck&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go install honnef.co/go/tools/cmd/staticcheck@latest
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-basic-usage-finding-unused-functions&#34;&gt;&lt;strong&gt;2. Basic Usage: Finding Unused Functions&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;Run the following command in the project root directory:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;staticcheck ./...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Key Check Rules:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;U1000&lt;/strong&gt;: Detects unused functions, methods, variables, or types.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;U1001&lt;/strong&gt;: Detects unused parameters.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-filter-specific-check-rules&#34;&gt;&lt;strong&gt;3. Filter Specific Check Rules&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;If you only want to check unused functions, you can specify the rules:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;staticcheck -checks=U1000 ./...
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;4-output-format&#34;&gt;&lt;strong&gt;4. Output Format&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;Default output format is &lt;code&gt;{path}:{line}:{column}: {message}&lt;/code&gt;, for example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;main.go:10:2: func UnusedFunction is unused (U1000)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;5-configuration-file-optional&#34;&gt;&lt;strong&gt;5. Configuration File (Optional)&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;Create a &lt;code&gt;.staticcheck.conf&lt;/code&gt; file in the project root directory to customize inspection rules:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;checks&amp;quot;: [&amp;quot;U1000&amp;quot;, &amp;quot;-ST1000&amp;quot;]  // Enable U1000, disable ST1000 (string formatting rule)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;6-integration-with-vs-code&#34;&gt;&lt;strong&gt;6. Integration with VS Code&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Install the &lt;a class=&#34;link&#34; href=&#34;https://marketplace.visualstudio.com/items?itemName=golang.go&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Go Extension&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Add to &lt;code&gt;settings.json&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;7-ignore-specific-code&#34;&gt;&lt;strong&gt;7. Ignore Specific Code&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;Adding a comment &lt;code&gt;//lint:ignore U1000 reason&lt;/code&gt; above the function to ignore the check:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;//lint:ignore U1000 Used by generated code
func UnusedButNeeded() {}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;frequently-asked-questions&#34;&gt;&lt;strong&gt;Frequently Asked Questions&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Q: How do I handle unused functions in test files?&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;A: &lt;code&gt;staticcheck&lt;/code&gt; defaults to checking test files. To exclude them, use the &lt;code&gt;-tests=false&lt;/code&gt; flag.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Q: How do I integrate it into CI/CD?&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;A: Add to GitHub Actions:&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;example-output&#34;&gt;&lt;strong&gt;Example Output&lt;/strong&gt;
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ staticcheck -checks=U1000 ./...
internal/utils/helper.go:15:2: func privateHelper is unused (U1000)
cmd/server/main.go:23:2: func initConfig is unused (U1000)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using the &lt;code&gt;staticcheck&lt;/code&gt; rule &lt;code&gt;U1000&lt;/code&gt;, you can quickly identify and clean up unused functions, improving code quality.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Why Do We Need to Learn a New Language?</title>
        <link>https://ttf248.life/en/p/why-learn-a-new-language/</link>
        <pubDate>Thu, 04 Aug 2022 11:27:30 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/why-learn-a-new-language/</guid>
        <description>&lt;p&gt;Starting from my academic years, Iâ€™ve been working with &lt;code&gt;C++&lt;/code&gt; for over ten years. So, why do I need to learn other programming languages?&lt;/p&gt;
&lt;p&gt;Work experience: Lacking experience in elegant module design, &lt;code&gt;C++&lt;/code&gt; syntax is freeform. Learning other languages helps me guide the development of more elegant designs.&lt;/p&gt;
&lt;p&gt;I often use them when writing some tools. The design principles for low-level libraries and business modules are also becoming clearer.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
