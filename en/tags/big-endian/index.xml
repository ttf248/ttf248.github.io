<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Big-Endian on Uncle Xiang&#39;s Notebook</title>
        <link>https://ttf248.life/en/tags/big-endian/</link>
        <description>Recent content in Big-Endian on Uncle Xiang&#39;s Notebook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Mon, 02 Jun 2025 20:54:02 +0800</lastBuildDate><atom:link href="https://ttf248.life/en/tags/big-endian/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Why do computers generally use little-endian storage?</title>
        <link>https://ttf248.life/en/p/little-endian-storage-why/</link>
        <pubDate>Wed, 24 Jan 2024 10:43:05 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/little-endian-storage-why/</guid>
        <description>&lt;p&gt;Regarding byte order: A layman&amp;rsquo;s explanation &lt;a class=&#34;link&#34; href=&#34;https://example.com/post/2023/01-10-%e4%b8%bb%e6%9c%ba%e5%ba%8f%e3%80%81%e7%bd%91%e7%bb%9c%e5%ba%8f%ef%bc%8c%e9%80%9a%e8%bf%87%e8%b0%83%e8%af%95%e5%99%a8%ef%bc%8c%e7%9b%b4%e6%8e%a5%e8%a7%82%e5%af%9f&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Host Order, Network Order, observed directly via debugger&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the field of computer science, certain design habits have formed due to historical reasons, just like the width of a hip dictates the width of a rocket&amp;rsquo;s thrusters – there’s no need to rigidly analyze their “advantages” and “disadvantages”; it’s simply a matter of historical convention.&lt;/p&gt;
&lt;h2 id=&#34;original-link&#34;&gt;Original Link
&lt;/h2&gt;&lt;p&gt;Author: Beiji (North Pole)
Link: &lt;a class=&#34;link&#34; href=&#34;https://www.zhihu.com/question/637413724/answer/3346032134&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.zhihu.com/question/637413724/answer/3346032134&lt;/a&gt;
Source: Zhihu
Copyright belongs to the author. For commercial reprints, please contact the author for permission. Non-commercial reprints must indicate the source.&lt;/p&gt;
&lt;h2 id=&#34;text-translation&#34;&gt;Text Translation
&lt;/h2&gt;&lt;p&gt;Here&amp;rsquo;s the translation of the provided text into English:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Data Mining&lt;/li&gt;
&lt;li&gt;Deep Learning&lt;/li&gt;
&lt;li&gt;Neural Network&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Nowadays, the current situation is a result of historical habits plus commercialization, and it has little to do with technology itself. ARM can be set up as big-endian or little-endian. The TCP/IP header still uses big-endian (network byte order). There are also many storage protocols/specifications that use big-endian to store data.&lt;/p&gt;
&lt;p&gt;Therefore, the three questions posed by the user seem incorrect in today&amp;rsquo;s view:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Why do computers generally adopt little-endian storage? –&amp;gt; Incorrect.&lt;/li&gt;
&lt;li&gt;Why is storing the low byte in a little-endian manner more efficient than in a big-endian manner? –&amp;gt; Efficiency will not be higher.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Any argument about these three questions using current technology is like shooting an arrow first and then drawing the target.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;However, if we say that the choice of big-endian or little-endian did have some objective factors in the history of computer development: The advantage of host-byte order (little-endian) is that a 8-bit * 4 adder can be easily made, requiring only an 8-bit adder to sequentially add all bytes from low to high, and the carry circuit is very simple. If it were big-endian, it would require loading 32 bits once, which cannot perform calculations. Nowadays, the difference between loading 8 bits or 32 bits is not significant, but in the early days when storage prices were expensive, simplicity was always preferred, so the host-byte order chose little-endian based on cost considerations. The advantage of network byte order (big-endian) is that early devices had very small caches. Taking the high byte first could quickly determine the message information: packet length (need to prepare how much cache), address range (IP addresses are matched from front to back). Early network devices&amp;rsquo; caches were at the byte level, and taking the high byte was indeed a little faster. Therefore, network devices used big-endian based on cost considerations.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;So, the choice of byte order has historically been more influenced by application scenarios and costs (such as PPC/MIPS being more suitable for network devices), and the configuration of big-endness and little-endness has been carried over to this day due to compatibility reasons. In today&amp;rsquo;s view, these advantages no longer exist, they are merely historical habits.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
