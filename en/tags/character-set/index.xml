<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Character Set on Uncle Xiang&#39;s Notebook</title>
        <link>https://ttf248.life/en/tags/character-set/</link>
        <description>Recent content in Character Set on Uncle Xiang&#39;s Notebook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Sun, 25 May 2025 02:57:45 +0800</lastBuildDate><atom:link href="https://ttf248.life/en/tags/character-set/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Visual Studio character set compilation [transfer]</title>
        <link>https://ttf248.life/en/p/visual-studio-compilation-character-set-translation/</link>
        <pubDate>Thu, 04 Aug 2022 10:51:43 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/visual-studio-compilation-character-set-translation/</guid>
        <description>&lt;p&gt;Cross-platform development in C++ often encounters on Chinese operating systems: &lt;code&gt;error C2001&lt;/code&gt; newline character in constant&lt;/p&gt;
&lt;h2 id=&#34;visual-studio&#34;&gt;visual studio
&lt;/h2&gt;&lt;p&gt;CMake organizes project compilation scripts; when developing on the Windows system, it temporarily generates a solution; due to cross-platform reasons, the file encoding is chosen as UTF-8&lt;/p&gt;
&lt;p&gt;The cited materials provide a detailed explanation of the cause of the problem from a theoretical perspective&lt;/p&gt;
&lt;p&gt;Regarding encoding, &lt;code&gt;MSVC&lt;/code&gt; has specific compilation options &lt;code&gt;/source-charset&lt;/code&gt; and &lt;code&gt;/execution-charset&lt;/code&gt;. The former indicates the encoding of the file itself, while the latter indicates what encoding the bytes within the character array are after compilation. Encoding issues can generally be resolved using these two options.&lt;/p&gt;
&lt;p&gt;For example, the &lt;code&gt;cmd&lt;/code&gt; console in &lt;code&gt;windows&lt;/code&gt; can only display &lt;code&gt;GBK&lt;/code&gt; encoding by default, but the code file itself is &lt;code&gt;UTF-8&lt;/code&gt;. Due to cross-platform compatibility, it&amp;rsquo;s not convenient to directly modify it to &lt;code&gt;GBK&lt;/code&gt;. Of course, this doesn&amp;rsquo;t include methods like writing encoding conversion code for different platforms. On &lt;code&gt;Win10&lt;/code&gt;, you can set these two compilation options to &lt;code&gt;/source-charset:utf-8 /execution-charset:gbk&lt;/code&gt;, which means letting the compiler read in with &lt;code&gt;UTF-8&lt;/code&gt; encoding and then convert it to &lt;code&gt;GBK&lt;/code&gt; and save it in an array, so that &lt;code&gt;printf&lt;/code&gt; can directly display Chinese characters normally on the &lt;code&gt;cmd&lt;/code&gt; console.&lt;/p&gt;
&lt;h2 id=&#34;cmake-settings-for-visual-studio&#34;&gt;CMake settings for Visual Studio
&lt;/h2&gt;&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;if( WIN32 )
    message( STATUS &amp;quot;Configuring trade on WIN32&amp;quot;)
    set( CMAKE_CXX_FLAGS &amp;quot;${CMAKE_CXX_FLAGS} /source-charset:utf-8 /execution-charset:gbk&amp;quot;)
endif()
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;reference-materials&#34;&gt;Reference materials
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/146543940&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://zhuanlan.zhihu.com/p/146543940&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
    </channel>
</rss>
