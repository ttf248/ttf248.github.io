<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Jmeter on Uncle Xiang&#39;s Notebook</title>
        <link>https://ttf248.life/en/tags/jmeter/</link>
        <description>Recent content in Jmeter on Uncle Xiang&#39;s Notebook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Sun, 25 May 2025 02:57:45 +0800</lastBuildDate><atom:link href="https://ttf248.life/en/tags/jmeter/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Setting up a JMeter testing environment on Linux</title>
        <link>https://ttf248.life/en/p/linux-setup-jmeter-testing-environment/</link>
        <pubDate>Tue, 22 Dec 2020 10:12:50 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/linux-setup-jmeter-testing-environment/</guid>
        <description>&lt;p&gt;The author has a strong interest in hardware and used JMeter to conduct stress testing, documenting the process of deploying JMeter, InfluxDB, and Grafana on CentOS 7. They shared information on JMeter installation and command usage, InfluxDB features and Docker installation methods, as well as simple deployment and configuration of Grafana. The document summarizes experiences and references for high-performance programming patterns.&lt;/p&gt;
&lt;h2 id=&#34;background&#34;&gt;Background
&lt;/h2&gt;&lt;p&gt;As you all know, I have a strong interest in hardware. By chance, the testing team was using JMeter for performance testing and found that the performance wasn&amp;rsquo;t improving. As a curious person, I decided to jump in and see how our company does pressure testing. There’s also a little story here: at some point in the distant past, I saw a post on Open Source China about how to create high-end performance test charts. The testers have already seen the Windows version execute tests and achieve visualized TPS data display. What use would there be for configuring another web panel?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Whatever you think is right, you won&amp;rsquo;t understand until you try it yourself
Don&amp;rsquo;t use GUI mode for load testing! only for Test creation and Test debuggin.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The official recommendation is to obtain the load test report through the command line and display it with a GUI, which may introduce data errors? I don&amp;rsquo;t have a very deep understanding of JMeter, but at least it gives me a reason to tinker with the &lt;code&gt;Linux&lt;/code&gt; console panel&lt;/p&gt;
&lt;p&gt;The posts on Open Source China indicate that the deployment method for the core components is not user-friendly, and you need to follow a public account to download the required files. As a young generation, of course, I replaced it with &lt;code&gt;Docker&lt;/code&gt;. To put it simply, the servers are still located within mainland China, so accessing cross-border sources is very slow. At least for image services, Alibaba Cloud has a free accelerator.&lt;/p&gt;
&lt;p&gt;Regarding the installation and deployment of &lt;code&gt;docker&lt;/code&gt;, details will not be repeated here; please refer to previous articles for more information&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The following content is divided into two main parts: building the basic test environment components and a simple explanation of each component&lt;/p&gt;
&lt;h2 id=&#34;jmeter&#34;&gt;Jmeter
&lt;/h2&gt;&lt;p&gt;Apache JMeter is a load testing tool developed by the Apache organization based on Java. It is used for stress testing software and was originally designed for web application testing, but has since been extended to other testing areas. It can be used to test static and dynamic resources such as static files, small Java services, CGI scripts, Java objects, databases, FTP servers, etc. JMeter can simulate a huge load on servers, networks or objects to test their strength under different stress categories and analyze overall performance. In addition, JMeter can perform functional/regression testing of applications by creating scripts with assertions to verify that your program returns the expected results. For maximum flexibility, JMeter allows the use of regular expressions to create assertions.&lt;/p&gt;
&lt;p&gt;Apache JMeter can be used to test the performance of static and dynamic resources (files, Servlets, Perl scripts, Java objects, databases and queries, FTP servers, etc.). It can be used to simulate heavy loads on servers, networks or objects to test their strength or analyze overall performance under different types of stress. You can use it for graphical analysis of performance or for load testing your servers/scripts/objects with high concurrency.&lt;/p&gt;
&lt;h3 id=&#34;jmeter-deployment-on-centos-7&#34;&gt;JMeter deployment on CentOS 7
&lt;/h3&gt;&lt;p&gt;Install the &lt;code&gt;JDK&lt;/code&gt; runtime environment, download the &lt;code&gt;JMeter&lt;/code&gt; installation package&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yum install java-1.8.0-openjdk -y &amp;amp;&amp;amp; \
wget https://mirrors.bfsu.edu.cn/apache//jmeter/binaries/apache-jmeter-5.4.tgz &amp;amp;&amp;amp; tar -xf apache-jmeter-5.4.tgz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Configure environment variables&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export JMETER_HOME=$HOME/jmeter/apache-jmeter-5.4
export PATH=$JMETER_HOME/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;jmeter-commands&#34;&gt;JMeter commands
&lt;/h3&gt;&lt;p&gt;Finally, it will connect to the &lt;code&gt;Grafana&lt;/code&gt; control panel. You can omit the &lt;code&gt;-l&lt;/code&gt; parameter and observe the data in the &lt;code&gt;web&lt;/code&gt; console.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;jmeter -n -t /tmp/order-500-10s.jmx -l /tmp/jmeter-order-report-20200109/order-500-10s.jtl
# 一般不用测试结果和测试报告，简化命令
jmeter -n -t /tmp/order-500-10s.jmx
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;influxdb&#34;&gt;InfluxDB
&lt;/h2&gt;&lt;p&gt;InfluxDB is an open-source distributed time series, event and metrics database written in Go, requiring no external dependencies. This database is now primarily used to store large volumes of timestamped data, such as DevOps monitoring data, APP metrics, IoT sensor data, and real-time analytics data.&lt;/p&gt;
&lt;h3 id=&#34;influxdb-features&#34;&gt;InfluxDB Features
&lt;/h3&gt;&lt;p&gt;The characteristics of InfluxDB can be summarized into 9 aspects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unstructured (patternless): can be any number of columns;&lt;/li&gt;
&lt;li&gt;The retention period for metrics can be configured&lt;/li&gt;
&lt;li&gt;Supports time-related functions (such as min, max, sum, count, mean, median, etc.) for statistical analysis&lt;/li&gt;
&lt;li&gt;Support for storage policies: can be used for data deletion and modification. (InfluxDB does not provide methods for deleting or modifying data.)&lt;/li&gt;
&lt;li&gt;Supporting continuous queries: a set of statements that are automatically started on a schedule in the database, and when paired with storage policies, can reduce InfluxDB&amp;rsquo;s system footprint&lt;/li&gt;
&lt;li&gt;Native HTTP support, built-in HTTP API&lt;/li&gt;
&lt;li&gt;Supports SQL-like syntax&lt;/li&gt;
&lt;li&gt;Supports setting the number of data replicas in the cluster&lt;/li&gt;
&lt;li&gt;Support periodic sampling data and write it to another measurement for granular storage of data&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;influxdb-docker-installation&#34;&gt;InfluxDB Docker installation
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkdir influxdb &amp;amp;&amp;amp; cd influxdb &amp;amp;&amp;amp; \
docker run -p 8086:8086 -d --name influxdb -v $PWD:/var/lib/influxdb influxdb:1.7
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Enter the container, execute a command, and manually create a database&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;root@bce0a55bbc72:/# influx
Connected to http://localhost:8086 version 1.7.10
InfluxDB shell version: 1.7.10
&amp;gt; 交互面板执行命令
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;creating-databases-and-users-in-influxdb&#34;&gt;Creating Databases and Users in InfluxDB
&lt;/h3&gt;&lt;p&gt;Create database: create database jmeter_t2
View databases
Switch database: use jmeter_t2
Create user &amp;ldquo;admin&amp;rdquo; with password &amp;lsquo;admin&amp;rsquo; with all privileges
View users&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&amp;gt; show users
user  admin
----  -----
admin true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the user permission &lt;code&gt;admin&lt;/code&gt; is displayed as &lt;code&gt;true&lt;/code&gt;, the database preparation is complete&lt;/p&gt;
&lt;h2 id=&#34;grafana&#34;&gt;Grafana
&lt;/h2&gt;&lt;p&gt;When writing test cases, I realized that the chart display isn&amp;rsquo;t really necessary. The &lt;code&gt;tps&lt;/code&gt; data for the interface can already be observed when executed in the command line; mostly, I just want to know the internal execution time of the program.&lt;/p&gt;
&lt;p&gt;Quickly deploy a Grafana dashboard, import configuration files, and connect to InfluxDB&lt;/p&gt;
&lt;p&gt;The console supports filtering test results by tag, and generally only an &lt;code&gt;InfluxDB&lt;/code&gt; database needs to be configured&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Application Name&lt;/li&gt;
&lt;li&gt;Test Case Name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/linux-setup-jmeter-testing-environment/Snipaste_2021-03-09_19-44-22.png&#34;
	width=&#34;861&#34;
	height=&#34;357&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;grafana&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;241&#34;
		data-flex-basis=&#34;578px&#34;
	
&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run -d --name=grafana -p 3000:3000 grafana/grafana:7.3.1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;TPS&lt;/code&gt; and related values calculated in the web version can be inconsistent with the aggregated report in &lt;code&gt;JMeter&lt;/code&gt; due to the sampler interval, see reference link: &lt;a class=&#34;link&#34; href=&#34;https://www.vinsguru.com/jmeter-real-time-results-influxdb-grafana/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.vinsguru.com/jmeter-real-time-results-influxdb-grafana/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The document also describes how to customize listeners&lt;/p&gt;
&lt;h2 id=&#34;afterword&#34;&gt;Afterword
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;High-performance programming inherently relies on a single loop thread; any locks, queuing for entry, and queuing for exit will cause unnecessary performance loss&lt;/li&gt;
&lt;li&gt;The time spent on core business logic is greater than the time spent introducing other code; concurrency can effectively improve efficiency, and if the core processing time is sufficiently small, it&amp;rsquo;s best to be cautious when introducing other code&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference-materials&#34;&gt;Reference materials
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Real-time Monitoring with JMeter + Grafana + InfluxDB&lt;/li&gt;
&lt;li&gt;InfluxDB official image&lt;/li&gt;
&lt;li&gt;Grafana official image&lt;/li&gt;
&lt;li&gt;Apache JMeter Official Website&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://medium.com/@jasonli.studio/to-install-apache-jmeter-in-centos7-294bc72a97ba&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;To install Apache JMeter in CentOS7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
    </channel>
</rss>
