<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Customized on Uncle Xiang&#39;s Notebook</title>
        <link>https://ttf248.life/en/tags/customized/</link>
        <description>Recent content in Customized on Uncle Xiang&#39;s Notebook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Mon, 02 Jun 2025 06:00:45 +0800</lastBuildDate><atom:link href="https://ttf248.life/en/tags/customized/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Hugo Module Customizing Theme: Explanation of Approach</title>
        <link>https://ttf248.life/en/p/hugo-module-custom-theme-ideas/</link>
        <pubDate>Fri, 15 Nov 2024 22:01:17 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/hugo-module-custom-theme-ideas/</guid>
        <description>&lt;p&gt;Reviewing the historical commit logs, the site has undergone numerous theme switches. Each theme switch involved some custom modifications, and this is where I’m documenting the approach to customizing themes. My &lt;code&gt;Github&lt;/code&gt; repository briefly maintained the even theme, but due to my obsessive-compulsive tendencies, I resisted upgrading the &lt;code&gt;hugo&lt;/code&gt; compiler to the latest version, which rendered the even theme incompatible, so I switched back to the &lt;code&gt;stack&lt;/code&gt; theme.&lt;/p&gt;
&lt;h2 id=&#34;hugos-modularity&#34;&gt;Hugo&amp;rsquo;s Modularity
&lt;/h2&gt;&lt;p&gt;When we talk about modularity, many people think of things like Nginx modules and IDEA plugins. Typically, I can upload various modules to satisfy my specific needs. The reason everyone likes this kind of module is that it’s incredibly flexible – you don’t have to put in too much effort to meet your own requirements. Often, even though the overall concepts are similar, there are always subtle differences. This highlights the complexity of software, not just technically, but also from a business perspective. Most often, we face business complexity. This is precisely where the saying “it’s like crossing a river and climbing a mountain” – “隔行如隔山” – is best illustrated. Today, not only the internet industry and the financial sector, even traditional manufacturing has adopted information systems to help with production and management. Here’s the English translation of the provided text:&lt;/p&gt;
&lt;p&gt;“Similarly, even within the same industry, different companies will have variations in their leave systems. However, Hugo&amp;rsquo;s modules differ somewhat from what people typically expect – they aren’t organized based on functionality to meet specific differentiation needs. Instead, they are primarily structured around directory hierarchies to identify and recognize identical structures.”&lt;/p&gt;
&lt;p&gt;Resource link: &lt;a class=&#34;link&#34; href=&#34;https://medium.com/@sunwei.xyz/07-hugo%E6%9E%B6%E6%9E%84-hugo%E7%9A%84%E6%A8%A1%E5%9D%97-8ef5a520a822&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;07. Hugo Architecture — Hugo Modules&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;hugos-modularization&#34;&gt;Hugo&amp;rsquo;s Modularization
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;git submodule&lt;/code&gt; still works, but we don’t recommend using it. Maintaining them can be quite troublesome if the themes used are updated; they should be managed as separate Git repositories.&lt;/p&gt;
&lt;h2 id=&#34;theme-modification-logichttpsstackjimmycaicomguidemodify-theme&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://stack.jimmycai.com/guide/modify-theme&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Theme Modification Logic&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Once you’ve grasped the foundational concepts of modularization, understanding custom themes becomes much simpler. Hugo themes are currently assembled from multiple different modules. To modify a single module, locate its corresponding template file and make the changes directly.&lt;/p&gt;
&lt;p&gt;Excerpted from the official &lt;code&gt;stack&lt;/code&gt; documentation:&lt;/p&gt;
&lt;p&gt;Using this method, there will be no files under the &lt;code&gt;themes&lt;/code&gt; directory.  To modify the theme, you will need to copy the file you want to modify to the same directory under the &lt;code&gt;layouts&lt;/code&gt; directory.&lt;/p&gt;
&lt;h2 id=&#34;theme-modification-logichttpsstackjimmycaicomguidemodify-theme-1&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://stack.jimmycai.com/guide/modify-theme&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Theme Modification Logic&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;For example, in order to modify the &lt;code&gt;themes/hugo-theme-stack/layouts/partials/head/custom.html&lt;/code&gt; file, you will need to copy it to &lt;code&gt;layouts/partials/head/custom.html&lt;/code&gt; and modify it there (copy the code from the theme&amp;rsquo;s repository). The same applies to the &lt;code&gt;assets&lt;/code&gt; and &lt;code&gt;static&lt;/code&gt; directories.&lt;/p&gt;
&lt;h2 id=&#34;how-to-find-template-files&#34;&gt;How to Find Template Files
&lt;/h2&gt;&lt;h3 id=&#34;conventional-approach&#34;&gt;Conventional Approach
&lt;/h3&gt;&lt;p&gt;Review the source files of the topic, understand its design rationale, identify the corresponding template file, and modify it.&lt;/p&gt;
&lt;h3 id=&#34;bruteforce-approach&#34;&gt;Bruteforce Approach
&lt;/h3&gt;&lt;p&gt;As I don’t have a deep understanding of frontend code, sometimes I resort to a brute-force approach, such as opening the corresponding page directly in the browser, finding the areas I want to modify, and using “Inspect Element” to pinpoint the &lt;code&gt;css name&lt;/code&gt;, then searching the source code for the relevant file, copying it into the site directory, and making changes.&lt;/p&gt;
&lt;h2 id=&#34;tips&#34;&gt;Tips
&lt;/h2&gt;&lt;p&gt;The official setup provides a default file for customizing styles. To modify specific areas, we can split them into multiple files and import them using &lt;code&gt;custom.scss&lt;/code&gt;. This approach allows for better management of style files.
&lt;img src=&#34;https://ttf248.life/p/hugo-module-customizing-themes-ideas/image.png&#34;
	width=&#34;141&#34;
	height=&#34;375&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;alt text&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;37&#34;
		data-flex-basis=&#34;90px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;summarize-modified-content-6h&#34;&gt;Summarize Modified Content (6h)
&lt;/h2&gt;&lt;p&gt;It’s now the first year of AI coding, and the detailed content will not be pasted here for brevity; instead, we simply list some of the modifications made to this site, such as adjusting the copy button styles, reconfiguring the code block styles, and ChatGPT can be easily handled.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Overall: Global text style, adopting the previous display style that merged &lt;code&gt;even&lt;/code&gt; with &lt;code&gt;info cn&lt;/code&gt;, which is friendly to Chinese&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Homepage: Added mouse interaction animation to the right navigation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Homepage: New article summaries are added (a time-consuming task, achieved using a clever workaround)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scroll Bar: Improved the styling of the scroll bar&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Code Blocks: Introduced &lt;code&gt;highlight.&lt;/code&gt;. - JavaScript code highlighting plugin, beautify code block styles&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Article details: Some content is a reprint, with new original author information display and original link display&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Archived page: Top category image, remove the theme&amp;rsquo;s color mask, display the original image&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Archived page: Added a statistical display panel for classification by year&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Archived page: Two-column layout display ## Summarize Modified Content (6h)
It’s now the first year of AI coding, and the detailed content will not be pasted here for brevity; instead, we simply list some of the modifications made to this site, such as adjusting the copy button styles, reconfiguring the code block styles, and ChatGPT can be easily handled.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Overall: Global text style, adopting the display style previously used by merging &lt;code&gt;even&lt;/code&gt; with &lt;code&gt;info cn&lt;/code&gt;, which is friendly to Chinese&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Homepage: Added mouse interaction animation to the right navigation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Homepage: New article added summary preview (took quite a while, implemented using a clever trick)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scroll Bar: Beautified the scroll bar’s styling&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Code Blocks: Introduced &lt;code&gt;highlight.&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;summarize-modified-content-6h-1&#34;&gt;Summarize Modified Content (6h)
&lt;/h2&gt;&lt;p&gt;The &lt;code&gt;stack&lt;/code&gt; theme component reuse rate is very high, which has led to a significant amount of time being spent adding summary previews to new homepage articles.  I modified the corresponding component, and this resulted in changes to the article’s detail page, leading to redundant display of the main content. I wasn&amp;rsquo;t very familiar with &lt;code&gt;golang templates&lt;/code&gt;, so it took up a lot of time.  I struggled to get parameters passed between components, and ultimately resolved this by taking a shortcut: introducing a &lt;code&gt;JavaScript&lt;/code&gt; script independently on the homepage and using custom special variables to implement the summary preview.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sometimes high component reuse rates can also be a problem, leading to changes in one place affecting other places. Therefore, when modifying themes, you must pay attention not to disrupt existing logic.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;comments&#34;&gt;Comments
&lt;/h3&gt;&lt;p&gt;This guy&amp;rsquo;s modifications are more refined: &lt;a class=&#34;link&#34; href=&#34;https://blog.reincarnatey.net/2024/0719-better-waline/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.reincarnatey.net/2024/0719-better-waline/&lt;/a&gt;
&lt;del&gt;This site simply enabled the &lt;code&gt;Waline&lt;/code&gt; comment system, as the &lt;code&gt;stack&lt;/code&gt; theme defaults to supporting &lt;code&gt;Waline&lt;/code&gt;. Just configure it in the &lt;code&gt;config.toml&lt;/code&gt; file.&lt;/del&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Recommend contacting via email on the homepage, this site does not open the comments section&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        
    </channel>
</rss>
