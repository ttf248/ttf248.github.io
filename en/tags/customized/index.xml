<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Customized on Uncle Xiang&#39;s Notebook</title>
        <link>https://ttf248.life/en/tags/customized/</link>
        <description>Recent content in Customized on Uncle Xiang&#39;s Notebook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Sun, 25 May 2025 02:57:45 +0800</lastBuildDate><atom:link href="https://ttf248.life/en/tags/customized/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Customizing Hugo Themes with Modules: An Explanation of Ideas</title>
        <link>https://ttf248.life/en/p/hugo-module-custom-theme-ideas/</link>
        <pubDate>Fri, 15 Nov 2024 22:01:17 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/hugo-module-custom-theme-ideas/</guid>
        <description>&lt;p&gt;Looking back at the historical commit records, the site has switched themes many times. Each time a theme is switched, there are some custom modifications. Here&amp;rsquo;s a record of the思路 for customizing themes. The author’s &lt;code&gt;Github&lt;/code&gt; also has a repository where they briefly maintained the even theme. Later, due to obsessive-compulsive tendencies and a desire to upgrade the &lt;code&gt;hugo&lt;/code&gt; compiler to the latest version, it became incompatible with the even theme, so they switched back to the &lt;code&gt;stack&lt;/code&gt; theme.&lt;/p&gt;
&lt;h2 id=&#34;hugos-modularity&#34;&gt;Hugo&amp;rsquo;s modularity
&lt;/h2&gt;&lt;p&gt;When it comes to modularity, people might think of Nginx modules or IDEA plugins, etc. Typically, I can satisfy my differentiated needs by uploading some modules. The reason everyone likes this kind of module is mainly because it&amp;rsquo;s flexible enough and can meet their own needs without too much effort. Because often, although they are generally similar, there are always some differences in the details. This also illustrates the complexity of software, which includes not only technical complexity but also business complexity. In most cases, we face business complexity. This is the best explanation for the saying &amp;ldquo;different industries are like different mountains&amp;rdquo; in the software field. Nowadays, not only the internet industry and financial industry, but even traditional manufacturing has adopted information systems to help with corporate production and management. Even for a leave application system, there will be differences between companies, even within the same industry.&lt;/p&gt;
&lt;p&gt;Hugo&amp;rsquo;s modules are a bit different from what people typically think of as modules; they aren’t organized around functionality to meet diverse needs. Instead, they primarily rely on directory structure to identify common structures.&lt;/p&gt;
&lt;p&gt;Link to materials: &lt;a class=&#34;link&#34; href=&#34;https://medium.com/@sunwei.xyz/07-hugo%E6%9E%B6%E6%9E%84-hugo%E7%9A%84%E6%A8%A1%E5%9D%97-8ef5a520a822&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;07. Hugo Architecture — Hugo&amp;rsquo;s Modules&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[[imports]]
path = &amp;quot;github.com/CaiJimmy/hugo-theme-stack/v3&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;git submodule&lt;/code&gt; method still works, but this article does not recommend using it. If there are updates to the introduced theme, maintenance will be more complicated, requiring a separate git repository to manage the theme.&lt;/p&gt;
&lt;h2 id=&#34;modifying-theme-logic&#34;&gt;Modifying Theme Logic
&lt;/h2&gt;&lt;p&gt;With a foundational understanding of modularity, understanding custom themes becomes much easier. The current themes in &lt;code&gt;hugo&lt;/code&gt; are also assembled from multiple different modules; to modify one, simply locate the corresponding template file and make changes.&lt;/p&gt;
&lt;p&gt;Quoted from the &lt;code&gt;stack&lt;/code&gt; official documentation:&lt;/p&gt;
&lt;p&gt;Using this method, there won&amp;rsquo;t be any file under &lt;code&gt;themes&lt;/code&gt; directory. In order to modify the theme, you will have to copy the file you want to modify to the same directory under &lt;code&gt;layouts&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;For example, in order to modify the &lt;code&gt;themes/hugo-theme-stack/layouts/partials/head/custom.html&lt;/code&gt; file, you will have to copy it to &lt;code&gt;layouts/partials/head/custom.html&lt;/code&gt; and modify it there (copy the code from theme&amp;rsquo;s repository). The same applies to &lt;code&gt;assets&lt;/code&gt; and &lt;code&gt;static&lt;/code&gt; directories。&lt;/p&gt;
&lt;h2 id=&#34;how-to-find-the-template-file&#34;&gt;How to find the template file
&lt;/h2&gt;&lt;h3 id=&#34;orthodox-thinking&#34;&gt;Orthodox thinking
&lt;/h3&gt;&lt;p&gt;Browse the theme&amp;rsquo;s source files, understand the design concept, find the corresponding template file, and make modifications&lt;/p&gt;
&lt;h3 id=&#34;brute-force-approach&#34;&gt;Brute force approach
&lt;/h3&gt;&lt;p&gt;I&amp;rsquo;m not very familiar with front-end code, so sometimes I use a crude approach. For example, I open the corresponding page directly in the browser, find the place I want to modify, locate the &lt;code&gt;css name&lt;/code&gt; using &amp;ldquo;Inspect Element,&amp;rdquo; search for it in the theme source code, find the corresponding file, copy it to the site directory, and then make the changes.&lt;/p&gt;
&lt;h2 id=&#34;little-tips&#34;&gt;Little tips
&lt;/h2&gt;&lt;p&gt;The official default provides a file for customizing styles, and we can split the places that need to be modified into multiple files, introducing our other files through the &lt;code&gt;custom.scss&lt;/code&gt; file, which allows for better management of style files&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/hugo-module-custom-theme-ideas/image.png&#34;
	width=&#34;141&#34;
	height=&#34;375&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;alt text&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;37&#34;
		data-flex-basis=&#34;90px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;summary-of-revisions-6h&#34;&gt;Summary of revisions (6h)
&lt;/h2&gt;&lt;p&gt;It&amp;rsquo;s already the first year of AI coding. I won’t go into detailed content here, but just briefly list some modifications to this site, such as adjusting the style of the copy button and reconfiguring the code block styles – ChatGPT can easily handle these tasks.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Overall: Global text style, inheriting the display style of the previous &lt;code&gt;even&lt;/code&gt; merged with &lt;code&gt;info cn&lt;/code&gt;, friendly to Chinese&lt;/li&gt;
&lt;li&gt;Homepage: Add mouse interaction animation to the right navigation&lt;/li&gt;
&lt;li&gt;Homepage: Articles now have abstract previews (implemented with a somewhat expedient method due to the time it took)&lt;/li&gt;
&lt;li&gt;Scroll bar: I&amp;rsquo;ve styled the scroll bar&lt;/li&gt;
&lt;li&gt;The code block introduces the &lt;code&gt;highlight.js&lt;/code&gt; code highlighting plugin and beautifies the style of the code blocks&lt;/li&gt;
&lt;li&gt;Article details: Some content is reproduced, with added display of original author information and original link&lt;/li&gt;
&lt;li&gt;Archive page: Remove the theme&amp;rsquo;s color overlay and display the original image for the category picture at the top&lt;/li&gt;
&lt;li&gt;The archive page now features a statistics display panel categorized by year&lt;/li&gt;
&lt;li&gt;Archive page: Two-column layout&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The component reusability of the &lt;code&gt;stack&lt;/code&gt; theme is high, which also led to significant time consumption when adding summary previews for homepage articles. After modifying the corresponding components, changes occurred on the article details page, resulting in duplicate content being displayed. I&amp;rsquo;m not very familiar with &lt;code&gt;golang template&lt;/code&gt; syntax, so it took a considerable amount of time. I couldn’t resolve parameter passing between components, and ultimately, I used a workaround: introducing a separate &lt;code&gt;JavaScript&lt;/code&gt; script for the homepage and implementing summary previews through custom special variables.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sometimes, excessive code reuse can also be a problem, leading to changes in one area affecting others. Therefore, when modifying the theme, it is important to pay attention and avoid disrupting the original logic.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;comments-section&#34;&gt;Comments section
&lt;/h3&gt;&lt;p&gt;This guy&amp;rsquo;s modifications are more complete: [https://blog.reincarnatey.net/2024/0719-better-waline/]&lt;/p&gt;
&lt;p&gt;This site simply enables the &lt;code&gt;Waline&lt;/code&gt; comment system. The &lt;code&gt;stack&lt;/code&gt; theme natively supports &lt;code&gt;Waline&lt;/code&gt;, just configure it in &lt;code&gt;config.toml&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Recommended homepage, email contact. This site does not open its comment section.&lt;/p&gt;
&lt;/blockquote&gt;</description>
        </item>
        
    </channel>
</rss>
