<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Trae on Uncle Xiang&#39;s Notebook</title>
        <link>https://ttf248.life/en/tags/trae/</link>
        <description>Recent content in Trae on Uncle Xiang&#39;s Notebook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Wed, 28 May 2025 09:47:38 +0800</lastBuildDate><atom:link href="https://ttf248.life/en/tags/trae/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Design and develop a customizable stock selection module (without coding)</title>
        <link>https://ttf248.life/en/p/no-code-design-develop-custom-stock-module/</link>
        <pubDate>Thu, 27 Feb 2025 23:20:39 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/no-code-design-develop-custom-stock-module/</guid>
        <description>&lt;p&gt;We tested Cursor last month, but due to free tier limitations, we didn&amp;rsquo;t develop complex features, just simple testing. We noticed that ByteDance also released a similar product at the time, both using the same underlying large language model: Claude-3.5.&lt;/p&gt;
&lt;p&gt;ByteDance&amp;rsquo;s product, Trae, initially launched a Mac version and finally released a Windows version this February. Big company products are just good – you can use them for free without paying, with unlimited access to Claude-3.5, which is a very impressive model.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ultimately, development stalled on the K-line chart due to my limited knowledge of React. To continue, I need to supplement my frontend skills and break down tasks into smaller steps instead of tackling a large project like developing a K-line chart directly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;issues-found&#34;&gt;Issues found
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Due to insufficient training data for Vue3 + Element-Plus due to reliance on foreign AI models, we chose React as the frontend framework&lt;/li&gt;
&lt;li&gt;There may be occasional grammatical errors that require manual correction&lt;/li&gt;
&lt;li&gt;Some complex problems require human guidance for solutions&lt;/li&gt;
&lt;li&gt;Code structure optimization requires human guidance&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The most time-consuming part was packaging the frontend code into a container. As someone with zero experience, I had no understanding of this process; I only managed to grasp the logic with help from others. There&amp;rsquo;s a significant difference in how frontend development checks code between dev and build modes. The database and service containers for the backend took about five minutes combined.&lt;/p&gt;
&lt;p&gt;Please provide the Chinese text you want me to translate. I am ready when you are!&lt;/p&gt;
&lt;h2 id=&#34;warehouse-address&#34;&gt;Warehouse address
&lt;/h2&gt;&lt;p&gt;As the title suggests, we&amp;rsquo;re skipping the coding and directly discussing with AI to design and develop a custom stock selection module. Let’s see what kind of results we can achieve.&lt;/p&gt;
&lt;p&gt;Warehouse address: &lt;a class=&#34;link&#34; href=&#34;https://github.com/ttf248/trae-demo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/ttf248/trae-demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Detailed usage instructions can be found in the repository&amp;rsquo;s README.md file&lt;/p&gt;
&lt;p&gt;The repository contains numerous submission records, mostly conversations between me and Trae, along with my tests of various features for him. Notes indicate whether manual intervention was required to implement the corresponding functionality.&lt;/p&gt;
&lt;h2 id=&#34;prompt&#34;&gt;Prompt
&lt;/h2&gt;&lt;p&gt;This project was created from scratch. Here&amp;rsquo;s the prompt for the project:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;基于项目原型图，开发功能：自选股，需要支持合约的新增、删除、修改、查询。自选股界面需要展示基础的行情数据。支持多个不同的市场切换。

前端：react
后端：golang gin gorm
数据库：PostgreSQL

服务端需要支持跨域请求，同时需要考虑数据的校验和错误处理，如果后端服务不可用，前端需要告警提示。

后端需要展示请求和应答的日志；前端也打印通讯的日志，方便排查问题。
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;ui-and-interaction-optimization&#34;&gt;UI and interaction optimization
&lt;/h2&gt;&lt;p&gt;The frontend design is entirely dependent on Grok. We initially created a prototype within Trae, but it lacked aesthetic appeal. Due to the model&amp;rsquo;s strong coding capabilities and weaker overall abilities, we need to use Grok to optimize the frontend UI.&lt;/p&gt;
&lt;p&gt;By taking screenshots of the current interface, uploading them to Grok, and having it help us optimize the UI, we can potentially receive numerous optimization suggestions. We will then manually evaluate these suggestions and copy them into Trae for execution, observing the results.&lt;/p&gt;
&lt;h3 id=&#34;technology-stack&#34;&gt;Technology stack
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Frontend: React + TypeScript&lt;/li&gt;
&lt;li&gt;Backend: Golang + Gin + GORM&lt;/li&gt;
&lt;li&gt;Database: PostgreSQL 17&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;system-architecture&#34;&gt;System architecture
&lt;/h2&gt;&lt;h2 id=&#34;backend-architecture&#34;&gt;Backend architecture
&lt;/h2&gt;&lt;p&gt;The backend is implemented using Go&amp;rsquo;s Gin framework for a RESTful API, with modules including:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Please provide the Chinese text you want me to translate. I am ready when you are!&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Use GORM as an ORM framework&lt;/li&gt;
&lt;li&gt;Supports environment variable configuration for database connections&lt;/li&gt;
&lt;li&gt;Automatically migrate database tables&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Please provide the Chinese text you want me to translate. I am ready when you are!&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;RESTful API Design&lt;/li&gt;
&lt;li&gt;Unified error handling mechanism&lt;/li&gt;
&lt;li&gt;Built-in request logging&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Please provide the Chinese text you want me to translate. I am ready when you are!&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Support cross-domain for local development environments&lt;/li&gt;
&lt;li&gt;Configurable CORS policy&lt;/li&gt;
&lt;li&gt;Support cross-domain cookies&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;frontend-architecture&#34;&gt;Frontend Architecture
&lt;/h2&gt;&lt;p&gt;Built with React + TypeScript, achieving:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stock list display&lt;/li&gt;
&lt;li&gt;Self-selected stock management&lt;/li&gt;
&lt;li&gt;Market Data Display&lt;/li&gt;
&lt;li&gt;Error message mechanism&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
    </channel>
</rss>
