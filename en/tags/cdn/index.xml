<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>CDN on Uncle Xiang&#39;s Notebook</title>
        <link>https://blog.ttf248.life/en/tags/cdn/</link>
        <description>Recent content in CDN on Uncle Xiang&#39;s Notebook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Wed, 28 May 2025 09:47:38 +0800</lastBuildDate><atom:link href="https://blog.ttf248.life/en/tags/cdn/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Website Acceleration and Domain Settings</title>
        <link>https://blog.ttf248.life/en/p/website-acceleration-and-domain-setup/</link>
        <pubDate>Sat, 20 Jun 2020 10:36:27 +0800</pubDate>
        
        <guid>https://blog.ttf248.life/en/p/website-acceleration-and-domain-setup/</guid>
        <description>&lt;p&gt;Due to slow access speeds within China for GitHub Pages, the author applied for a personal domain and purchased CDN acceleration services from a domestic cloud hosting provider. During configuration, they encountered an issue where the www subdomain was inaccessible, ultimately resolved by removing wildcard domain resolution and setting up the second-level domain separately. The author also shared the principles and configuration experience of CDN acceleration, as well as their attempts and lessons learned using Nginx reverse proxy.&lt;/p&gt;
&lt;h3 id=&#34;background&#34;&gt;Background
&lt;/h3&gt;&lt;p&gt;The website is hosted on GitHub Pages, which can be slow to access from within China for certain well-known reasons. Therefore, I applied for a personal domain and purchased CDN acceleration services from a domestic cloud hosting provider. While setting up the acceleration service, I realized I had a development machine with Docker, frp, k8s, and other services deployed – all of which have dashboards. Following the principle of not letting resources go to waste, I configured several reverse proxies and linked them to subdomains.&lt;/p&gt;
&lt;p&gt;When I was happily using my second-level domain, I suddenly found that the www subdomain was inaccessible. The DNS configuration in Alibaba Cloud resolves both &lt;a class=&#34;link&#34; href=&#34;https://www.xiangtianlong.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;www.xiangtianlong.com&lt;/a&gt; and xiangtianlong.com simultaneously. Before enabling CDN acceleration, both domains worked correctly.&lt;/p&gt;
&lt;p&gt;When configuring CDN acceleration, enabling a wildcard domain rule due to having too many subdomains resulted in the www subdomain also failing. Yes, you read that right – the www prefix is considered a subdomain. The actual website is deployed on GitHub Pages, and the development machine has no cached web content.&lt;/p&gt;
&lt;p&gt;Using GitHub Actions for automated deployment is surprisingly convenient for a static blog&lt;/p&gt;
&lt;h3 id=&#34;domain&#34;&gt;domain
&lt;/h3&gt;&lt;p&gt;Non-professional web development doesn&amp;rsquo;t involve understanding SEO or cross-domain issues. For a blog site, using a bare domain can highlight the blogger’s site—which is exactly my situation with using Chinese pinyin as a domain name—and also helps reduce character input, especially given the prevalence of mobile access.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The desktop version allows you to skip typing &amp;ldquo;www&amp;rdquo; and &amp;ldquo;com&amp;rdquo; using keyboard shortcuts&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;cdn&#34;&gt;CDN
&lt;/h3&gt;&lt;p&gt;I&amp;rsquo;ve used both Alibaba Cloud and Tencent Cloud; they are easy for new users to get started with. Tencent Cloud even has a video explaining the related concepts. The principle of CDN acceleration is the same as that of JD&amp;rsquo;s warehouse: when launching new products, they are pre-distributed to warehouses across the country, and delivery requests are fulfilled from the nearest location.&lt;/p&gt;
&lt;p&gt;Return address: The original location where website resources were stored&lt;/p&gt;
&lt;p&gt;Cache file settings, browser F12, management console, simple analysis of static and dynamic resources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All 0-day validity&lt;/li&gt;
&lt;li&gt;0-day validity&lt;/li&gt;
&lt;li&gt;1-day validity&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tencent Cloud Configuration Rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Up to 10 cache expiration rules can be configured&lt;/li&gt;
&lt;li&gt;The priority of cache expiration rules is bottom-up&lt;/li&gt;
&lt;li&gt;Cache expiration time can be set up to 365 days&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;a-lamentable-confession&#34;&gt;A Lamentable Confession
&lt;/h3&gt;&lt;p&gt;I hadn&amp;rsquo;t used Nginx before and thought I could understand reverse proxy configuration just by searching online. However, it was confusing; after a lot of effort, I couldn&amp;rsquo;t even get a 302 redirect working, rendering the whole thing useless. So, I decided on a simple solution: removing the wildcard domain resolution and setting up each subdomain independently. That’s when I noticed Aliyun DNS had a &amp;ldquo;Display URL Jump&amp;rdquo; mode – exactly what I needed for a 302 redirect.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;After setting up the first subdomain and confirming it worked, I ran into issues with the second. I almost started doubting myself, but then it suddenly started working after a wait. It seems Aliyun&amp;rsquo;s DNS propagation occasionally glitches.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;references&#34;&gt;References
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Please provide the Chinese text you want me to translate. I am ready when you are! Just paste the text here.&lt;/li&gt;
&lt;li&gt;Please provide the Chinese text you want me to translate. I am ready when you are! Just paste the text here.&lt;/li&gt;
&lt;li&gt;Please provide the Chinese text you want me to translate. I am ready when you are! Just paste the text here.&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
    </channel>
</rss>
