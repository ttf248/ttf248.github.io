<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Github Copilot on Uncle Xiang&#39;s Notebook</title>
        <link>https://ttf248.life/en/tags/github-copilot/</link>
        <description>Recent content in Github Copilot on Uncle Xiang&#39;s Notebook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Mon, 02 Jun 2025 05:33:00 +0800</lastBuildDate><atom:link href="https://ttf248.life/en/tags/github-copilot/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>AI-assisted programming, the evolution of productivity</title>
        <link>https://ttf248.life/en/p/ai-assisted-programming-productivity-evolution/</link>
        <pubDate>Tue, 28 Feb 2023 17:05:17 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/ai-assisted-programming-productivity-evolution/</guid>
        <description>&lt;p&gt;‚ÄúGitHub Copilot‚Äù was released less than two years ago, and ‚ÄúChatGPT‚Äù appeared shortly after. I don‚Äôt fully understand the underlying principles, but I&amp;rsquo;ve used them for a while. The two tools differ completely in their level of assistance, but they have both significantly increased productivity.&lt;/p&gt;
&lt;p&gt;For things that are too complex, AI still can‚Äôt do it ‚Äì after all, they lack logic, or operate on established patterns or fixed frameworks. If the training data is sufficient, AI can achieve nine out of ten results.&lt;/p&gt;
&lt;h2 id=&#34;github-copilot&#34;&gt;GitHub Copilot
&lt;/h2&gt;&lt;p&gt;When released, the demo on the official website wasn&amp;rsquo;t very smart, so I tried it and didn‚Äôt find it useful, so I gave up.&lt;/p&gt;
&lt;p&gt;Before 2022, when I had some free time, I switched to the new version to try it out, and the effect was already quite good; however, the speed in China was a bit slow, which was probably due to network issues. For languages like &lt;code&gt;Python&lt;/code&gt;, the code generated based on comments was pretty good, and much faster than researching and writing code myself.&lt;/p&gt;
&lt;h2 id=&#34;chatgpt&#34;&gt;ChatGPT
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Github Copilot&lt;/code&gt; still focuses on developers, i.e., from a development perspective when designing the product. You need to understand how to program and gradually guide AI assistance through comments.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ChatGPT&lt;/code&gt; has moved to the next level, &lt;strong&gt;allowing non-programmers to quickly get started&lt;/strong&gt;. The conversational chat interface design allows you to simply ask questions, describe requirements, and ask for clarification if you don&amp;rsquo;t understand.&lt;/p&gt;
&lt;p&gt;Let‚Äôs take a simple example: You know about tokenization but don‚Äôt know how to code it; you want to calculate the similarity of strings:&lt;/p&gt;
&lt;p&gt;Hello, this is Bing. üòä&lt;/p&gt;
&lt;p&gt;Based on online information 123, Python tokenization can be implemented using the jieba library. The jieba library supports three tokenization modes: precise mode, full mode, and search engine mode. You can choose the appropriate mode based on your needs. To compare the similarity of two strings, you first need to tokenize them and then calculate their word vectors or edit distance metrics. You can use libraries like NumPy or SciPy for mathematical operations.&lt;/p&gt;
&lt;p&gt;To standardize string processing, convert English strings to lowercase using Python&amp;rsquo;s built-in &lt;code&gt;lower()&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;To slice the second string, you can use Python‚Äôs slicing operator [].&lt;/p&gt;
&lt;p&gt;Here is a possible code example:&lt;/p&gt;
&lt;h2 id=&#34;chatgpt-1&#34;&gt;ChatGPT
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Going Further ‚Äì Consult the Execution Results. Congratulations, you‚Äôve identified an issue! The result was hallucinated; it did not actually run the code, but will provide a good-looking response.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;example&#34;&gt;Example
&lt;/h3&gt;&lt;p&gt;Question: SQL statement to retrieve records from the product code table where the product code falls within the range 80000-89999.
Follow-up question: Negate it: The product code is a string, your code is wrong.
Congratulations, it will misidentify.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
