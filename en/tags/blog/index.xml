<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Blog on Uncle Xiang&#39;s Notebook</title>
        <link>https://ttf248.life/en/tags/blog/</link>
        <description>Recent content in Blog on Uncle Xiang&#39;s Notebook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Mon, 02 Jun 2025 20:54:02 +0800</lastBuildDate><atom:link href="https://ttf248.life/en/tags/blog/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Adding a code copy button for seemingly simple things</title>
        <link>https://ttf248.life/en/p/add-copy-button-for-simple-task/</link>
        <pubDate>Fri, 25 Feb 2022 01:23:39 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/add-copy-button-for-simple-task/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;Spent four hours on this, and when I saw the sentence, it was hilarious. How could it have taken so long? Finally looked at the time: three hours.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This was the first draft of the year 2022, and it wasn’t complicated – exactly as the title said. (At that time, I was still quite young), I thought simply copying &lt;a class=&#34;link&#34; href=&#34;https://ouuan.github.io/post/from-hexo-to-hugo/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;作业&lt;/a&gt; would be enough, putting it in my favorites folder, and letting it sit for over a month before finally remembering the task.&lt;/p&gt;
&lt;p&gt;When migrating to &lt;code&gt;hugo&lt;/code&gt;, I always felt that the plugins were too few, couldn’t copy code, which made copying notes from Evernote to the blog very cumbersome, seriously hindering my motivation for writing a casual blog.&lt;/p&gt;
&lt;h2 id=&#34;foreword&#34;&gt;Foreword
&lt;/h2&gt;&lt;p&gt;First, carefully read the original author’s draft, read it through completely and flip through their introduction. Wow, I ran into a big shot – Tsinghua University undergraduate, has been exposed to computers since early on, huh? Just a facade, let&amp;rsquo;s take a look at this blog first, completely forgot what he was supposed to do. Also, check out the author’s &lt;code&gt;Github&lt;/code&gt; repository; this modified ‘even’ theme is much prettier than now and has more features, let’s get started, merge the relevant code into it.
&lt;img src=&#34;https://ttf248.life/p/add-copy-button-for-simple-task/2022-02-25-02-08-19.png&#34;
	width=&#34;215&#34;
	height=&#34;150&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;143&#34;
		data-flex-basis=&#34;344px&#34;
	
&gt; &lt;img src=&#34;https://ttf248.life/p/add-copy-button-for-simple-task/2022-02-25-02-08-40.png&#34;
	width=&#34;217&#34;
	height=&#34;167&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;129&#34;
		data-flex-basis=&#34;311px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;new-features-view-article-history-associate-submission-records&#34;&gt;New Features: View Article History, Associate Submission Records
&lt;/h3&gt;&lt;p&gt;The effect is still good, and you can experience it by dragging it to the end of the article.&lt;/p&gt;
&lt;p&gt;Before taking action, I didn’t carefully examine the author&amp;rsquo;s original repository history, assuming a simple merge would fix everything.  Ultimately, I merged a huge amount of code with numerous conflicts and N times of manual overrides – all of which were frontend and rendering template code, using the one that matched my requirements.&lt;/p&gt;
&lt;p&gt;Repository Address: &lt;a class=&#34;link&#34; href=&#34;https://github.com/TianlongXiang/hugo-theme-even&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/TianlongXiang/hugo-theme-even&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A Chinese pitfall: if &lt;code&gt;git&lt;/code&gt; doesn’t adjust this parameter, it will cause the generated link to not be able to obtain the current article&amp;rsquo;s &lt;code&gt;commit hash&lt;/code&gt;, resulting in history link generation failure.  When generating the complete historical record of the article, you also need to modify the automatic integration script and remember to pull the entire historical record of the current repository.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/TianlongXiang/TianlongXiang.github.io/commit/0d860154de9b335ed88a57d62eedd4b6e3ccbeee&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;feat: Attempt to fetch the full GitHub repository to dynamically update the last modification record of the article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/TianlongXiang/TianlongXiang.github.io/commit/1b5d719966737f16a8c67880370dc2722adea0b3&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;chore: Path contains Chinese, hugo GitInfo needs to enable this setting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;name: Build Github
run: git config --global core.quotePath false &amp;amp;&amp;amp; hugo -b &amp;quot;https://www.xiangtianlong.com/&amp;quot; -d &amp;quot;github_public&amp;quot; &amp;amp;&amp;amp; ls
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;style-adjustments&#34;&gt;Style Adjustments
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adjust website content width, the previous design was suitable for both mobile and desktop devices; in reality, no one actually viewed it on their phones, and I personally view it on my computer.&lt;/li&gt;
&lt;li&gt;The directory bar should support automatic expansion/contraction.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;body&#34;&gt;Body
&lt;/h2&gt;&lt;p&gt;Referenced &lt;code&gt;ouuan&lt;/code&gt;’s code records for half an hour or so, and still couldn&amp;rsquo;t quite understand how to increase the copy button.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Time travel, a month later, it came back to this matter again&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;text&#34;&gt;Text
&lt;/h2&gt;&lt;p&gt;Since I didn’t understand this assignment, I switched to copying from another source – it was definitely easier to grasp. The results of my search were surprisingly helpful; a forum post on the official &lt;code&gt;hugo&lt;/code&gt; website detailed how to add a copy button. After checking it out, I realized that the code block styles generated by &lt;code&gt;even&lt;/code&gt; differed from the descriptions in the documentation – this part was quite complicated. So, I’m just going to record this for reference.&lt;/p&gt;
&lt;p&gt;Because I don&amp;rsquo;t really understand front-end development, when I encounter something I don’t get, I open my browser’s “Inspect” tool and analyze the code alongside the style information on the right; I use JavaScript logs to help me understand the logic. There were many things I didn’t understand at first. Taking a deep breath and carefully breaking down the logic helped me find a solution eventually.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; nodes are multiple, this refers to a single code block. The theme itself rendered line numbers, which resulted in the copy button appearing twice.&lt;/li&gt;
&lt;li&gt;I wanted to disable the theme’s built-in code highlighting; unfortunately, I wasn&amp;rsquo;t familiar with the settings for this theme.&lt;/li&gt;
&lt;li&gt;I consulted the &lt;code&gt;hugo&lt;/code&gt; website and read some documentation – it was a bit confusing at first, but I learned that the &lt;code&gt;markup&lt;/code&gt; setting could control code highlighting.&lt;/li&gt;
&lt;li&gt;I adjusted the configuration file, but it didn’t work; the rendered output differed from my expectations.&lt;/li&gt;
&lt;li&gt;I discovered this bunch of settings called &lt;code&gt;pygmentsOptions&lt;/code&gt;, so I continued to consult documentation and adjust the settings, first removing the line numbers.&lt;/li&gt;
&lt;li&gt;I configured a custom CSS stylesheet and a custom JavaScript script.&lt;/li&gt;
&lt;li&gt;Since I’d already done so much, my brain suddenly remembered seeing a nice color palette recently, so I modified the button styles: Let&amp;rsquo;s go with the traditional Chinese sky blue!&lt;/li&gt;
&lt;/ol&gt;
&lt;img class=&#34;special-img-class&#34; style=&#34;width:20%&#34; src=&#34;2022-02-25-02-01-22.png&#34; /&gt;
&lt;img class=&#34;special-img-class&#34; style=&#34;width:20%&#34; src=&#34;2022-02-25-02-01-33.png&#34; /&gt;
&lt;p&gt;I spent four hours on this, and when I saw that sentence, I even found it funny – how could it take so long? Finally, I looked at the time: It was only three hours.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://ouuan.github.io/post/from-hexo-to-hugo/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://ouuan.github.io/post/from-hexo-to-hugo/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gohugobrasil.netlify.app/content-management/syntax-highlighting/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gohugobrasil.netlify.app/content-management/syntax-highlighting/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/getting-started/configuration-markup#highlight&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gohugo.io/getting-started/configuration-markup#highlight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.dannyguo.com/blog/how-to-add-copy-to-clipboard-buttons-to-code-blocks-in-hugo/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.dannyguo.com/blog/how-to-add-copy-to-clipboard-buttons-to-code-blocks-in-hugo/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Website Acceleration and Domain Settings</title>
        <link>https://ttf248.life/en/p/website-acceleration-and-domain-setup/</link>
        <pubDate>Sat, 20 Jun 2020 10:36:27 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/website-acceleration-and-domain-setup/</guid>
        <description>&lt;p&gt;Due to slow access to GitHub Pages from within the country, the author applied for a personal domain and purchased CDN acceleration services from a domestic cloud host provider. During the configuration process, the author encountered an issue where the www subdomain could not be accessed, which was ultimately resolved by deleting the generic domain DNS record and setting up a second-level domain separately. The author also shared the principles and configuration experience of CDN acceleration, as well as their attempts and lessons learned using reverse proxy with Nginx.&lt;/p&gt;
&lt;h3 id=&#34;background&#34;&gt;Background
&lt;/h3&gt;&lt;p&gt;The website is hosted on GitHub Pages, and due to some well-known reasons, accessing GitHub Pages internally can be slow. Therefore, I applied for a personal domain name and purchased CDN acceleration services from a domestic cloud host provider. When configuring the acceleration service, I thought about my development machine, which has Docker, frp, k8s, and other services deployed on it – all with their respective dashboards. Following the principle of not wasting anything, I configured several reverse proxies, all using subdomains.&lt;/p&gt;
&lt;p&gt;When I was happily using these subdomains, I discovered that the www subdomain could no longer be accessed. In the Alibaba Cloud console, I had configured DNS to resolve both &lt;a class=&#34;link&#34; href=&#34;https://www.xiangtianlong.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;www.xiangtianlong.com&lt;/a&gt; and xiangtianlong.com, and hadn’t yet enabled CDN acceleration; at that time, both domains were working normally.&lt;/p&gt;
&lt;p&gt;When configuring CDN acceleration, due to a large number of subdomains, I enabled generic domain rules, which unified routed all traffic to the development machine. As a result, the www subdomain also went down – yes, you read that right, the “www” prefix was a subdomain. In reality, the website is deployed on GitHub Pages, and the development machine has no caching information for the site.&lt;/p&gt;
&lt;p&gt;As for why the website wasn’t deployed on the development machine, it&amp;rsquo;s because it’s a static blog, paired with GitHub’s action to automatically integrate publishing – truly delicious!&lt;/p&gt;
&lt;h3 id=&#34;domain&#34;&gt;Domain
&lt;/h3&gt;&lt;p&gt;Non-professional web development, the understanding of domains does not involve SEO or cross-origin issues. As a blog site, a bare domain easily highlights the blogger&amp;rsquo;s site, such as myself who uses Chinese pinyin as my domain name, and given that mobile access is now more prevalent, it’s preferable to input fewer characters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Keyboard shortcuts can be used on desktop to avoid entering “www” and “com”.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;cdn&#34;&gt;CDN
&lt;/h3&gt;&lt;p&gt;I&amp;rsquo;ve used both Alibaba Cloud and Tencent Cloud, and it’s easy for newcomers to get started. Tencent Cloud also has dedicated video explanations of the related concepts. The principle of CDN acceleration is similar to that of a JD.com warehouse: new products are pre-distributed to warehouses across China, and when delivery requests are triggered, they&amp;rsquo;re distributed locally.&lt;/p&gt;
&lt;p&gt;Origin Address: The address where the original website resources are stored.&lt;/p&gt;
&lt;p&gt;Cache file settings: Using F12 in your browser’s developer console to analyze static and dynamic resources.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All 0 days validity&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.php;.jsp;.asp;.aspx&lt;/code&gt; 0 days validity&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.jpg;.png;.js;.css;.woff2&lt;/code&gt; 1 day validity&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tencent Cloud configuration rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can configure up to 10 cache expiration rules.&lt;/li&gt;
&lt;li&gt;The priority of multiple cache expiration rules is bottom-first.&lt;/li&gt;
&lt;li&gt;Cache expiration time can be set up to a maximum of 365 days.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;miserable-confession&#34;&gt;Miserable Confession
&lt;/h3&gt;&lt;p&gt;I had never used Nginx before, assuming that just searching for a website would reveal the configuration for reverse proxy. The result was quite confusing, and I spent half a day without even getting a 302 redirect to work. So, I decided to take a brute-force approach – deleting wildcard domain resolution patterns in DNS parsing and setting up individual second-level domains. Suddenly, I noticed that Alibaba Cloud DNS had a feature called &amp;ldquo;Display URL Redirect,&amp;rdquo; which worked perfectly as a 302 redirect.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I set up the first second-level domain normally, and then when I tried to set up the second one, it didn&amp;rsquo;t work. I was starting to doubt my sanity. After waiting for a while, it suddenly started working – apparently, Alibaba Cloud DNS sometimes has hiccups with its DNS propagation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;references&#34;&gt;References
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.zhihu.com/question/20414602&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Why are more and more website domain names not prefixed with &amp;ldquo;www&amp;rdquo;?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cloudxns.net/Support/detail/id/918.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;What&amp;rsquo;s the difference between domains with and without &amp;ldquo;www&amp;rdquo;?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gythialy.github.io/Docker-nginx-reverse-proxy/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker nginx reverse proxy setup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Blog IDE Environment and Ramblings</title>
        <link>https://ttf248.life/en/p/blog-ide-environment-and-ramblings/</link>
        <pubDate>Tue, 31 Mar 2020 13:54:27 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/blog-ide-environment-and-ramblings/</guid>
        <description>&lt;p&gt;This article introduces the basic concepts of Markdown and its applications in various software, recommends using VSCode as an IDE, and lists recommended plugins. The author shares their experience switching from Hexo to Hugo, emphasizing Hugo’s flexibility and customization capabilities. Finally, it provides some suggestions for quickly getting started with new technologies and shares a trick for resolving the issue of Hugo theme styles not updating.&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction
&lt;/h2&gt;&lt;h3 id=&#34;markdown&#34;&gt;Markdown
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;A lightweight markup language that allows people to write documents in an easy-to-read and -write plain text format.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;markdown-1&#34;&gt;Markdown
&lt;/h3&gt;&lt;p&gt;Detailed Markdown syntax will not be elaborated upon in this document. We recommend an ebook, &lt;a class=&#34;link&#34; href=&#34;https://markdown-zh.readthedocs.io/en/latest/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;click here&lt;/a&gt;. Many software applications on the market now support MD as a writing format. The csdn blog system has launched an online editor that supports MD syntax; the default article when first using it is an introduction to MD syntax, which I think is quite good. Evernote added support for MD notes in 2018, with various MD markers available in the shortcut bar, making it almost as easy to use as editing a regular article, and the overall interaction process is friendly to beginners.&lt;/p&gt;
&lt;h3 id=&#34;ide-recommendations&#34;&gt;IDE Recommendations
&lt;/h3&gt;&lt;p&gt;When writing this article, it’s already 2020 – you’ve undoubtedly heard of VS Code, after all, anyone thinking about using Git Page to build a blog system is an industry professional. In the early years, Sublime and Atom were also good choices. Thanks to two years of promotion by the open-source community, VS Code has developed rapidly and has gradually become the preferred choice for newcomers.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The relationship between Microsoft’s giant corporation and the open-source community has successfully transitioned from a state of division into a honeymoon phase: embracing open source. My company has also actively introduced the Java ecosystem in recent two years, meaning that in business development, Java&amp;rsquo;s ecosystem is currently very fragrant domestically.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;vs-code-plugin-recommendations&#34;&gt;VS Code Plugin Recommendations
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/blog-ide-environment-and-ramblings/2020-03-31-14-07-17.png&#34;
	width=&#34;310&#34;
	height=&#34;306&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Plugin List&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;101&#34;
		data-flex-basis=&#34;243px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;All plugins have their own Readme files, introducing basic usage, core functions, and some authors even provide demo screenshots.
&lt;code&gt;Paste Image&lt;/code&gt;, combined with Hugo&amp;rsquo;s image plugin method, is very convenient for importing images.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Don’t remember the shortcuts, open the VS Code shortcut management menu, search for “md”, read it several times; review it again to see the plugin usage instructions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;hugo&#34;&gt;Hugo
&lt;/h2&gt;&lt;p&gt;I switched from Hexo to Hugo, as I love tinkering – it’s just my nature! Ultimately, I couldn&amp;rsquo;t resist the urge to quietly write articles.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Hugo supports placing images and Markdown documents in a single folder.&lt;/li&gt;
&lt;li&gt;The Academic theme supports various article styles in its design.&lt;/li&gt;
&lt;li&gt;Various convenient customization extensions.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;academic&#34;&gt;academic
&lt;/h2&gt;&lt;p&gt;The default website is &lt;code&gt;exampleSite&lt;/code&gt;, and menu introduction uses the &lt;code&gt;#component&lt;/code&gt; approach. It’s recommended to use &lt;code&gt;url&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The URL pattern allows for single-page navigation when clicking on navigation links, rather than scrolling to the homepage. This is purely a matter of personal preference.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Style: Notebooks, Speeches, eBooks&lt;/li&gt;
&lt;li&gt;Flexibility: Customization of overall style and custom CSS styles&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This theme’s Chinese support isn&amp;rsquo;t fully complete; primarily from a visual perspective, the font sizes don’t align well with Chinese reading habits. However, Hexo’s development team is largely comprised of Chinese developers, which is an advantage over Hugo in this regard.  Nevertheless, “you get what you build” – manually customize your browser elements. When locating an element to determine the CSS style name to modify, clicking &lt;strong&gt;Insert Style Rule Below&lt;/strong&gt; allows you to easily obtain the node name even with nested CSS layers.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://sourcethemes.com/academic/docs/customization/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Introduce &lt;code&gt;custom.css&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://sourcethemes.com/academic/docs/customization/#add-scripts-js&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Introduce &lt;code&gt;custom_js&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The theme’s built-in syntax highlighting settings can be found here: &lt;a class=&#34;link&#34; href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/#highlighting-options.&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Official Link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;The kids are complaining again, saying you talk in such a vague and unclear way, without mentioning any details.&lt;/p&gt;
&lt;p&gt;What I want to say is that with these things, you have enough to work with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Official Manuals&lt;/li&gt;
&lt;li&gt;Plugin Documentation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When quickly getting started with new technologies, it’s recommended to first read the official website documentation, &lt;strong&gt;scanning through&lt;/strong&gt; – not aiming for a single thorough reading.  The results you get from search engines may not always be consistent with the latest version and could potentially mislead you. Reviewing a new book in the same way is also advisable: first look at the table of contents to understand what the author intends to cover, and sometimes it’s beneficial to read the introduction – particularly with translated foreign books, the preface often covers the core content of the book and its scope.&lt;/p&gt;
&lt;h2 id=&#34;easter-eggs&#34;&gt;Easter Eggs
&lt;/h2&gt;&lt;p&gt;Switching the Hugo Academic built-in style settings and publishing to the site, the style didn&amp;rsquo;t change when accessed. A clever teammate already figured it out – clearing local browser cache solved the problem.  I, being equally ingenious, used: F12 developer mode, switched to &lt;code&gt;network&lt;/code&gt;, checked &lt;code&gt;disable cache&lt;/code&gt;, refreshed, and voila!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/blog-ide-environment-and-ramblings/2020-03-31-14-27-15.png&#34;
	width=&#34;399&#34;
	height=&#34;142&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;network&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;280&#34;
		data-flex-basis=&#34;674px&#34;
	
&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>Automatic System Switchover</title>
        <link>https://ttf248.life/en/p/auto-integration-system-switch/</link>
        <pubDate>Sun, 29 Mar 2020 02:11:33 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/auto-integration-system-switch/</guid>
        <description>&lt;p&gt;Use GitHub Actions to automatically deploy your Hugo blog to GitHub Pages and Gitee.&lt;/p&gt;
&lt;h4 id=&#34;background-introduction&#34;&gt;Background Introduction
&lt;/h4&gt;&lt;p&gt;Yesterday while updating the blog, I discovered that the travis service was unavailable. Upon checking the travis webpage, I noticed the progress was stuck during source code retrieval, and a flash of insight occurred – I thought about GitHub’s previously launched action service.&lt;/p&gt;
&lt;p&gt;Due to being busy at the time and also needing to apply for access to use action, it has now officially gone live. With some free weekend time, I decided to try out a new toy?&lt;/p&gt;
&lt;p&gt;Official documentation can be found by entering the website yourself; this article won&amp;rsquo;t provide further reprints. If you’ve used Kubernetes before, you’ll find that the action YAML file configuration is very similar.&lt;/p&gt;
&lt;p&gt;Regarding introductory tutorials or Chinese introduction materials, I recommend searching for &lt;strong&gt;阮一峰’s blog&lt;/strong&gt;. There are two articles – the first introduces the basic syntax, and the second provides a practical case study.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;#### Content

Required Knowledge Points
- GitHub Secrets
- Action Syntax
Core jobs use existing components to complete, pushing to domestic Gitee uses command implementation, this command part is quite brutal, all are forced pushes, inherited from the logic used with Travis.

```yaml
name: github pages and gitee pages

on:
  push:
    branches:
      - hugo

jobs:
  deploy:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: &#39;latest&#39;
          extended: true

      - name: Build Github and Gitee ## Single step can only write one run command
        run: hugo -b &amp;quot;https://www.xiangtianlong.com/&amp;quot; -d &amp;quot;github_public&amp;quot; &amp;amp;&amp;amp; hugo -b &amp;quot;https://www.xiangtianlong.com/&amp;quot; -d &amp;quot;gitee_public&amp;quot; &amp;amp;&amp;amp; ls

      - name: Deploy Github
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.BLOG_TOKEN }}
          publish_dir: ./github_public
          publish_branch: master
          cname: xiangtianlong.com

      - name: Deploy Gitee
        run: cd ./gitee_public &amp;amp;&amp;amp; git init &amp;amp;&amp;amp; git config user.name &amp;quot;TianlongXiang&amp;quot; &amp;amp;&amp;amp; git config user.email &amp;quot;tianlongxiang51@gmail.com&amp;quot; &amp;amp;&amp;amp; git add . &amp;amp;&amp;amp; git commit -m &amp;quot;Update TianlongXiang&#39;s Blog&amp;quot; &amp;amp;&amp;amp; git push --force &amp;quot;https://xiangtianlong:${{ secrets.GITEE_PASSWORD }}@gitee.com/xiangtianlong/xiangtianlong.git&amp;quot; master:master
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
#### Epilogue

Based on the actions provided by the official market, currently there are quite a few supported playstyles. After building a Docker image, it’s no longer dependent on services offered by Docker Hub. 

Reviewing the Hugo issues, using GitHub Actions to automatically deploy Git Pages results in the final published website needing to be on the master branch. If deployed from another branch, the settings interface will prompt an error indicating that the deployed webpage has syntax problems.

This is simply because Hugo’s source files are located on the master branch, and GitHub treats it as the Jelly blog&#39;s source code for detection, unable to check and resolve any errors resulting in the error message. 

The solution is straightforward: move Hugo source files to another branch and publish static files to the master branch.&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
        
    </channel>
</rss>
