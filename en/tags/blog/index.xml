<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Blog on Uncle Xiang&#39;s Notebook</title>
        <link>https://ttf248.life/en/tags/blog/</link>
        <description>Recent content in Blog on Uncle Xiang&#39;s Notebook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Sun, 01 Jun 2025 15:38:14 +0800</lastBuildDate><atom:link href="https://ttf248.life/en/tags/blog/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Adding a code copy button – seemingly simple things</title>
        <link>https://ttf248.life/en/p/add-code-copy-button/</link>
        <pubDate>Fri, 25 Feb 2022 01:23:39 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/add-code-copy-button/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;Spent four hours trying to figure this out, and when I saw the sentence, it was hilarious. How could it have taken so long? When I finally looked at the time, it was only three hours.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This was the first draft of the year 2022, and it wasn&amp;rsquo;t complicated – exactly as the title said. (At that time, I was still very young), I thought simply copying &lt;a class=&#34;link&#34; href=&#34;https://ouuan.github.io/post/from-hexo-to-hugo/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;作业&lt;/a&gt; would be enough, putting it in my favorites folder, and dragging it out for over a month before finally remembering the task.&lt;/p&gt;
&lt;p&gt;When migrating to &lt;code&gt;hugo&lt;/code&gt;, I always felt that the plugins were too few, couldn&amp;rsquo;t copy code, which made copying notes from Evernote to the blog very cumbersome, seriously hindering my motivation for writing a casual blog.&lt;/p&gt;
&lt;h2 id=&#34;foreword&#34;&gt;Foreword
&lt;/h2&gt;&lt;p&gt;First, carefully read the original author’s draft, read it through completely and flip through the author&amp;rsquo;s introduction. Wow, I encountered a big shot – Tsinghua University undergraduate, has been exposed to computers early on. Let’s see, just a facade, let’s take a look at this blog first, completely forgot what he was supposed to do. Also browse the author’s &lt;code&gt;Github&lt;/code&gt; repository, this modified ‘even’ theme is much more beautiful than now and has many new features, let&amp;rsquo;s get started, first merge the related code into the current one.
&lt;img src=&#34;https://ttf248.life/p/add-copy-button-for-simple-task/2022-02-25-02-08-19.png&#34;
	width=&#34;215&#34;
	height=&#34;150&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;143&#34;
		data-flex-basis=&#34;344px&#34;
	
&gt; &lt;img src=&#34;https://ttf248.life/p/add-copy-button-for-simple-task/2022-02-25-02-08-40.png&#34;
	width=&#34;217&#34;
	height=&#34;167&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;129&#34;
		data-flex-basis=&#34;311px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;new-features-view-article-history-associate-submission-records&#34;&gt;New Features: View Article History, Associate Submission Records
&lt;/h3&gt;&lt;p&gt;The effect is still good, and you can experience it by dragging it to the end of the article.&lt;/p&gt;
&lt;p&gt;Before taking action, I didn’t carefully examine the author&amp;rsquo;s original repository history, assuming a simple merge would fix everything. In the end, I merged a huge amount of code with numerous conflicts and N times of mindless overwriting – all of which were frontend and rendering template codes. I took the version I needed as the standard.&lt;/p&gt;
&lt;p&gt;Repository address: &lt;a class=&#34;link&#34; href=&#34;https://github.com/TianlongXiang/hugo-theme-even&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/TianlongXiang/hugo-theme-even&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A Chinese pitfall: if &lt;code&gt;git&lt;/code&gt; doesn’t adjust this parameter, the generated one won&amp;rsquo;t get the current article’s &lt;code&gt;commit hash&lt;/code&gt;, causing the history link generation to fail. When generating the complete historical record of the article, you also need to modify the automatic integration script and remember to pull the entire historical record of the current repository.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[feat: Attempt to pull the full GitHub repository to dynamically update the last modification record of the article](&lt;a class=&#34;link&#34; href=&#34;https://github.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;new-features-view-article-history-associate-submission-records-1&#34;&gt;New Features: View Article History, Associate Submission Records
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/TianlongXiang/TianlongXiang.github.io/commit/1b5d719966737f16a8c67880370dc2722adea0b3&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;chore: Path contains Chinese, Hugo GitInfo needs to enable this setting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;style-adjustments&#34;&gt;Style Adjustments
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adjust website content width, the previous design was suitable for both mobile and desktop devices; in reality, no one actually viewed it on their phones, and I personally view it on my computer.&lt;/li&gt;
&lt;li&gt;The directory bar supports automatic expansion/collapse.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;body&#34;&gt;Body
&lt;/h2&gt;&lt;p&gt;Referenced the &lt;code&gt;ouuan&lt;/code&gt; code records for half an hour and still couldn&amp;rsquo;t quite understand how to increase the copy button.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Time travel, a month later, it came back to this matter again&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;body-1&#34;&gt;Body
&lt;/h2&gt;&lt;p&gt;Since I didn’t understand this assignment, I switched to copying from another one – it&amp;rsquo;s always easier to understand when you copy. The results of my searches were surprisingly helpful; a post on the official &lt;code&gt;hugo&lt;/code&gt; forum mentioned how to add a copy button. Going there to check, the logic was clear. It was baffling until I returned to the site and saw that the styling generated by &lt;code&gt;even&lt;/code&gt; differed from the description in the documentation – this part was quite complicated. I’m just going to record it simply.&lt;/p&gt;
&lt;p&gt;Because I don&amp;rsquo;t really understand front-end development, when I don&amp;rsquo;t know something, I open my browser’s “Inspect” tool and analyze the code, relying on the style information on the right side to slowly figure out the logic; I didn’t understand &lt;code&gt;JavaScript&lt;/code&gt;, so I added some logs to the console. There were many things I didn’t understand at first. Taking a deep breath and carefully sorting through and breaking down the logic, you can always find a solution.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;code&gt;pre&lt;/code&gt; node has multiple instances; here it refers to a single code block, which the theme rendered with line numbers, resulting in two copies when the copy button is used.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;I wanted to disable the theme&amp;rsquo;s built-in code highlighting, but I’m unfamiliar with these theme settings.&lt;/li&gt;
&lt;li&gt;I consulted the &lt;code&gt;hugo&lt;/code&gt; website for resources and read a bit, learning that there’s a &lt;code&gt;markup&lt;/code&gt; setting to control code highlighting.&lt;/li&gt;
&lt;li&gt;Adjusting the configuration file didn’t work; the rendering was different from what I expected.&lt;/li&gt;
&lt;li&gt;I discovered this set of settings &lt;code&gt;pygmentsOptions&lt;/code&gt; and continued to consult documentation, adjusting the settings, starting by removing line numbers.&lt;/li&gt;
&lt;li&gt;I configured a custom &lt;code&gt;css&lt;/code&gt; stylesheet and a custom &lt;code&gt;js&lt;/code&gt; script.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;body-2&#34;&gt;Body
&lt;/h2&gt;&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;Since I’ve been doing so much, my brain suddenly thought of a color palette I saw recently that looked good, and changed the button styles: Let&amp;rsquo;s go with Chinese-style sky blue.&lt;/li&gt;
&lt;/ol&gt;
&lt;img class=&#34;special-img-class&#34; style=&#34;width:20%&#34; src=&#34;2022-02-25-02-01-22.png&#34; /&gt;
&lt;img class=&#34;special-img-class&#34; style=&#34;width:20%&#34; src=&#34;2022-02-25-02-01-33.png&#34; /&gt;
ouuan spent four hours on this, and when I saw that sentence, I even thought it was funny. How could it take so long? When I looked at the time, it was only three hours.
&lt;h2 id=&#34;references&#34;&gt;References
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://ouuan.github.io/post/from-hexo-to-hugo/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://ouuan.github.io/post/from-hexo-to-hugo/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gohugobrasil.netlify.app/content-management/syntax-highlighting/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gohugobrasil.netlify.app/content-management/syntax-highlighting/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/getting-started/configuration-markup#highlight&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gohugo.io/getting-started/configuration-markup#highlight&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference-links&#34;&gt;Reference Links
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.dannyguo.com/blog/how-to-add-copy-to-clipboard-buttons-to-code-blocks-in-hugo/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.dannyguo.com/blog/how-to-add-copy-to-clipboard-buttons-to-code-blocks-in-hugo/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Website Acceleration and Domain Settings</title>
        <link>https://ttf248.life/en/p/website-acceleration-and-domain-setup/</link>
        <pubDate>Sat, 20 Jun 2020 10:36:27 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/website-acceleration-and-domain-setup/</guid>
        <description>&lt;p&gt;Due to slow access to GitHub Pages from within the country, the author applied for a personal domain and purchased CDN acceleration services from a domestic cloud host provider. During configuration, the author encountered an issue where the www subdomain could not be accessed, which was ultimately resolved by deleting the generic domain DNS record and setting up a second-level domain separately. The author also shared the principles and configuration experience of CDN acceleration, as well as attempts and lessons learned using Nginx reverse proxy.&lt;/p&gt;
&lt;h3 id=&#34;background&#34;&gt;Background
&lt;/h3&gt;&lt;p&gt;The website is hosted on GitHub Pages, and due to some well-known reasons, accessing GitHub Pages internally can be slow. Therefore, I applied for a personal domain name and purchased CDN acceleration services from a domestic cloud host provider. When configuring the acceleration service, I thought about my development machine, which deployed Docker, frp, k8s, and other services – all of these had accompanying dashboards. Following the principle of not wasting anything, I configured several reverse proxies, all with second-level domain names.&lt;/p&gt;
&lt;p&gt;When I was happily using the second-level domain names, I suddenly discovered that the www subdomain could no longer be accessed. In Aliyun, I configured DNS to resolve both &lt;a class=&#34;link&#34; href=&#34;https://www.xiangtianlong.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;www.xiangtianlong.com&lt;/a&gt; and xiangtianlong.com, and before enabling CDN acceleration, both domains were working normally. When configuring CDN acceleration, due to a large number of second-level domains, we enabled wildcard domain rules and unified routing them to the development machine. As a result, the ‘www’ second-level domain also went down – yes, you read that right, the ‘www’ prefix is indeed a second-level domain. The actual website is deployed on GitHub Pages, and the development machine has no cached website information.&lt;/p&gt;
&lt;p&gt;As for why the site wasn&amp;rsquo;t deployed to the development machine, it was because it was a static blog, paired with GitHub’s provided action that automatically integrates publishing – seriously delicious!&lt;/p&gt;
&lt;h3 id=&#34;domain&#34;&gt;Domain
&lt;/h3&gt;&lt;p&gt;Non-professional web development, the understanding of domains does not involve SEO or cross-origin issues. As a blog site, a bare domain easily highlights the blogger&amp;rsquo;s site, such as myself who uses Chinese Pinyin as my domain name, and given that mobile access is now more prevalent, it’s preferable to input fewer characters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Keyboard shortcuts can be used on desktop to avoid entering “www” and “com”.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;cdn&#34;&gt;CDN
&lt;/h3&gt;&lt;p&gt;I&amp;rsquo;ve used both Alibaba Cloud and Tencent Cloud, and it’s easy for newcomers to get started. Tencent Cloud also has separate video explanations of the related concepts. The principle of CDN acceleration is similar to that of a JD.com warehouse: new products are shipped in advance to warehouses across China, and when delivery requests are triggered, they are distributed locally.&lt;/p&gt;
&lt;p&gt;Origin Address: The address where the original website resources are stored.&lt;/p&gt;
&lt;p&gt;Cache file settings: Using F12 in your browser’s developer console to analyze static and dynamic resources.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All 0 days validity&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.php;.jsp;.asp;.aspx&lt;/code&gt; 0 days validity&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.jpg;.png;.js;.css;.woff2&lt;/code&gt; 1 day validity&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tencent Cloud configuration rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can configure up to 10 cache expiration rules.&lt;/li&gt;
&lt;li&gt;The priority of multiple cache expiration rules is bottom-first.&lt;/li&gt;
&lt;li&gt;Cache expiration time can be set up to a maximum of 365 days.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;miserable-confession&#34;&gt;Miserable Confession
&lt;/h3&gt;&lt;p&gt;I had never used Nginx before, assuming I could figure out reverse proxy configuration by simply searching for website information. The result was quite chaotic; I struggled for half a day without even getting a 302 redirect to work. So, I decided to take a brute-force approach – deleting wildcard domain resolution patterns in DNS and setting up individual second-level domains. Suddenly, I noticed that Alibaba Cloud DNS had a &amp;ldquo;Display URL Redirect&amp;rdquo; feature, which worked perfectly as a 302 redirect.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;After setting the first second-level domain normally, when I tried to set the second one, it didn&amp;rsquo;t work, and I almost lost my mind.  I waited for a while, and then it suddenly started working – apparently, Alibaba Cloud DNS sometimes has hiccups with its DNS propagation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;references&#34;&gt;References
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.zhihu.com/question/20414602&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Why are more and more website domain names not prefixed with &amp;ldquo;www&amp;rdquo;?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cloudxns.net/Support/detail/id/918.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;What&amp;rsquo;s the difference between domains with and without “www”?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gythialy.github.io/Docker-nginx-reverse-proxy/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker Nginx Reverse Proxy Setup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Blog IDE Environment and Ramblings</title>
        <link>https://ttf248.life/en/p/blog-ide-environment-and-ramblings/</link>
        <pubDate>Tue, 31 Mar 2020 13:54:27 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/blog-ide-environment-and-ramblings/</guid>
        <description>&lt;p&gt;This article introduces the basic concepts of Markdown and its applications in various software, recommends using VSCode as an IDE, and lists recommended plugins. The author shares their experience switching from Hexo to Hugo, emphasizing Hugo’s flexibility and customization capabilities. Finally, it provides some suggestions for quickly getting started with new technologies and shares a trick for resolving the issue of Hugo theme styles not updating.&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction
&lt;/h2&gt;&lt;h3 id=&#34;markdown&#34;&gt;Markdown
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;A lightweight markup language that allows people to write documents in an easy-to-read and -write plain text format.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;markdown-1&#34;&gt;Markdown
&lt;/h3&gt;&lt;p&gt;Detailed Markdown syntax will not be elaborated upon in this document. We recommend an ebook, &lt;a class=&#34;link&#34; href=&#34;https://markdown-zh.readthedocs.io/en/latest/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;click here&lt;/a&gt;. Many software applications on the market now support MD as a writing format. The csdn blog system has launched an online editor that supports MD syntax; the first time you use it, there is a default introduction article about MD syntax, which I think is quite good. iNotes added support for MD notes in 2018, with various MD markers in the shortcut bar, and it&amp;rsquo;s almost as easy to use as editing a regular article. The overall interaction process is friendly to beginners.&lt;/p&gt;
&lt;h3 id=&#34;ide-recommendations&#34;&gt;IDE Recommendations
&lt;/h3&gt;&lt;p&gt;When writing this article, it’s already 2020 – you’ve undoubtedly heard of VS Code, after all, anyone thinking about using Git Page to build a blog system is an industry professional. In the early years, Sublime and Atom were also good choices. With two years of promotion from the open-source community, VS Code has developed rapidly and has gradually become the preferred choice for newcomers.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The relationship between Microsoft’s giant and the open-source community has successfully transitioned into a honeymoon phase: embracing open source. Our company has also actively introduced the Java ecosystem in recent two years, meaning that in business development, Java&amp;rsquo;s ecosystem is currently very fragrant domestically.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;vs-code-plugin-recommendations&#34;&gt;VS Code Plugin Recommendations
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/blog-ide-environment-and-ramblings/2020-03-31-14-07-17.png&#34;
	width=&#34;310&#34;
	height=&#34;306&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Plugin List&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;101&#34;
		data-flex-basis=&#34;243px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;All plugins have their own Readme files, introducing basic usage, core functions, and some authors even provide dynamic effect demonstration images.
&lt;code&gt;Paste Image&lt;/code&gt;, combined with Hugo&amp;rsquo;s image plugin method, is very convenient for importing images.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Don’t remember the shortcuts, open the VS Code shortcut management menu, search for “md”, read it several times; review it again to look at the plugin usage instructions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;hugo&#34;&gt;Hugo
&lt;/h2&gt;&lt;p&gt;I switched from Hexo to Hugo, as I love tinkering – it’s just my nature! Ultimately, I couldn&amp;rsquo;t resist the urge to quietly write articles.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Hugo supports placing images and Markdown documents in a single folder.&lt;/li&gt;
&lt;li&gt;The Academic theme supports various article styles in its design.&lt;/li&gt;
&lt;li&gt;Various convenient customization extensions.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;academic&#34;&gt;academic
&lt;/h2&gt;&lt;p&gt;The default website is &lt;code&gt;exampleSite&lt;/code&gt;, and menu introduction uses the &lt;code&gt;#component&lt;/code&gt; method, it’s recommended to use &lt;code&gt;url&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The URL pattern allows navigation links to jump to a single page instead of scrolling on the homepage – this is purely a matter of personal preference.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Styles: Notebooks, Speeches, eBooks&lt;/li&gt;
&lt;li&gt;Flexibility: Customization of overall style and custom CSS styles.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This theme’s Chinese support isn&amp;rsquo;t very complete; primarily from a visual perspective, the font sizes don’t align well with Chinese reading habits. The Hexo development team is largely comprised of Chinese developers, which is an advantage over Hugo in this regard. However, it’s rewarding to do things yourself and customize – browser element auditing. When you locate an element, to find out the CSS style name you need to modify, click &lt;strong&gt;Insert Style Rule Below&lt;/strong&gt; on the sidebar, even with nested CSS layers, you can easily get the node name.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[Introduce &lt;code&gt;custom.css&lt;/code&gt;](https://sourcethemes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;academic-1&#34;&gt;academic
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Built-in syntax highlighting settings, &lt;a class=&#34;link&#34; href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/#highlighting-options.&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;official link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;The kids are complaining again, saying you talk in such a vague and unclear way, without mentioning any details.&lt;/p&gt;
&lt;p&gt;What I want to say is that with these things, you have enough to work with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Official Manuals&lt;/li&gt;
&lt;li&gt;Plugin Documentation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When quickly getting started with new technologies, it’s recommended to first read the official website documentation, &lt;strong&gt;scanning through&lt;/strong&gt; – not necessarily reading it cover to cover, but at least having a general idea. Search engine results may not always be consistent with the latest version and could potentially mislead you. Similarly, when reviewing a new book, start by looking at the table of contents to understand what the author intends to discuss; sometimes, reading the introduction first is beneficial, especially with translated foreign books where the translator’s preface often covers the core content of the book.&lt;/p&gt;
&lt;h2 id=&#34;easter-eggs&#34;&gt;Easter Eggs
&lt;/h2&gt;&lt;p&gt;Switching the Hugo Academic built-in style and theme, publishing to the site, and accessing it did not result in a change of style. A clever teammate already figured this out – clearing the local browser cache resolved the issue.  It was then that I, with my ingenuity, used Developer Mode (F12), switched to &lt;code&gt;network&lt;/code&gt;, checked “disable cache,” refreshed, and voila!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/blog-ide-environment-and-ramblings/2020-03-31-14-27-15.png&#34;
	width=&#34;399&#34;
	height=&#34;142&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;network&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;280&#34;
		data-flex-basis=&#34;674px&#34;
	
&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>Automatic System Switchover</title>
        <link>https://ttf248.life/en/p/auto-integration-system-switch/</link>
        <pubDate>Sun, 29 Mar 2020 02:11:33 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/auto-integration-system-switch/</guid>
        <description>&lt;p&gt;Use GitHub Actions to automatically deploy your Hugo blog to GitHub Pages and Gitee.&lt;/p&gt;
&lt;h4 id=&#34;background-introduction&#34;&gt;Background Introduction
&lt;/h4&gt;&lt;p&gt;Yesterday while updating the blog, I discovered that the travis service was unavailable. Upon checking the travis webpage, I noticed the progress was stuck during source code retrieval, and a flash of inspiration hit me – I thought about GitHub’s previously launched action service.&lt;/p&gt;
&lt;p&gt;At the time, I was quite busy, and also needed to apply to use action. Now that it has officially gone live, I have some free time over the weekend and wanted to try out a new toy?&lt;/p&gt;
&lt;p&gt;Official documentation can be found by entering the website yourself; this article will not do much more copying and pasting. If you’ve used Kubernetes before, you&amp;rsquo;ll find that the action YAML file configuration is very similar.&lt;/p&gt;
&lt;p&gt;Regarding introductory tutorials or Chinese introduction materials, I recommend searching for &lt;strong&gt;阮一峰’s blog&lt;/strong&gt;. There are two articles – the first introduces the basic syntax, and the second provides a practical case study.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;#### Content

Knowledge Points Needed
- GitHub Secrets
- Action Syntax
The core job uses existing components to complete the task, and pushing to the domestic Gitee is implemented using commands. This command approach is quite brute force, as it performs forceful pushes, inheriting the logic used with Travis.
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;epilogue&#34;&gt;Epilogue
&lt;/h4&gt;&lt;p&gt;Based on the actions provided by the official market, currently there are quite a few supported playstyles. After building a Docker image, it’s no longer dependent on services offered by Docker Hub.&lt;/p&gt;
&lt;p&gt;Reviewing the Hugo issues, using GitHub Actions to automatically deploy Git Pages results in the final published website needing to be on the master branch. If deployed from another branch, the settings interface will prompt an error indicating that the deployed webpage has syntax problems.&lt;/p&gt;
&lt;p&gt;This is simply because Hugo’s source files are located on the master branch, and GitHub treats it as the Jelly blog&amp;rsquo;s source code for detection, unable to check and resolve any errors resulting in the error message.&lt;/p&gt;
&lt;p&gt;The solution is straightforward: move Hugo source files to another branch and publish static files to the master branch.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
