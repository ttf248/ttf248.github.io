<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Blog on Uncle Xiang&#39;s Notebook</title>
        <link>https://ttf248.life/en/tags/blog/</link>
        <description>Recent content in Blog on Uncle Xiang&#39;s Notebook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Sun, 25 May 2025 02:57:45 +0800</lastBuildDate><atom:link href="https://ttf248.life/en/tags/blog/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Add a code copy button for something that seems simple</title>
        <link>https://ttf248.life/en/p/add-code-copy-button/</link>
        <pubDate>Fri, 25 Feb 2022 01:23:39 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/add-code-copy-button/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;I spent four hours on it, and when I saw that sentence, I thought it was funny – how could it take so long? Then I looked at the time: three hours&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It&amp;rsquo;s considered the first draft of 2022. Nothing complicated to do, just exactly as the title says (I was still quite young then). I thought simply copying &lt;a class=&#34;link&#34; href=&#34;https://ouuan.github.io/post/from-hexo-to-hugo/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;the assignment&lt;/a&gt; would be enough, saved it in my bookmarks, and waited for over a month before finally remembering this thing.&lt;/p&gt;
&lt;p&gt;I always felt that Hugo had too few plugins when I migrated to it, and the inability to copy code made migrating notes from Evernote to my blog a cumbersome process. Copying code for those notes became tedious, seriously hindering my motivation to update my blog.&lt;/p&gt;
&lt;h2 id=&#34;prologue&#34;&gt;Prologue
&lt;/h2&gt;&lt;p&gt;Let&amp;rsquo;s take a close look at the original author&amp;rsquo;s draft, read it through and then check out their introduction. Wow, I’ve stumbled upon an expert – a full-time undergraduate student at Tsinghua who started working with computers very early on. Man, they&amp;rsquo;re really something. Let me check out this blog first; I completely forgot what I was supposed to do. Oh, and let&amp;rsquo;s also take a look at the author&amp;rsquo;s &lt;code&gt;Github&lt;/code&gt; repository. This modified &lt;code&gt;even&lt;/code&gt; theme is much better than the current one – it has so many new features. Let’s get it done. First, merge the relevant code over here.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/add-code-copy-button/2022-02-25-02-08-19.png&#34;
	width=&#34;215&#34;
	height=&#34;150&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;143&#34;
		data-flex-basis=&#34;344px&#34;
	
&gt; &lt;img src=&#34;https://ttf248.life/p/add-code-copy-button/2022-02-25-02-08-40.png&#34;
	width=&#34;217&#34;
	height=&#34;167&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;129&#34;
		data-flex-basis=&#34;311px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;new-feature-view-article-history-and-related-submission-records&#34;&gt;New feature: View article history and related submission records
&lt;/h3&gt;&lt;p&gt;The effect is still pretty good; you can experience it by scrolling to the end of the article&lt;/p&gt;
&lt;p&gt;I didn&amp;rsquo;t really look at the author’s repository history before starting, thinking a simple merge would be fine. In the end, I merged a bunch of code, with conflicts and numerous iterations. I blindly overwrote things, mostly frontend and rendering templates, prioritizing what I wanted.&lt;/p&gt;
&lt;p&gt;Repository address: &lt;a class=&#34;link&#34; href=&#34;https://github.com/TianlongXiang/hugo-theme-even&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/TianlongXiang/hugo-theme-even&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A pitfall with Chinese documentation is that if you don&amp;rsquo;t adjust this parameter, &lt;code&gt;git&lt;/code&gt; won&amp;rsquo;t be able to retrieve the current article&amp;rsquo;s &lt;code&gt;commit hash&lt;/code&gt;, leading to failed generation of historical links. You also need to modify the automated integration script when generating a complete history of articles; remember to pull all historical records from the current repository.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Attempting to pull the complete GitHub repository for dynamically updating the record of last modification time for articles&lt;/li&gt;
&lt;li&gt;Path exists in Chinese, Hugo GitInfo needs this setting enabled&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;name: Build Github
run: git config --global core.quotePath false &amp;amp;&amp;amp; hugo -b &amp;quot;https://www.xiangtianlong.com/&amp;quot; -d &amp;quot;github_public&amp;quot; &amp;amp;&amp;amp; ls
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;style-adjustments&#34;&gt;Style adjustments
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Adjust the site content width. The previous design was suitable for both mobile and desktop, but in reality, no one views it on their phone; I even view it on my computer myself.&lt;/li&gt;
&lt;li&gt;The directory bar supports auto-sizing&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;main-body&#34;&gt;Main body
&lt;/h2&gt;&lt;p&gt;I spent over half an hour looking at &lt;code&gt;ouuan&lt;/code&gt;&amp;rsquo;s code, but I still don’t really understand how to add the copy button&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Time passes, and after a month, I thought of this again&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Since I didn&amp;rsquo;t understand this assignment, let’s just copy another one; I should be able to figure it out eventually. The search results were surprisingly good – there was even a post in the &lt;code&gt;hugo&lt;/code&gt; official forum mentioning how to add a copy button. After checking it out, the logic is clear. Then something unexpected happened: when I looked at the site, the code block style rendered by &lt;code&gt;even&lt;/code&gt; differed from the description in the documentation. This part is a bit complicated, so here’s a brief record.&lt;/p&gt;
&lt;p&gt;Because I barely understood front-end development, whenever I didn&amp;rsquo;t understand something, I would open the browser&amp;rsquo;s &amp;ldquo;Inspect Element,&amp;rdquo; analyze the code, and rely on the style information on the right. Slowly, I began to understand the logic. I didn’t understand JavaScript, so I added some logs in the console. There were many things I didn&amp;rsquo;t understand, but I calmed down, slowly sorted out and broke down the logic, and eventually found a way forward.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;There are multiple &lt;code&gt;pre&lt;/code&gt; nodes, referring here to a single code block. The theme renders line numbers, resulting in two copy buttons appearing.&lt;/li&gt;
&lt;li&gt;I want code highlighting in the theme, but I&amp;rsquo;m not familiar with how to set it up in this theme&lt;/li&gt;
&lt;li&gt;I looked at the documentation on the Hugo website, and I understand that there&amp;rsquo;s a markup setting to control code highlighting&lt;/li&gt;
&lt;li&gt;Adjusting the configuration file, it&amp;rsquo;s always been wrong, and the rendering doesn&amp;rsquo;t match expectations&lt;/li&gt;
&lt;li&gt;I found these settings for &lt;code&gt;pygmentsOptions&lt;/code&gt;, continued researching, adjusted the settings, and first removed the line numbers&lt;/li&gt;
&lt;li&gt;Configure custom CSS stylesheets and configure custom JS scripts&lt;/li&gt;
&lt;li&gt;Since we&amp;rsquo;ve gotten things to this point, it suddenly occurred to me that I saw a color scheme recently that was pretty good. Let’s change the button style: going with a Chinese-style celadon blue.&lt;/li&gt;
&lt;/ol&gt;
&lt;img class=&#34;special-img-class&#34; style=&#34;width:20%&#34; src=&#34;2022-02-25-02-01-22.png&#34; /&gt;
&lt;img class=&#34;special-img-class&#34; style=&#34;width:20%&#34; src=&#34;2022-02-25-02-01-33.png&#34; /&gt;
&lt;p&gt;I spent four hours on it, and when I saw that sentence, I thought it was funny – how could it take so long? Then I looked at the time: three hours&lt;/p&gt;
&lt;h2 id=&#34;reference-link&#34;&gt;Reference link
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://ouuan.github.io/post/from-hexo-to-hugo/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://ouuan.github.io/post/from-hexo-to-hugo/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gohugobrasil.netlify.app/content-management/syntax-highlighting/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gohugobrasil.netlify.app/content-management/syntax-highlighting/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/getting-started/configuration-markup#highlight&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gohugo.io/getting-started/configuration-markup#highlight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.dannyguo.com/blog/how-to-add-copy-to-clipboard-buttons-to-code-blocks-in-hugo/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.dannyguo.com/blog/how-to-add-copy-to-clipboard-buttons-to-code-blocks-in-hugo/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>Website acceleration and domain settings</title>
        <link>https://ttf248.life/en/p/website-acceleration-and-domain-setup/</link>
        <pubDate>Sat, 20 Jun 2020 10:36:27 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/website-acceleration-and-domain-setup/</guid>
        <description>&lt;p&gt;Due to slow access to GitHub Pages within China, the author applied for a personal domain name and purchased CDN acceleration services from a domestic cloud hosting provider. During the configuration process, the author encountered an issue where the www subdomain was inaccessible. The problem was eventually resolved by deleting the wildcard domain resolution and setting up the second-level domain separately. The author also shared the principles and configuration experience of CDN acceleration, as well as the attempts and lessons learned from using Nginx reverse proxy.&lt;/p&gt;
&lt;h3 id=&#34;background&#34;&gt;Background
&lt;/h3&gt;&lt;p&gt;The website is hosted on GitHub Pages, and due to some well-known reasons, accessing GitHub Pages from within China can be slow. Therefore, I applied for a personal domain name and purchased CDN acceleration services from a domestic cloud hosting provider. When setting up the acceleration service, I remembered that I had a development machine with Docker, frp, k8s, and other services deployed, all of which have corresponding dashboards. Following the principle of not wasting resources, I configured several reverse proxies and linked them to subdomains.&lt;/p&gt;
&lt;p&gt;When I was happily using my second-level domain, I suddenly found that the www subdomain was inaccessible. In Alibaba Cloud, DNS was configured to resolve simultaneously to both &lt;a class=&#34;link&#34; href=&#34;https://www.xiangtianlong.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;www.xiangtianlong.com&lt;/a&gt; and xiangtianlong.com. When CDN acceleration had not been enabled yet, both domains worked normally.&lt;/p&gt;
&lt;p&gt;When configuring CDN acceleration, due to having too many subdomains, a wildcard domain rule was enabled, routing everything to the development machine. This resulted in the www subdomain also going down. Yes, you read that right, www is a subdomain. The actual website is deployed on GitHub Pages, and the development machine has no cached web content.&lt;/p&gt;
&lt;p&gt;Regarding why the site wasn&amp;rsquo;t deployed on the development machine, it’s because it’s a static blog and paired with GitHub Actions, which automatically integrates and publishes – it’s really great&lt;/p&gt;
&lt;h3 id=&#34;domain-name&#34;&gt;Domain name
&lt;/h3&gt;&lt;p&gt;Non-professional web development doesn&amp;rsquo;t involve SEO or cross-domain issues when it comes to understanding domain names. For a blog site, using a bare domain can highlight the blogger’s site—this refers to people like me who use Chinese pinyin as their domain name—and with most access now being mobile, it allows for fewer characters to be entered.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The desktop version allows you to skip typing www and com using keyboard shortcuts&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;cdn&#34;&gt;CDN
&lt;/h3&gt;&lt;p&gt;I&amp;rsquo;ve used both Aliyun and Tencent Cloud, it’s not difficult for new users to get started. Tencent Cloud even has a video explaining the related concepts. The principle of CDN acceleration is the same as that of JD&amp;rsquo;s warehouse: when launching new products, they are pre-distributed to warehouses across the country, and when a delivery request is triggered, they are distributed from the nearest location.&lt;/p&gt;
&lt;p&gt;Return address: The original address where website resources were stored&lt;/p&gt;
&lt;p&gt;Cache file settings, browser F12, management console, simple analysis of static and dynamic resources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All 0 days validity&lt;/li&gt;
&lt;li&gt;0-day validity for .php, .jsp, .asp, .aspx&lt;/li&gt;
&lt;li&gt;.jpg, .png, .js, .css, .woff2 1-day validity&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tencent Cloud Configuration Rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cache expiration rules can be configured up to 10 entries&lt;/li&gt;
&lt;li&gt;The priority among multiple cache expiration rules is bottom-up&lt;/li&gt;
&lt;li&gt;The cache expiration time can be set up to a maximum of 365 days&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;a-lamentable-confession&#34;&gt;A Lamentable Confession
&lt;/h3&gt;&lt;p&gt;I hadn&amp;rsquo;t used Nginx before, and I thought I could understand the configuration of reverse proxy by simply searching online. But it was a bit confusing, and after fiddling with it for half a day, I couldn&amp;rsquo;t even figure out a 302 redirect. It was useless. So I decided to try a simple approach: deleting the wildcard domain resolution mode and setting up each second-level domain independently. That’s when I suddenly noticed that Alibaba Cloud DNS had a feature called &amp;ldquo;Display URL Jump,&amp;rdquo; and after trying it, it turned out to be exactly what I wanted – a 302 redirect.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I got the first secondary domain working fine, but when I tried to set up the second one, it didn&amp;rsquo;t work. I was almost starting to doubt myself. Then suddenly it started working after a while. It seems like Aliyun’s DNS propagation occasionally glitches out.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;reference-materials&#34;&gt;Reference materials
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Why are more and more website domains not adding the &amp;ldquo;www&amp;rdquo; prefix?&lt;/li&gt;
&lt;li&gt;What is the difference between a domain with www and one without www?&lt;/li&gt;
&lt;li&gt;Docker nginx Reverse Proxy Setup&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>Blog IDE environment and random thoughts</title>
        <link>https://ttf248.life/en/p/blog-ide-environment-and-ramblings/</link>
        <pubDate>Tue, 31 Mar 2020 13:54:27 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/blog-ide-environment-and-ramblings/</guid>
        <description>&lt;p&gt;This article introduces the basic concepts of Markdown and its applications in various software. It recommends using VSCode as an IDE and lists recommended plugins. The author shares their experience switching from Hexo to Hugo, emphasizing Hugo&amp;rsquo;s flexibility and customization capabilities. Finally, it provides some tips for quickly getting started with new technologies and shares a trick for resolving the issue of Hugo theme styles not updating.&lt;/p&gt;
&lt;h2 id=&#34;preface&#34;&gt;Preface
&lt;/h2&gt;&lt;h3 id=&#34;markdown&#34;&gt;Markdown
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;A lightweight markup language that allows people to write documents in a readable and writable plain text format&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Detailed Markdown syntax will not be elaborated on in this article; a recommended ebook is available, &lt;a class=&#34;link&#34; href=&#34;https://markdown-zh.readthedocs.io/en/latest/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;click here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Many software on the market already support md as a writing format. The CSDN blog system launched an online editor that supports md syntax, and it comes with an introductory article about md syntax when you use it for the first time, which I think is pretty good; Evernote added support for md notes in 2018, with various md tag options in the quick bar, making it feel similar to editing regular articles, and the overall interactive process is friendly to beginners.&lt;/p&gt;
&lt;h3 id=&#34;ide-recommendations&#34;&gt;IDE recommendations
&lt;/h3&gt;&lt;p&gt;When writing this article, it&amp;rsquo;s already 2020. You must have heard of VS Code, after all, anyone who considers using Git Page to build a blog system is an industry professional. In earlier years, Sublime and Atom were also good choices. With two years of community support, VS Code has developed rapidly and gradually become the preferred entry point for beginners.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The relationship between Microsoft and the open-source community has transitioned from a state of separation to a honeymoon period: embracing open source. The company I work for has also actively introduced the Java ecosystem in recent years; in other words, the Java ecosystem is genuinely appealing for business development within China now.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;vs-code-extension-recommendations&#34;&gt;VS Code extension recommendations
&lt;/h3&gt;&lt;p&gt;Plugin List&lt;/p&gt;
&lt;p&gt;Plugins all have their own Readme files, introducing basic usage and core features; some plugin authors also provide dynamic effect demonstration images&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s very convenient to introduce images using the image plugin method of Hugo&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I haven&amp;rsquo;t memorized the shortcuts, so I opened the VS Code shortcut management menu and searched for &amp;ldquo;md,&amp;rdquo; looking at it several times; I reviewed the plugin usage instructions again&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;hugo&#34;&gt;hugo
&lt;/h2&gt;&lt;p&gt;As a writer, I&amp;rsquo;ve switched from &lt;code&gt;Hexo&lt;/code&gt; to &lt;code&gt;Hugo&lt;/code&gt;. My nature is to tinker and I simply couldn’t stand writing articles quietly without constantly experimenting.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Hugo supports placing images and md documents in separate folders&lt;/li&gt;
&lt;li&gt;Academic themes support various types of article styles in design&lt;/li&gt;
&lt;li&gt;Various convenient custom extensions&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;academic&#34;&gt;academic
&lt;/h2&gt;&lt;p&gt;The website defaults to &lt;code&gt;exampleSite&lt;/code&gt;, menu integration uses the &lt;code&gt;#component&lt;/code&gt; method, and using &lt;code&gt;url&lt;/code&gt; is recommended&lt;/p&gt;
&lt;p&gt;The URL pattern allows for single-page jumps when clicking on navigation, rather than scrolling on the homepage—this is purely a matter of personal preference&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Styles: Essays, Speeches, E-books&lt;/li&gt;
&lt;li&gt;Flexibility: Customize overall style, customize CSS styles&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This theme&amp;rsquo;s support for Chinese is not yet very complete, mainly from a visual perspective – the font size isn&amp;rsquo;t quite in line with Chinese reading habits. However, Hexo’s developers are mostly Chinese, which gives it an advantage over Hugo in this regard.&lt;/p&gt;
&lt;p&gt;However, it&amp;rsquo;s about doing things yourself and providing for your own needs. Inspect the browser elements. Once you’ve located the element, to know the CSS style name that needs modification, click &lt;strong&gt;Insert Style Rule Below&lt;/strong&gt; in the sidebar. Even with deeply nested CSS, you can easily get the node name.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introducing &lt;strong&gt;custom.css&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Introducing &lt;strong&gt;custom_js&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;The theme&amp;rsquo;s built-in syntax highlighting settings, &lt;a class=&#34;link&#34; href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/#highlighting-options.&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;official link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;The little one is about to complain again – why are you being so vague from beginning to end, not mentioning any details?&lt;/p&gt;
&lt;p&gt;What I want to say is, these things will be enough for you&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Official manual&lt;/li&gt;
&lt;li&gt;Plugin Description&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To quickly get started with new technologies, it&amp;rsquo;s recommended to first read the official documentation. Don’t worry about understanding everything on the first pass; at least get a general idea. Search engine results may not always be consistent with the latest version and could potentially mislead you. The same applies to reading new books – look at the table of contents first to understand what the author intends to cover. Sometimes, reading the preface is helpful; in some foreign works translated into Chinese, the translator&amp;rsquo;s preface often summarizes the book’s content and core ideas.&lt;/p&gt;
&lt;h2 id=&#34;easter-egg&#34;&gt;Easter egg
&lt;/h2&gt;&lt;p&gt;Switching to the built-in Hugo Academic style didn&amp;rsquo;t change the appearance when published to the site. Clever users probably already figured it out: clear your local browser cache, and the problem is solved. The ingenious me: F12 developer mode, switch to &lt;code&gt;network&lt;/code&gt;, check &lt;code&gt;disable cache&lt;/code&gt;, refresh, done!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ttf248.life/p/blog-ide-environment-and-ramblings/2020-03-31-14-27-15.png&#34;
	width=&#34;399&#34;
	height=&#34;142&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;network&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;280&#34;
		data-flex-basis=&#34;674px&#34;
	
&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>Automatic system switchover</title>
        <link>https://ttf248.life/en/p/auto-integration-system-switch/</link>
        <pubDate>Sun, 29 Mar 2020 02:11:33 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/auto-integration-system-switch/</guid>
        <description>&lt;p&gt;Automatically deploy a Hugo blog to GitHub Pages and Gitee using GitHub Actions&lt;/p&gt;
&lt;h4 id=&#34;background-introduction&#34;&gt;Background introduction
&lt;/h4&gt;&lt;p&gt;While updating my blog yesterday, I discovered that the Travis service was unavailable. Checking the Travis webpage, I saw that the progress was stuck on pulling the source code. Suddenly, I remembered the action service recently launched by GitHub.&lt;/p&gt;
&lt;p&gt;Given that it will be quite busy and requires an application to use action, now that it has officially launched, and with free time this weekend, why not try out a new toy?&lt;/p&gt;
&lt;p&gt;You can find all official documents on the website, so I won&amp;rsquo;t reproduce them here. If you’ve used Kubernetes before, you’ll notice that the YAML configuration for actions is very similar to it.&lt;/p&gt;
&lt;p&gt;For introductory tutorials or Chinese language resources, I recommend searching &lt;strong&gt;阮一峰&amp;rsquo;s blog&lt;/strong&gt;. There are two articles: the first is an introduction to basic grammar, and the second is a practical case study.&lt;/p&gt;
&lt;h4 id=&#34;main-body&#34;&gt;Main body
&lt;/h4&gt;&lt;p&gt;Required knowledge points&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;github secrets&lt;/li&gt;
&lt;li&gt;action grammar&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The core job is completed using existing components, pushed to domestic Gitee using commands. The command part is quite rough, all force pushes, and inherits the logic used with Travis.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;name: github pages and gitee pages

on:
  push:
    branches:
      - hugo

jobs:
  deploy:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: &#39;latest&#39;
          extended: true

      - name: Build Github and Gitee ## 单个step只能写一个run命令
        run: hugo -b &amp;quot;https://www.xiangtianlong.com/&amp;quot; -d &amp;quot;github_public&amp;quot; &amp;amp;&amp;amp; hugo -b &amp;quot;https://www.xiangtianlong.com/&amp;quot; -d &amp;quot;gitee_public&amp;quot; &amp;amp;&amp;amp; ls

      - name: Deploy Github
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.BLOG_TOKEN }}
          publish_dir: ./github_public
          publish_branch: master
          cname: xiangtianlong.com

      - name: Deploy Gitee
        run: cd ./gitee_public &amp;amp;&amp;amp; git init &amp;amp;&amp;amp; git config user.name &amp;quot;TianlongXiang&amp;quot; &amp;amp;&amp;amp; git config user.email &amp;quot;tianlongxiang51@gmail.com&amp;quot; &amp;amp;&amp;amp; git add . &amp;amp;&amp;amp; git commit -m &amp;quot;Update TianlongXiang&#39;s Blog&amp;quot; &amp;amp;&amp;amp; git push --force &amp;quot;https://xiangtianlong:${{ secrets.GITEE_PASSWORD }}@gitee.com/xiangtianlong/xiangtianlong.git&amp;quot; master:master   
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;afterword&#34;&gt;Afterword
&lt;/h4&gt;&lt;p&gt;Based on the actions provided by the official market, there are quite a few supported features currently available, and after building a Docker image, you no longer need to rely on services provided by Docker Hub&lt;/p&gt;
&lt;p&gt;I checked Hugo&amp;rsquo;s issues and found that when using GitHub Actions to automatically deploy Git Pages, the final published webpage needs to be on the master branch. If deployed to other branches, GitHub will display a message indicating that there are syntax problems with the deployment webpage in the settings interface.&lt;/p&gt;
&lt;p&gt;In reality, it&amp;rsquo;s because Hugo&amp;rsquo;s source files are located in the master branch, and GitHub is treating them as the source code for the Jelly blog, leading to errors that prevent checking and passing&lt;/p&gt;
&lt;p&gt;The solution is also simple: put the Hugo source files on another branch and publish the static files on the master branch&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
