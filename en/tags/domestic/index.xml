<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Domestic on Uncle Xiang&#39;s Notebook</title>
        <link>https://ttf248.life/en/tags/domestic/</link>
        <description>Recent content in Domestic on Uncle Xiang&#39;s Notebook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Sat, 16 Aug 2025 18:06:57 +0800</lastBuildDate><atom:link href="https://ttf248.life/en/tags/domestic/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>A Unexpected Software Uninstall Journey</title>
        <link>https://ttf248.life/en/p/a-unexpected-software-uninstall-journey/</link>
        <pubDate>Sat, 16 Aug 2025 17:55:50 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/a-unexpected-software-uninstall-journey/</guid>
        <description>&lt;p&gt;After reinstalling my system, I’ve consistently been missing a decent PDF reader. Within the 360 Software Center, I saw &lt;strong&gt;Xundu PDF&lt;/strong&gt; recommended, even with a “special edition.” I had already formed a slight impression of this brand at that point, wondering how a niche software like a PDF reader could possibly generate profits – surely the promotional costs wouldn’t pay off. Later, I encountered it again through Xunlei’s promotion, and my computer did indeed need one, so I conveniently installed it.&lt;/p&gt;
&lt;h2 id=&#34;everything-was-fine-until-the-weekend&#34;&gt;&lt;strong&gt;Everything was fine&amp;hellip; until the weekend&amp;hellip;&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;After installing the software, it worked perfectly without issue. I noticed some AI features within it, but they required a paid subscription – which wasn’t useful for me, so I didn&amp;rsquo;t purchase them. Back then, I naively thought, “How much money could those paid features really earn?”&lt;/p&gt;
&lt;p&gt;Until this weekend, when &lt;strong&gt;QQmusic&lt;/strong&gt; suddenly and inexplicably froze and crashed while I was developing locally. Instinctively, I opened Task Manager to see if there were any lingering processes. I discovered that the QQmusic process was still running but unresponsive, so after forcibly ending it, QQmusic could start up normally again.&lt;/p&gt;
&lt;p&gt;However, I inadvertently discovered a process named &amp;ldquo;&lt;strong&gt;PDF Engine&lt;/strong&gt;,&amp;rdquo; which was consuming nearly 10% of CPU usage – while the entire system’s resource utilization was only 19%. Curious, I checked the file path and found that it was actually my previously installed &lt;strong&gt;Xoon PDF!&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;loss-of-trust&#34;&gt;&lt;strong&gt;Loss of Trust&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;I don&amp;rsquo;t know if this is a defect in the software, but I’ve completely lost trust in it at this point.
Considering its widespread promotion, I can’t help but wonder where all those high promotional costs are coming from – they must be earned somehow. The clandestine running of strange tasks in the background seems almost “reasonable” in retrospect.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Docker Domestic Mirror Proxy Failed</title>
        <link>https://ttf248.life/en/p/docker-domestic-image-proxy-failure/</link>
        <pubDate>Sat, 04 Jan 2025 18:29:25 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/docker-domestic-image-proxy-failure/</guid>
        <description>&lt;p&gt;Deploying Docker on domestic servers, after deployment, if the company doesn’t provide a registry center, the first thing developers need to do is configure a domestic registry mirror address. It&amp;rsquo;s lucky that today there was a server configured with a registry mirror address, but when pulling images, it kept failing to pull.&lt;/p&gt;
&lt;p&gt;Error response from daemon: “https://registry-1.docker.io/v2/”: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)&lt;/p&gt;
&lt;!-- 20250106 – Two days after, all servers were restored, and this didn’t even make the news! All domestic registry mirrors went down --&gt;
&lt;h2 id=&#34;troubleshooting-and-repair-attempts&#34;&gt;Troubleshooting and Repair Attempts
&lt;/h2&gt;&lt;p&gt;Initially, we attempted to switch to alternative mirror acceleration addresses, hoping to resolve the issue. However, as expected, the problem persisted.&lt;/p&gt;
&lt;p&gt;Subsequently, we began modifying the local DNS configuration in an attempt to find a breakthrough at the network resolution level. Unfortunately, after debugging, the fault remained.&lt;/p&gt;
&lt;p&gt;At this point, the stability of the local network was heavily questioned, so we decisively switched to a mobile hotspot, attempting to bypass potential local network faults. However, the result was discouraging – there were no signs of improvement.&lt;/p&gt;
&lt;h2 id=&#34;problem-propagation&#34;&gt;Problem Propagation
&lt;/h2&gt;&lt;p&gt;We currently have &lt;strong&gt;a few servers deployed domestically&lt;/strong&gt; with Docker environments, and all of them failed to successfully pull the image. We initially hoped to find an alternative solution, but we found that they all consistently failed with identical error messages, indicating that the issue isn&amp;rsquo;t isolated to a single device.&lt;/p&gt;
&lt;p&gt;Further investigation revealed that the image proxy seemingly malfunctioned instantaneously. In this critical moment, we quickly switched to a machine outside of the country, and thankfully, image pulls were restored at this location. This suggests that the problem is likely related to the domestic network links or associated configurations.&lt;/p&gt;
&lt;h2 id=&#34;strategy-adjustment-circumventing-the-issue&#34;&gt;Strategy Adjustment: Circumventing the Issue
&lt;/h2&gt;&lt;p&gt;Given that direct image pulling methods within China have been heavily restricted, while foreign mirrors remain accessible, to expedite project progress, we’ve decided to employ a circumvention tactic. Initially, we switched to foreign servers to successfully pull the required images, subsequently pushing them to domestic mirror repositories to establish a “data bridge.”&lt;/p&gt;
&lt;p&gt;At the same time, we synchronized modifications to the Dockerfile files, replacing image addresses with those adapted for the Chinese environment and then rebuilt the images, ultimately achieving successful deployment.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
