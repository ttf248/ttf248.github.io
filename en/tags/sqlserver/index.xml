<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>SqlServer on Uncle Xiang&#39;s Notebook</title>
        <link>https://ttf248.life/en/tags/sqlserver/</link>
        <description>Recent content in SqlServer on Uncle Xiang&#39;s Notebook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Mon, 02 Jun 2025 20:54:02 +0800</lastBuildDate><atom:link href="https://ttf248.life/en/tags/sqlserver/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Bulk Modify SQL Server Database Disk File Permissions</title>
        <link>https://ttf248.life/en/p/bulk-modify-sqlserver-database-disk-permissions/</link>
        <pubDate>Tue, 23 Jan 2024 19:06:36 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/bulk-modify-sqlserver-database-disk-permissions/</guid>
        <description>&lt;p&gt;The company adjusted its security policies. Ultimately, ‘Mechanical Mini’ was relocated back home as a backup server, along with a full system reinstallation. Ubuntu switched to Windows Server; due to an irregular activation method – used at home – it seemed like it wouldn&amp;rsquo;t be activated, and that was fine. An unconventional activation triggered Microsoft’s detection (running normally for half a month), the server would automatically shut down after running for one hour. After reviewing the system logs, it was discovered that this was due to using a pirated version.&lt;/p&gt;
&lt;p&gt;There wasn’t much else to do, so the system was reinstalled again, and SQL Server also needed to be reinstalled – it&amp;rsquo;s always a bit of a pain each time. File permission control is very strict, making it impossible to attach the database normally.&lt;/p&gt;
&lt;h2 id=&#34;error-message&#34;&gt;Error Message
&lt;/h2&gt;&lt;p&gt;After the system reinstallation, &lt;code&gt;SqlServer&lt;/code&gt; may encounter error 5120, an operating system access denied error, when attaching a database.&lt;/p&gt;
&lt;h2 id=&#34;processing-script&#34;&gt;Processing Script
&lt;/h2&gt;&lt;p&gt;Referencing the previous link: &lt;a class=&#34;link&#34; href=&#34;https://ttf248.life/en/p/bulk-update-local-git-and-legacy-permissions/&#34; &gt;Batch Update Local Git Repository&lt;/a&gt;, it’s that familiar script all over again – modified to, we iterate through folders while modifying file permissions. Currently used with full editing permissions.&lt;/p&gt;
&lt;p&gt;Most tutorials online have you manually modify files. They only need to change a few files each time? I always have to process batches of files; doing everything manually is going to drive me crazy.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$currentUserName = [System.Security.Principal.WindowsIdentity]::GetCurrent().Name
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8
$rootDirectory = &amp;quot;D:\data\2013_RujiaInfo&amp;quot;

Get-ChildItem -Path $rootDirectory -Recurse | ForEach-Object {
    $itemPath = $_.FullName

    if ($_ -is [System.IO.DirectoryInfo]) {
        $icaclsResult = icacls $itemPath /setowner &amp;quot;$currentUserName&amp;quot; 2&amp;gt;&amp;amp;1
        if ($LASTEXITCODE -eq 0) {
            Write-Host &amp;quot;Changed the owner of folder $itemPath to $currentUserName&amp;quot;
            # Grant current user write permissions
            Invoke-Expression &amp;quot;icacls `&amp;quot;$itemPath`&amp;quot; /grant `&amp;quot;$($currentUserName):(OI)(CI)F`&amp;quot;&amp;quot;
            Write-Host &amp;quot;Granted $currentUserName editing permissions for the folder&amp;quot;
        } else {
            Write-Host &amp;quot;Unable to change the owner of folder $itemPath. Error message: $icaclsResult&amp;quot;
        }
    } else {
        $takeownResult = icacls $itemPath /setowner &amp;quot;$currentUserName&amp;quot; 2&amp;gt;&amp;amp;1
        if ($LASTEXITCODE -eq 0) {
            # Grant current user write permissions
            Invoke-Expression &amp;quot;icacls `&amp;quot;$itemPath`&amp;quot; /grant `&amp;quot;$($currentUserName):(F)`&amp;quot;&amp;quot;
            Write-Host &amp;quot;Granted $currentUserName editing permissions for the file&amp;quot;
        } else {
            Write-Host &amp;quot;Unable to change the owner of file $itemPath. Error message: $takeownResult&amp;quot;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
        
    </channel>
</rss>
