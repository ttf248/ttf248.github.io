<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>SqlServer on Uncle Xiang&#39;s Notebook</title>
        <link>https://ttf248.life/en/tags/sqlserver/</link>
        <description>Recent content in SqlServer on Uncle Xiang&#39;s Notebook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Sun, 25 May 2025 02:57:45 +0800</lastBuildDate><atom:link href="https://ttf248.life/en/tags/sqlserver/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Batch modification of SQL Server database disk file permissions</title>
        <link>https://ttf248.life/en/p/bulk-modify-sqlserver-database-disk-file-permissions/</link>
        <pubDate>Tue, 23 Jan 2024 19:06:36 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/bulk-modify-sqlserver-database-disk-file-permissions/</guid>
        <description>&lt;p&gt;The company&amp;rsquo;s security policy has been adjusted, and &lt;code&gt;Mechanical Master mini&lt;/code&gt; was ultimately moved back home as a backup server. The machine system was also reinstalled, and &lt;code&gt;Ubuntu&lt;/code&gt; switched to &lt;code&gt;Windows Server&lt;/code&gt;. Since the activation method wasn’t legitimate, it seems fine without activating when used at home.&lt;/p&gt;
&lt;p&gt;Activating through unconventional means triggered Microsoft&amp;rsquo;s detection (it had been running normally for half a month). The server shut down automatically after one hour of being turned on. After checking the system logs, it was discovered to be due to piracy.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s no way around it, I have to reinstall the system again. &lt;code&gt;SqlServer&lt;/code&gt; also needs a reinstall. Each time is quite troublesome; strict file permission controls prevent me from properly attaching the database.&lt;/p&gt;
&lt;h2 id=&#34;error-message&#34;&gt;Error message
&lt;/h2&gt;&lt;p&gt;After reinstalling the system, an error of 5120 and access denied may occur when attaching a database in &lt;code&gt;SqlServer&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;process-script&#34;&gt;Process script
&lt;/h2&gt;&lt;p&gt;The link to the previous article: &lt;a class=&#34;link&#34; href=&#34;https://ttf248.life/en/p/bulk-update-local-git-repository-and-legacy-permission-issues/&#34; &gt;Batch Update Local Git Repository&lt;/a&gt;. It&amp;rsquo;s this familiar script again, modified so that while we traverse the folders, we also change the file permissions to grant full editing rights.&lt;/p&gt;
&lt;p&gt;Most of the online tutorials require you to manually modify things. Do they only need to change a few files each time? I have to deal with batches of files every time, all manually – it&amp;rsquo;s enough to make someone feel depressed.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$currentUserName = [System.Security.Principal.WindowsIdentity]::GetCurrent().Name
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8
$rootDirectory = &amp;quot;D:\data\2013_RujiaInfo&amp;quot;

Get-ChildItem -Path $rootDirectory -Recurse | ForEach-Object {
    $itemPath = $_.FullName

    if ($_ -is [System.IO.DirectoryInfo]) {
        $icaclsResult = icacls $itemPath /setowner &amp;quot;$currentUserName&amp;quot; 2&amp;gt;&amp;amp;1
        if ($LASTEXITCODE -eq 0) {
            Write-Host &amp;quot;已更改文件夹 $itemPath 的所有者为 $currentUserName&amp;quot;
            # 授予当前用户写入权限
            Invoke-Expression &amp;quot;icacls `&amp;quot;$itemPath`&amp;quot; /grant `&amp;quot;$($currentUserName):(OI)(CI)F`&amp;quot;&amp;quot;
            Write-Host &amp;quot;已授予 $currentUserName 编辑文件夹的权限&amp;quot;
        } else {
            Write-Host &amp;quot;无法更改文件夹 $itemPath 的所有者。错误信息: $icaclsResult&amp;quot;
        }
    } else {
        $takeownResult = icacls $itemPath /setowner &amp;quot;$currentUserName&amp;quot; 2&amp;gt;&amp;amp;1
        if ($LASTEXITCODE -eq 0) {
            # 授予当前用户写入权限
            Invoke-Expression &amp;quot;icacls `&amp;quot;$itemPath`&amp;quot; /grant `&amp;quot;$($currentUserName):(F)`&amp;quot;&amp;quot;
            Write-Host &amp;quot;已授予 $currentUserName 编辑文件的权限&amp;quot;
        } else {
            Write-Host &amp;quot;无法更改文件 $itemPath 的所有者。错误信息: $takeownResult&amp;quot;
        }
    }
}

&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        
    </channel>
</rss>
