<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Character-Sets on Uncle Xiang&#39;s Notebook</title>
        <link>https://ttf248.life/en/tags/character-sets/</link>
        <description>Recent content in Character-Sets on Uncle Xiang&#39;s Notebook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Mon, 02 Jun 2025 19:00:25 +0800</lastBuildDate><atom:link href="https://ttf248.life/en/tags/character-sets/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Visual Studio Compilation Character Set [Converted]</title>
        <link>https://ttf248.life/en/p/visual-studio-character-set/</link>
        <pubDate>Thu, 04 Aug 2022 10:51:43 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/visual-studio-character-set/</guid>
        <description>&lt;p&gt;&lt;code&gt;C++&lt;/code&gt; cross-platform development. Commonly encountered on Chinese operating systems: &lt;code&gt;error C2001&lt;/code&gt;: constant string contains a newline character.&lt;/p&gt;
&lt;h2 id=&#34;visual-studio&#34;&gt;Visual Studio
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;cmake&lt;/code&gt; organizes project compilation scripts, generating a temporary solution under the &lt;code&gt;windows&lt;/code&gt; system for development. The reason for cross-platform compatibility is that the file encoding is chosen as &lt;code&gt;utf-8&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Reference materials thoroughly explain the causes of the problem from first principles.&lt;/p&gt;
&lt;p&gt;Regarding encoding, &lt;code&gt;MSVC&lt;/code&gt; has dedicated compilation options &lt;code&gt;/source-charset&lt;/code&gt; and &lt;code&gt;/execution-charset&lt;/code&gt;. The former indicates the encoding of the file itself, and the latter indicates what encoding the byte sequence within the compiled character array is. Encoding issues can generally be solved using these two options.&lt;/p&gt;
&lt;p&gt;For example, the &lt;code&gt;windows&lt;/code&gt; &lt;code&gt;cmd&lt;/code&gt; console defaults to displaying &lt;code&gt;gbk&lt;/code&gt; encoding, but since the code file itself is &lt;code&gt;utf-8&lt;/code&gt;, and it&amp;rsquo;s not convenient to directly change it to &lt;code&gt;gbk&lt;/code&gt; due to cross-platform considerations, we donâ€™t include writing conversion code for different platforms here. On &lt;code&gt;Win10&lt;/code&gt;, you can set these two compilation options to &lt;code&gt;/source-charset:utf-8 /execution-charset:gbk&lt;/code&gt;, indicating that the compiler should read in with &lt;code&gt;UTF-8&lt;/code&gt; encoding and then convert it to &lt;code&gt;GBK&lt;/code&gt; for storage within the array. This allows direct use of &lt;code&gt;printf&lt;/code&gt; to display Chinese characters normally in the &lt;code&gt;cmd&lt;/code&gt; console.&lt;/p&gt;
&lt;h2 id=&#34;cmake-configuration-for-visual-studio&#34;&gt;CMake Configuration for Visual Studio
&lt;/h2&gt;&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;if(WIN32)
    message(STATUS &amp;quot;Configuring trade on WIN32&amp;quot;)
    set(CMAKE_CXX_FLAGS &amp;quot;${CMAKE_CXX_FLAGS} /source-charset:utf-8 /execution-charset:gbk&amp;quot;)
endif()
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;references&#34;&gt;References
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/146543940&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://zhuanlan.zhihu.com/p/146543940&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
