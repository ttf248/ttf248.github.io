<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Visual Studio on Uncle Xiang&#39;s Notebook</title>
        <link>https://ttf248.life/en/tags/visual-studio/</link>
        <description>Recent content in Visual Studio on Uncle Xiang&#39;s Notebook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Sun, 25 May 2025 03:15:22 +0800</lastBuildDate><atom:link href="https://ttf248.life/en/tags/visual-studio/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Loading mismatched PDB files in Visual Studio</title>
        <link>https://ttf248.life/en/p/visual-studio-loading-unmatched-pdb-files/</link>
        <pubDate>Thu, 23 Jan 2025 20:04:33 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/visual-studio-loading-unmatched-pdb-files/</guid>
        <description>&lt;p&gt;When debugging a program in Visual Studio on Windows, if the PDB file does not match the executable file, Visual Studio will prompt &amp;ldquo;Unable to load symbol file.&amp;rdquo; If the program crashes and a crash dump file is generated, Visual Studio may also fail to smoothly enter the crash site if the PDB file is mismatched&lt;/p&gt;
&lt;h2 id=&#34;what-is-a-pdb-file&#34;&gt;What is a pdb file?
&lt;/h2&gt;&lt;p&gt;PDB files are debugging information files created by Microsoft, used for debugging programs. They contain information such as program symbol tables, source file names, and line numbers. PDB files can be generated during program compilation for debugging purposes.&lt;/p&gt;
&lt;h2 id=&#34;debugging-with-windbg&#34;&gt;Debugging with WinDbg
&lt;/h2&gt;&lt;p&gt;WinDbg is a debugging tool from Microsoft that can be used to debug Windows programs. WinDbg can load mismatched PDB files, but they need to be loaded manually. The &lt;code&gt;.reload /f /i&lt;/code&gt; command can force the loading of mismatched PDB files.&lt;/p&gt;
&lt;p&gt;However, WinDbg is not as convenient to use as Visual Studio, so we hope that Visual Studio can also load mismatched PDB files&lt;/p&gt;
&lt;h2 id=&#34;visual-studio-loading-mismatched-pdb-file&#34;&gt;Visual Studio loading mismatched PDB file
&lt;/h2&gt;&lt;p&gt;Source code is generally managed through git now, so it&amp;rsquo;s possible to find the corresponding version of the code, recompile it, and generate the corresponding pdb file. Why can’t it be loaded? It’s mainly due to metadata mismatches.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s a small tool that can modify metadata, generate a new PDB file based on the executable file information, allowing Visual Studio to load it&lt;/p&gt;
&lt;p&gt;chkmatch download address: [https://www.debuginfo.com/tools/chkmatch.html]&lt;/p&gt;
&lt;p&gt;Site cache address: &lt;a class=&#34;link&#34; href=&#34;chkmatch.zip&#34; &gt;chkmatch.zip&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ChkMatch utility can be used to check whether an executable and debug information file match. It can also be used to enforce matching between an executable and debug information file, if they are compatible.

For more information about debug information matching and related issues, see this article.

Supported debug information formats: DBG, PDB 2.0, PDB 7.0.

chkmatch [-c ExeFile DebugInfoFile ] |
         [-m ExeFile DebugInfoFile]
-c
Check matching between the executable and the debug information file.
-m
Make the executable and the debug information file match.
ExeFile
The name of the executable file.
DebugInfoFile
The name of the debug information file.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;use-chkmatch&#34;&gt;Use chkmatch
&lt;/h2&gt;&lt;p&gt;First, perform a verification check, analyze the reason for the mismatch, and prompt that the signature does not match&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;C:\Users\tianlong.xiang\Downloads\chkmatch&amp;gt;ChkMatch.exe -c &amp;quot;D:\Program Files\Rolan\trade\UAT_YinStrade\YinTrade.Main.exe&amp;quot; E:\YinTech\ykcz_securities_trading_client\Sec_Trade\YinTrade.Main\bin\Release\YinTrade.Main.pdb
ChkMatch - version 1.0
Copyright (C) 2004 Oleg Starodumov
http://www.debuginfo.com/


Executable: D:\Program Files\Rolan\trade\UAT_YinStrade\YinTrade.Main.exe
Debug info file: E:\YinTech\ykcz_securities_trading_client\Sec_Trade\YinTrade.Main\bin\Release\YinTrade.Main.pdb

Executable:
TimeDateStamp: c26d9be3
Debug info: 2 ( CodeView )
TimeStamp: f86b0a4f  Characteristics: 0  MajorVer: 0  MinorVer: 0
Size: 122  RVA: 001cdc44  FileOffset: 001cbe44
CodeView format: RSDS
Signature: {428c9b95-39a3-4a8d-a8e5-7be453684757}  Age: 1
PdbFile: D:\stock_UAT\ykcz_securities_trading_client\Sec_Trade\YinTrade.Main\obj\Release\YinTrade.Main.pdb
Debug info: 16 ( Unknown )
TimeStamp: 00000000  Characteristics: 0  MajorVer: 0  MinorVer: 0
Size: 0  RVA: 00000000  FileOffset: 00000000

Debug information file:
Format: PDB 7.00
Signature: {06fae08e-c0a2-4f3d-9c7c-dfc684445dd1}  Age: 1

Result: Unmatched (reason: Signature mismatch)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then perform modification operations to make the PDB file match the EXE file&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;C:\Users\tianlong.xiang\Downloads\chkmatch&amp;gt;ChkMatch.exe -m &amp;quot;D:\Program Files\Rolan\trade\UAT_YinStrade\YinTrade.Main.exe&amp;quot; E:\YinTech\ykcz_securities_trading_client\Sec_Trade\YinTrade.Main\bin\Release\YinTrade.Main.pdb
ChkMatch - version 1.0
Copyright (C) 2004 Oleg Starodumov
http://www.debuginfo.com/


Executable: D:\Program Files\Rolan\trade\UAT_YinStrade\YinTrade.Main.exe
Debug info file: E:\YinTech\ykcz_securities_trading_client\Sec_Trade\YinTrade.Main\bin\Release\YinTrade.Main.pdb

Executable:
TimeDateStamp: c26d9be3
Debug info: 2 ( CodeView )
TimeStamp: f86b0a4f  Characteristics: 0  MajorVer: 0  MinorVer: 0
Size: 122  RVA: 001cdc44  FileOffset: 001cbe44
CodeView format: RSDS
Signature: {428c9b95-39a3-4a8d-a8e5-7be453684757}  Age: 1
PdbFile: D:\stock_UAT\ykcz_securities_trading_client\Sec_Trade\YinTrade.Main\obj\Release\YinTrade.Main.pdb
Debug info: 16 ( Unknown )
TimeStamp: 00000000  Characteristics: 0  MajorVer: 0  MinorVer: 0
Size: 0  RVA: 00000000  FileOffset: 00000000

Debug information file:
Format: PDB 7.00
Signature: {06fae08e-c0a2-4f3d-9c7c-dfc684445dd1}  Age: 1

Writing to the debug information file...
Result: Success.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;reference-materials&#34;&gt;Reference materials
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/38147487/forcing-to-load-unmatched-symbols-in-visual-studio-2015-debugger&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;forcing-to-load-unmatched-symbols-in-visual-studio-2015-debugger&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>Visual Studio character set compilation [transfer]</title>
        <link>https://ttf248.life/en/p/visual-studio-compilation-character-set-translation/</link>
        <pubDate>Thu, 04 Aug 2022 10:51:43 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/visual-studio-compilation-character-set-translation/</guid>
        <description>&lt;p&gt;Cross-platform development in C++ often encounters on Chinese operating systems: &lt;code&gt;error C2001&lt;/code&gt; newline character in constant&lt;/p&gt;
&lt;h2 id=&#34;visual-studio&#34;&gt;visual studio
&lt;/h2&gt;&lt;p&gt;CMake organizes project compilation scripts; when developing on the Windows system, it temporarily generates a solution; due to cross-platform reasons, the file encoding is chosen as UTF-8&lt;/p&gt;
&lt;p&gt;The cited materials provide a detailed explanation of the cause of the problem from a theoretical perspective&lt;/p&gt;
&lt;p&gt;Regarding encoding, &lt;code&gt;MSVC&lt;/code&gt; has specific compilation options &lt;code&gt;/source-charset&lt;/code&gt; and &lt;code&gt;/execution-charset&lt;/code&gt;. The former indicates the encoding of the file itself, while the latter indicates what encoding the bytes within the character array are after compilation. Encoding issues can generally be resolved using these two options.&lt;/p&gt;
&lt;p&gt;For example, the &lt;code&gt;cmd&lt;/code&gt; console in &lt;code&gt;windows&lt;/code&gt; can only display &lt;code&gt;GBK&lt;/code&gt; encoding by default, but the code file itself is &lt;code&gt;UTF-8&lt;/code&gt;. Due to cross-platform compatibility, it&amp;rsquo;s not convenient to directly modify it to &lt;code&gt;GBK&lt;/code&gt;. Of course, this doesn&amp;rsquo;t include methods like writing encoding conversion code for different platforms. On &lt;code&gt;Win10&lt;/code&gt;, you can set these two compilation options to &lt;code&gt;/source-charset:utf-8 /execution-charset:gbk&lt;/code&gt;, which means letting the compiler read in with &lt;code&gt;UTF-8&lt;/code&gt; encoding and then convert it to &lt;code&gt;GBK&lt;/code&gt; and save it in an array, so that &lt;code&gt;printf&lt;/code&gt; can directly display Chinese characters normally on the &lt;code&gt;cmd&lt;/code&gt; console.&lt;/p&gt;
&lt;h2 id=&#34;cmake-settings-for-visual-studio&#34;&gt;CMake settings for Visual Studio
&lt;/h2&gt;&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;if( WIN32 )
    message( STATUS &amp;quot;Configuring trade on WIN32&amp;quot;)
    set( CMAKE_CXX_FLAGS &amp;quot;${CMAKE_CXX_FLAGS} /source-charset:utf-8 /execution-charset:gbk&amp;quot;)
endif()
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;reference-materials&#34;&gt;Reference materials
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/146543940&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://zhuanlan.zhihu.com/p/146543940&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
    </channel>
</rss>
