<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Cultural Transmission on Uncle Xiang&#39;s Notebook</title>
        <link>https://ttf248.life/en/tags/cultural-transmission/</link>
        <description>Recent content in Cultural Transmission on Uncle Xiang&#39;s Notebook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Mon, 02 Jun 2025 21:59:58 +0800</lastBuildDate><atom:link href="https://ttf248.life/en/tags/cultural-transmission/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Blog Translation Project Musings: Cultural Transmission, AI Programming</title>
        <link>https://ttf248.life/en/p/blog-translation-project-musings-cultural-transmission-ai-programming/</link>
        <pubDate>Mon, 02 Jun 2025 21:41:00 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/blog-translation-project-musings-cultural-transmission-ai-programming/</guid>
        <description>&lt;p&gt;Cultural Propagation: Its ideological influence, subtle and pervasive.
AI Programming: Not performing software design, resulting in a lot of rework.&lt;/p&gt;
&lt;h2 id=&#34;cultural-propagation&#34;&gt;Cultural Propagation
&lt;/h2&gt;&lt;p&gt;Initially, the project only supported English, Japanese, and Korean. Thinking it was just AI translation, we wondered if supporting more languages wouldn’t be a good idea. So, French, Russian, and Hindi were added. At this point, no problems were detected; when the program executed translations, formatting issues arose due to historical code problems, requiring re-translation of archived articles.&lt;/p&gt;
&lt;p&gt;Statistical timing reminders indicated that it would take nearly 20 hours to complete all translations, given that it was a large local model with 12b parameters. Considering reducing translation time, we deleted French, Russian, and Hindi. This is when things started to feel wrong – why did I instinctively choose Korean and Japanese among the initially supported languages?&lt;/p&gt;
&lt;p&gt;According to global population distribution, these two languages had relatively small audiences, especially Korean, which had approximately 80 million users worldwide. Japanese was slightly more prevalent, with around 1.2 billion people. In contrast, French, Russian, and Hindi had user populations exceeding 100 million.&lt;/p&gt;
&lt;p&gt;At this point, we realized that the popularity of Korean and Japanese wasn’t due to the sheer number of language speakers, but rather the influence of cultural propagation. Korean and Japanese cultures have a wide-reaching impact globally, particularly in Asia. K-pop, anime, and television dramas attracted a large fanbase, leading these fans to naturally develop an interest in the corresponding languages.&lt;/p&gt;
&lt;p&gt;Looking back at our growth history, I frequently watched Japanese anime and manga as a child, and later watched many Korean films and TV series. This led me to instinctively choose these familiar languages when setting up the project’s initial language settings.&lt;/p&gt;
&lt;h3 id=&#34;software-design-and-ai-programming&#34;&gt;Software Design and AI Programming
&lt;/h3&gt;&lt;p&gt;The initial translation assistant was initially just a simple tool, but after experiencing Claude4’s coding capabilities, it gradually expanded its functionality, adding modules for article translation and tag translation. As the features increased, so did the code complexity. Although AI refactored the codebase to appear more organized, in expanding new functionalities or fixing bugs, AI-generated code often suffered from repetition issues.&lt;/p&gt;
&lt;p&gt;AI lacks a holistic understanding of overall structure and design principles when generating code. It typically modifies and extends existing code rather than effectively reusing existing modules, leading to redundant code. Manual cleanup of duplicate code is then required, which inadvertently increases development costs.&lt;/p&gt;
&lt;p&gt;Furthermore, while AI-generated code is syntactically correct, it often suffers from problems in logic and design. For example, a slight adjustment to the prompt in another project resulted in completely different webpage structures lacking consistency. This reflects a lack of proper initial design, with new features added arbitrarily and haphazardly, leading to a chaotic codebase.&lt;/p&gt;
&lt;p&gt;This also reminds us that core software engineering experience remains indispensable. A rational design not only reduces rework but also enhances code maintainability and extensibility. While AI is a powerful tool, it cannot replace human deep understanding and planning of systems.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
