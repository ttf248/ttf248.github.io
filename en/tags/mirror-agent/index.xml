<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Mirror Agent on Uncle Xiang&#39;s Notebook</title>
        <link>https://ttf248.life/en/tags/mirror-agent/</link>
        <description>Recent content in Mirror Agent on Uncle Xiang&#39;s Notebook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Sun, 25 May 2025 02:57:45 +0800</lastBuildDate><atom:link href="https://ttf248.life/en/tags/mirror-agent/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Docker domestic image proxy failure</title>
        <link>https://ttf248.life/en/p/docker-domestic-mirror-failure/</link>
        <pubDate>Sat, 04 Jan 2025 18:29:25 +0800</pubDate>
        
        <guid>https://ttf248.life/en/p/docker-domestic-mirror-failure/</guid>
        <description>&lt;p&gt;Deploying Docker on domestic servers. If the company doesn&amp;rsquo;t provide an image registry, developers must first configure a domestic mirror acceleration address. Conveniently, I have a server today that has been configured with a mirror acceleration address, but it canâ€™t pull images.&lt;/p&gt;
&lt;p&gt;Error response from daemon: Get &amp;ldquo;&lt;a class=&#34;link&#34; href=&#34;https://registry-1.docker.io/v2/%22&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://registry-1.docker.io/v2/&#34;&lt;/a&gt;: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)&lt;/p&gt;
&lt;p&gt;After two days, all servers have been restored, and surprisingly this didn&amp;rsquo;t trend. All domestic mirror proxies are down.&lt;/p&gt;
&lt;h2 id=&#34;troubleshooting-and-repair-attempts&#34;&gt;Troubleshooting and Repair Attempts
&lt;/h2&gt;&lt;p&gt;Initially, I tried switching to other mirror acceleration addresses hoping to resolve the issue, but it backfired and the problem persists&lt;/p&gt;
&lt;p&gt;Immediately, I began modifying the local DNS configuration, attempting to find a breakthrough at the network resolution level; unfortunately, after some debugging, the fault still persisted&lt;/p&gt;
&lt;p&gt;At this point, the stability of the local network was seriously questioned, so I immediately switched to my phone&amp;rsquo;s hotspot in an attempt to bypass any potential issues with the local network. However, the result was still frustrating; there were no signs of improvement.&lt;/p&gt;
&lt;h2 id=&#34;the-problem-is-spreading&#34;&gt;The problem is spreading
&lt;/h2&gt;&lt;p&gt;We still have several servers deployed domestically, all with Docker environments installed. I tried pulling images on these servers, hoping to find an alternative solution, but without exception, they failed to pull successfully. The error messages were identical across all devices, indicating the problem wasn&amp;rsquo;t limited to a single machine.&lt;/p&gt;
&lt;p&gt;Further investigation revealed that the mirror proxy seemed to have failed instantly. At this critical moment, we quickly switched to an overseas machine for a trial attempt. Fortunately, image pulling resumed here, which suggests the problem likely lies within the domestic network link or related configuration.&lt;/p&gt;
&lt;h2 id=&#34;strategic-adjustment-resolving-issues-indirectly&#34;&gt;Strategic adjustment: resolving issues indirectly
&lt;/h2&gt;&lt;p&gt;Given the numerous obstacles to directly pulling images within China, while foreign mirrors are accessible, in order to expedite project progress, we have decided to adopt a circumspect approach. First, switch to a foreign server to successfully pull the required images, then push them to a domestic mirror repository, thereby establishing a &amp;ldquo;data bridge.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;At the same time, I modified the Dockerfile and replaced the image address with one suitable for domestic environments, then rebuilt the image and successfully deployed it&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
